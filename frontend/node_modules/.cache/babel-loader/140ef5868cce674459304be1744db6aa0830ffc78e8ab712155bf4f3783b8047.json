{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Table, TableHead, TableRow, TableCell, TableBody, Button, Box, Checkbox, FormControlLabel } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport html2canvas from 'html2canvas'; // Убедись, что установлен\nimport { QRCodeSVG } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = ({\n  currentUser\n}) => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\n        const catsRes = await axios.get('http://localhost:5000/api/categories');\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        setAssets(assetsRes.data);\n        setDepartments(depsRes.data);\n        setStatuses(statsRes.data);\n        setCategories(catsRes.data);\n        setEmployees(empsRes.data);\n      } catch (err) {\n        console.error('Ошибка загрузки данных:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Форматирование даты\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    if (isNaN(date)) return '';\n    return `${String(date.getDate()).padStart(2, '0')}.${String(date.getMonth() + 1).padStart(2, '0')}.${date.getFullYear()}`;\n  };\n\n  // Форматирование имени сотрудника\n  const formatEmployeeName = employeeId => {\n    var _parts$, _parts$2;\n    if (!employeeId) return 'Не указан';\n    const employee = employees.find(emp => emp.id === employeeId);\n    if (!employee) return 'Не найден';\n    const parts = employee.name.split(' ');\n    const surname = parts[0] || '';\n    const firstInitial = ((_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.charAt(0).toUpperCase()) || '';\n    const patronymicInitial = ((_parts$2 = parts[2]) === null || _parts$2 === void 0 ? void 0 : _parts$2.charAt(0).toUpperCase()) || '';\n    return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}${patronymicInitial ? '.' : ''}`;\n  };\n\n  // Получение имени статуса\n  const getStatusName = statusId => {\n    const status = statuses.find(stat => stat.id === statusId);\n    return (status === null || status === void 0 ? void 0 : status.name) || 'Не указан';\n  };\n\n  // Получение имени отдела\n  const getDepartmentName = departmentId => {\n    const department = departments.find(d => d.id === departmentId);\n    return (department === null || department === void 0 ? void 0 : department.name) || 'Не указан';\n  };\n\n  // Фильтрация по строке поиска\n  const filteredAssets = assets.filter(asset => {\n    const searchLower = searchTerm.toLowerCase();\n    const fieldsToSearch = [asset.inventory_number, `${asset.type} ${asset.brand} ${asset.model}`, getStatusName(asset.status_id), formatEmployeeName(asset.responsible_person), getDepartmentName(asset.department_id), asset.room, formatDate(asset.purchase_date)].join(' ').toLowerCase();\n    return fieldsToSearch.includes(searchLower);\n  });\n\n  // Сортировка\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\n    let comparison = 0;\n    switch (sortColumn) {\n      case 'inventory_number':\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, {\n          numeric: true\n        });\n        break;\n      case 'purchase_date':\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\n        break;\n      case 'room':\n        const roomA = (a.room || '').toLowerCase();\n        const roomB = (b.room || '').toLowerCase();\n        comparison = roomA.localeCompare(roomB);\n        break;\n      default:\n        return 0;\n    }\n    if (sortOrder === 'desc') {\n      comparison = -comparison;\n    }\n    return comparison;\n  });\n\n  // Обработчик клика по заголовку для сортировки\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortOrder('asc');\n    }\n  };\n\n  // Обработчик изменения чекбокса\n  const handleCheckboxChange = id => {\n    setSelectedAssets(prev => prev.includes(id) ? prev.filter(assetId => assetId !== id) : [...prev, id]);\n  };\n\n  // Массовое удаление\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\n    try {\n      await axios.delete('http://localhost:5000/api/assets', {\n        data: {\n          ids: selectedAssets\n        }\n      });\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\n      setSelectedAssets([]);\n      alert('Выбранные активы успешно удалены');\n    } catch (err) {\n      alert('Ошибка при удалении активов');\n      console.error(err);\n    }\n  };\n\n  // Генерация QR-кодов для печати\n  const handlePrintQRCode = () => {\n    if (selectedAssets.length === 0) {\n      alert('Выберите хотя бы один актив для печати QR-кодов');\n      return;\n    }\n    const printWindow = window.open('', '_blank', 'width=800,height=600');\n    const selectedAssetsData = assets.filter(asset => selectedAssets.includes(asset.id));\n    let htmlContent = `\n      <html>\n        <head>\n          <style>\n            body {\n              display: flex;\n              flex-wrap: wrap;\n              gap: 10px;\n              padding: 10px;\n              background-color: #ffffff;\n            }\n            .qr-wrapper {\n              width: 3cm;\n              height: 3cm;\n              position: relative;\n              font-size: 10px;\n              text-align: center;\n            }\n            .top-left {\n              position: absolute;\n              top: 0;\n              left: 0;\n            }\n            .bottom-right {\n              position: absolute;\n              bottom: 0;\n              right: 0;\n            }\n            img {\n              width: 100%;\n              height: 100%;\n              object-fit: contain;\n            }\n          </style>\n        </head>\n        <body>\n    `;\n    selectedAssetsData.forEach(asset => {\n      const name = `${asset.type} ${asset.brand} ${asset.model}`;\n      const url = `http://localhost:3000/assets/${asset.id}`;\n\n      // Генерируем SVG напрямую через qrcode.react\n      const qrCanvas = document.createElement('canvas');\n      const ctx = qrCanvas.getContext('2d');\n      const size = 200;\n      qrCanvas.width = size;\n      qrCanvas.height = size;\n\n      // Рисуем QR-код\n      const qrCode = new QRCodeSVG({\n        value: url,\n        size: `${size}px`,\n        fgColor: '#000000'\n      });\n      const serializer = new XMLSerializer();\n      const svgStr = serializer.serializeToString(qrCode.querySelector('svg'));\n      htmlContent += `\n        <div class=\"qr-wrapper\">\n          <img src=\"data:image/svg+xml;base64,${btoa(svgStr)}\" />\n          <span class=\"top-left\">${name}</span>\n          <span class=\"bottom-right\">${asset.inventory_number}</span>\n        </div>\n      `;\n    });\n    htmlContent += '</body></html>';\n    printWindow.document.write(htmlContent);\n    setTimeout(() => {\n      printWindow.print();\n      printWindow.close();\n    }, 500);\n  };\n\n  // Предотвращение перехода с подтверждением\n  useEffect(() => {\n    const unblock = () => {\n      if (selectedAssets.length > 0 && location.pathname !== '/assets') {\n        const allowTransition = window.confirm('Снять выделение и перейти на другую страницу?');\n        if (!allowTransition) {\n          return true; // Блокируем переход\n        } else {\n          setSelectedAssets([]); // Снимаем выделение\n          return false;\n        }\n      }\n      return false;\n    };\n    const listener = (location, action) => {\n      if (action === 'PUSH' || action === 'POP') {\n        const shouldBlock = selectedAssets.length > 0;\n        if (shouldBlock && !window.confirm('Снять выделение и перейти на другую страницу?')) {\n          return () => {}; // Блокируем переход\n        } else {\n          setSelectedAssets([]); // Снимаем выделение\n          return undefined;\n        }\n      }\n    };\n    const unlisten = navigate(listener);\n    return () => {\n      unlisten();\n    };\n  }, [selectedAssets]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        fullWidth: true,\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => navigate('/assets/new'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          disabled: selectedAssets.length === 0,\n          onClick: handlePrintQRCode,\n          children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          disabled: selectedAssets.length === 0,\n          onClick: handleDeleteSelected,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.length === sortedAssets.length && selectedAssets.length > 0,\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < sortedAssets.length,\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedAssets(sortedAssets.map(a => a.id));\n                  } else {\n                    setSelectedAssets([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('inventory_number'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\", ' ', sortColumn === 'inventory_number' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('purchase_date'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\", ' ', sortColumn === 'purchase_date' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('room'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\", ' ', sortColumn === 'room' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedAssets.map(asset => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.includes(asset.id),\n                onChange: e => {\n                  e.stopPropagation();\n                  handleCheckboxChange(asset.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.inventory_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(asset.purchase_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: `${asset.type} ${asset.brand} ${asset.model}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getStatusName(asset.status_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatEmployeeName(asset.responsible_person)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getDepartmentName(asset.department_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, asset.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetList, \"AWsFq68IUOEDi8lWMBvpWWaQ+so=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AssetList;\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","TextField","Table","TableHead","TableRow","TableCell","TableBody","Button","Box","Checkbox","FormControlLabel","useNavigate","useLocation","html2canvas","QRCodeSVG","jsxDEV","_jsxDEV","AssetList","currentUser","_s","assets","setAssets","departments","setDepartments","statuses","setStatuses","categories","setCategories","employees","setEmployees","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortOrder","setSortOrder","selectedAssets","setSelectedAssets","navigate","location","fetchData","assetsRes","get","depsRes","statsRes","catsRes","empsRes","data","err","console","error","formatDate","dateString","date","Date","isNaN","String","getDate","padStart","getMonth","getFullYear","formatEmployeeName","employeeId","_parts$","_parts$2","employee","find","emp","id","parts","name","split","surname","firstInitial","charAt","toUpperCase","patronymicInitial","getStatusName","statusId","status","stat","getDepartmentName","departmentId","department","d","filteredAssets","filter","asset","searchLower","toLowerCase","fieldsToSearch","inventory_number","type","brand","model","status_id","responsible_person","department_id","room","purchase_date","join","includes","sortedAssets","sort","a","b","comparison","localeCompare","undefined","numeric","roomA","roomB","handleSort","column","handleCheckboxChange","prev","assetId","handleDeleteSelected","window","confirm","length","delete","ids","alert","handlePrintQRCode","printWindow","open","selectedAssetsData","htmlContent","forEach","url","qrCanvas","document","createElement","ctx","getContext","size","width","height","qrCode","value","fgColor","serializer","XMLSerializer","svgStr","serializeToString","querySelector","btoa","write","setTimeout","print","close","unblock","pathname","allowTransition","listener","action","shouldBlock","unlisten","maxWidth","children","elevation","style","padding","marginTop","variant","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","onChange","e","target","marginBottom","display","gap","mb","color","onClick","disabled","checked","indeterminate","map","sx","cursor","hover","stopPropagation","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/AssetList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas'; // Убедись, что установлен\r\nimport { QRCodeSVG } from 'qrcode.react';\r\n\r\nconst AssetList = ({ currentUser }) => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\r\n        const catsRes = await axios.get('http://localhost:5000/api/categories');\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n\r\n        setAssets(assetsRes.data);\r\n        setDepartments(depsRes.data);\r\n        setStatuses(statsRes.data);\r\n        setCategories(catsRes.data);\r\n        setEmployees(empsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки данных:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Форматирование даты\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    if (isNaN(date)) return '';\r\n    return `${String(date.getDate()).padStart(2, '0')}.${String(date.getMonth() + 1).padStart(2, '0')}.${date.getFullYear()}`;\r\n  };\r\n\r\n  // Форматирование имени сотрудника\r\n  const formatEmployeeName = (employeeId) => {\r\n    if (!employeeId) return 'Не указан';\r\n    const employee = employees.find(emp => emp.id === employeeId);\r\n    if (!employee) return 'Не найден';\r\n\r\n    const parts = employee.name.split(' ');\r\n    const surname = parts[0] || '';\r\n    const firstInitial = parts[1]?.charAt(0).toUpperCase() || '';\r\n    const patronymicInitial = parts[2]?.charAt(0).toUpperCase() || '';\r\n\r\n    return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}${patronymicInitial ? '.' : ''}`;\r\n  };\r\n\r\n  // Получение имени статуса\r\n  const getStatusName = (statusId) => {\r\n    const status = statuses.find(stat => stat.id === statusId);\r\n    return status?.name || 'Не указан';\r\n  };\r\n\r\n  // Получение имени отдела\r\n  const getDepartmentName = (departmentId) => {\r\n    const department = departments.find(d => d.id === departmentId);\r\n    return department?.name || 'Не указан';\r\n  };\r\n\r\n  // Фильтрация по строке поиска\r\n  const filteredAssets = assets.filter(asset => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    const fieldsToSearch = [\r\n      asset.inventory_number,\r\n      `${asset.type} ${asset.brand} ${asset.model}`,\r\n      getStatusName(asset.status_id),\r\n      formatEmployeeName(asset.responsible_person),\r\n      getDepartmentName(asset.department_id),\r\n      asset.room,\r\n      formatDate(asset.purchase_date),\r\n    ].join(' ').toLowerCase();\r\n    return fieldsToSearch.includes(searchLower);\r\n  });\r\n\r\n  // Сортировка\r\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\r\n    let comparison = 0;\r\n\r\n    switch (sortColumn) {\r\n      case 'inventory_number':\r\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, { numeric: true });\r\n        break;\r\n      case 'purchase_date':\r\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\r\n        break;\r\n      case 'room':\r\n        const roomA = (a.room || '').toLowerCase();\r\n        const roomB = (b.room || '').toLowerCase();\r\n        comparison = roomA.localeCompare(roomB);\r\n        break;\r\n      default:\r\n        return 0;\r\n    }\r\n\r\n    if (sortOrder === 'desc') {\r\n      comparison = -comparison;\r\n    }\r\n\r\n    return comparison;\r\n  });\r\n\r\n  // Обработчик клика по заголовку для сортировки\r\n  const handleSort = (column) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  // Обработчик изменения чекбокса\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedAssets(prev =>\r\n      prev.includes(id)\r\n        ? prev.filter(assetId => assetId !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  // Массовое удаление\r\n  const handleDeleteSelected = async () => {\r\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\r\n\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/assets', {\r\n        data: { ids: selectedAssets },\r\n      });\r\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\r\n      setSelectedAssets([]);\r\n      alert('Выбранные активы успешно удалены');\r\n    } catch (err) {\r\n      alert('Ошибка при удалении активов');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Генерация QR-кодов для печати\r\n  const handlePrintQRCode = () => {\r\n    if (selectedAssets.length === 0) {\r\n      alert('Выберите хотя бы один актив для печати QR-кодов');\r\n      return;\r\n    }\r\n\r\n    const printWindow = window.open('', '_blank', 'width=800,height=600');\r\n    const selectedAssetsData = assets.filter(asset => selectedAssets.includes(asset.id));\r\n\r\n    let htmlContent = `\r\n      <html>\r\n        <head>\r\n          <style>\r\n            body {\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 10px;\r\n              padding: 10px;\r\n              background-color: #ffffff;\r\n            }\r\n            .qr-wrapper {\r\n              width: 3cm;\r\n              height: 3cm;\r\n              position: relative;\r\n              font-size: 10px;\r\n              text-align: center;\r\n            }\r\n            .top-left {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n            }\r\n            .bottom-right {\r\n              position: absolute;\r\n              bottom: 0;\r\n              right: 0;\r\n            }\r\n            img {\r\n              width: 100%;\r\n              height: 100%;\r\n              object-fit: contain;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n    `;\r\n\r\n    selectedAssetsData.forEach(asset => {\r\n      const name = `${asset.type} ${asset.brand} ${asset.model}`;\r\n      const url = `http://localhost:3000/assets/${asset.id}`;\r\n\r\n      // Генерируем SVG напрямую через qrcode.react\r\n      const qrCanvas = document.createElement('canvas');\r\n      const ctx = qrCanvas.getContext('2d');\r\n      const size = 200;\r\n      qrCanvas.width = size;\r\n      qrCanvas.height = size;\r\n\r\n      // Рисуем QR-код\r\n      const qrCode = new QRCodeSVG({ value: url, size: `${size}px`, fgColor: '#000000' });\r\n      const serializer = new XMLSerializer();\r\n      const svgStr = serializer.serializeToString(qrCode.querySelector('svg'));\r\n\r\n      htmlContent += `\r\n        <div class=\"qr-wrapper\">\r\n          <img src=\"data:image/svg+xml;base64,${btoa(svgStr)}\" />\r\n          <span class=\"top-left\">${name}</span>\r\n          <span class=\"bottom-right\">${asset.inventory_number}</span>\r\n        </div>\r\n      `;\r\n    });\r\n\r\n    htmlContent += '</body></html>';\r\n\r\n    printWindow.document.write(htmlContent);\r\n\r\n    setTimeout(() => {\r\n      printWindow.print();\r\n      printWindow.close();\r\n    }, 500);\r\n  };\r\n\r\n  // Предотвращение перехода с подтверждением\r\n  useEffect(() => {\r\n    const unblock = () => {\r\n      if (selectedAssets.length > 0 && location.pathname !== '/assets') {\r\n        const allowTransition = window.confirm('Снять выделение и перейти на другую страницу?');\r\n        if (!allowTransition) {\r\n          return true; // Блокируем переход\r\n        } else {\r\n          setSelectedAssets([]); // Снимаем выделение\r\n          return false;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const listener = (location, action) => {\r\n      if (action === 'PUSH' || action === 'POP') {\r\n        const shouldBlock = selectedAssets.length > 0;\r\n        if (shouldBlock && !window.confirm('Снять выделение и перейти на другую страницу?')) {\r\n          return () => {}; // Блокируем переход\r\n        } else {\r\n          setSelectedAssets([]); // Снимаем выделение\r\n          return undefined;\r\n        }\r\n      }\r\n    };\r\n\r\n    const unlisten = navigate(listener);\r\n\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [selectedAssets]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n        <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center' }}>\r\n          <strong>Список оборудования</strong>\r\n        </Typography>\r\n\r\n        {/* Поисковая строка */}\r\n        <TextField\r\n          label=\"Поиск\"\r\n          fullWidth\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{ marginBottom: '16px' }}\r\n        />\r\n\r\n        {/* Кнопки управления */}\r\n        <Box display=\"flex\" gap={2} mb={2}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/assets/new')}>\r\n            Добавить\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handlePrintQRCode}\r\n          >\r\n            Печать QR\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handleDeleteSelected}\r\n          >\r\n            Удалить выделенные\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Таблица активов */}\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  checked={selectedAssets.length === sortedAssets.length && selectedAssets.length > 0}\r\n                  indeterminate={\r\n                    selectedAssets.length > 0 &&\r\n                    selectedAssets.length < sortedAssets.length\r\n                  }\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedAssets(sortedAssets.map(a => a.id));\r\n                    } else {\r\n                      setSelectedAssets([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('inventory_number')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Инвентарный номер{' '}\r\n                {sortColumn === 'inventory_number' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('purchase_date')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Дата покупки{' '}\r\n                {sortColumn === 'purchase_date' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell>Наименование</TableCell>\r\n              <TableCell>Статус</TableCell>\r\n              <TableCell>Ответственный</TableCell>\r\n              <TableCell>Отдел</TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('room')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Помещение{' '}\r\n                {sortColumn === 'room' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAssets.map((asset) => (\r\n              <TableRow key={asset.id} hover>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selectedAssets.includes(asset.id)}\r\n                    onChange={(e) => {\r\n                      e.stopPropagation();\r\n                      handleCheckboxChange(asset.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{asset.inventory_number}</TableCell>\r\n                <TableCell>{formatDate(asset.purchase_date)}</TableCell>\r\n                <TableCell>{`${asset.type} ${asset.brand} ${asset.model}`}</TableCell>\r\n                <TableCell>{getStatusName(asset.status_id)}</TableCell>\r\n                <TableCell>{formatEmployeeName(asset.responsible_person)}</TableCell>\r\n                <TableCell>{getDepartmentName(asset.department_id)}</TableCell>\r\n                <TableCell>{asset.room}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}