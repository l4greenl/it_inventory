{"ast":null,"code":"var _jsxFileName = \"D:\\\\it_inventory.localhost\\\\frontend\\\\src\\\\components\\\\Directory.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Directory.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Box, Chip, FormControl, InputLabel, Select, MenuItem, Checkbox, ListItemText, OutlinedInput, Alert, CircularProgress, IconButton, Tooltip } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useNavigate } from 'react-router-dom';\nimport config from '../config'; // Импорт конфигурации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst Directory = ({\n  currentUser\n}) => {\n  _s();\n  // Проверка авторизации и роли\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n    } else if (currentUser.role !== 'admin') {\n      navigate('/assets');\n    }\n  }, [currentUser, navigate]);\n\n  // === Состояния для данных ===\n  const [types, setTypes] = useState([]);\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState({\n    types: false,\n    properties: false\n  });\n  const [error, setError] = useState({\n    types: null,\n    properties: null\n  });\n\n  // === Состояния для форм ===\n  const [openTypeForm, setOpenTypeForm] = useState(false);\n  const [currentType, setCurrentType] = useState(null); // null для создания, объект для редактирования\n  const [typeName, setTypeName] = useState('');\n  const [typeFormError, setTypeFormError] = useState('');\n\n  // === Состояния для свойств типа ===\n  const [openPropertiesModal, setOpenPropertiesModal] = useState(false);\n  const [selectedTypeIdForProperties, setSelectedTypeIdForProperties] = useState(null);\n  const [selectedPropertyIds, setSelectedPropertyIds] = useState([]); // Для Select с множественным выбором\n  const [propertiesModalError, setPropertiesModalError] = useState('');\n\n  // === Загрузка данных ===\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading({\n        types: true,\n        properties: true\n      });\n      setError({\n        types: null,\n        properties: null\n      });\n      try {\n        const [typesRes, propertiesRes] = await Promise.all([axios.get(`${config.API_BASE_URL}/api/types`), axios.get(`${config.API_BASE_URL}/api/properties`)]);\n        setTypes(typesRes.data);\n        setProperties(propertiesRes.data);\n      } catch (err) {\n        console.error(\"Ошибка при загрузке данных:\", err);\n        setError({\n          types: 'Не удалось загрузить типы или свойства.',\n          properties: 'Не удалось загрузить типы или свойства.'\n        });\n      } finally {\n        setLoading({\n          types: false,\n          properties: false\n        });\n      }\n    };\n    if (currentUser && currentUser.role === 'admin') {\n      fetchData();\n    }\n  }, [currentUser]);\n\n  // === Функции для работы с Типами ===\n  const handleOpenTypeForm = (type = null) => {\n    setCurrentType(type);\n    setTypeName(type ? type.name : '');\n    setTypeFormError('');\n    setOpenTypeForm(true);\n  };\n  const handleCloseTypeForm = () => {\n    setOpenTypeForm(false);\n    setCurrentType(null);\n    setTypeName('');\n    setTypeFormError('');\n  };\n  const handleSaveType = async () => {\n    if (!typeName.trim()) {\n      setTypeFormError('Название типа не может быть пустым.');\n      return;\n    }\n    try {\n      if (currentType) {\n        // Редактирование\n        await axios.put(`${config.API_BASE_URL}/api/types/${currentType.id}`, {\n          name: typeName\n        });\n      } else {\n        // Создание\n        await axios.post(`${config.API_BASE_URL}/api/types`, {\n          name: typeName\n        });\n      }\n      // Перезагрузка данных\n      const res = await axios.get(`${config.API_BASE_URL}/api/types`);\n      setTypes(res.data);\n      handleCloseTypeForm();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Ошибка при сохранении типа:\", err);\n      setTypeFormError('Не удалось сохранить тип. ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || ''));\n    }\n  };\n  const handleDeleteType = async id => {\n    if (!window.confirm(\"Вы уверены, что хотите удалить этот тип?\")) return;\n    try {\n      await axios.delete(`${config.API_BASE_URL}/api/types/${id}`);\n      setTypes(types.filter(t => t.id !== id));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Ошибка при удалении типа:\", err);\n      alert('Не удалось удалить тип. ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Возможно, на него ссылаются активы.'));\n    }\n  };\n\n  // === Функции для работы со Свойствами ===\n  const handleOpenPropertiesModal = async typeId => {\n    setSelectedTypeIdForProperties(typeId);\n    setPropertiesModalError('');\n    setSelectedPropertyIds([]); // Сброс выбора\n\n    // Загрузить текущие свойства типа\n    try {\n      const res = await axios.get(`${config.API_BASE_URL}/api/types/${typeId}/properties`);\n      const currentPropertyIds = res.data.map(p => p.id);\n      setSelectedPropertyIds(currentPropertyIds);\n    } catch (err) {\n      console.error(\"Ошибка при загрузке свойств типа:\", err);\n      setPropertiesModalError('Не удалось загрузить свойства для этого типа.');\n    }\n    setOpenPropertiesModal(true);\n  };\n  const handleClosePropertiesModal = () => {\n    setOpenPropertiesModal(false);\n    setSelectedTypeIdForProperties(null);\n    setSelectedPropertyIds([]);\n    setPropertiesModalError('');\n  };\n  const handleSaveTypeProperties = async () => {\n    if (!selectedTypeIdForProperties) return;\n    try {\n      // 1. Получить текущие свойства типа\n      const currentRes = await axios.get(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties`);\n      const currentPropertyIds = new Set(currentRes.data.map(p => p.id));\n\n      // 2. Определить, что нужно добавить и что удалить\n      const newPropertyIds = new Set(selectedPropertyIds);\n\n      // Свойства для добавления\n      const toAdd = [...newPropertyIds].filter(id => !currentPropertyIds.has(id));\n      // Свойства для удаления\n      const toRemove = [...currentPropertyIds].filter(id => !newPropertyIds.has(id));\n\n      // 3. Выполнить запросы на добавление/удаление\n      const promises = [];\n      toAdd.forEach(propId => {\n        promises.push(axios.post(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties/${propId}`));\n      });\n      toRemove.forEach(propId => {\n        promises.push(axios.delete(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties/${propId}`));\n      });\n      await Promise.all(promises);\n\n      // Уведомление или просто закрытие модального окна\n      handleClosePropertiesModal();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Ошибка при сохранении свойств типа:\", err);\n      setPropertiesModalError('Не удалось сохранить свойства. ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || ''));\n    }\n  };\n  const handleChangeSelectedProperties = event => {\n    const value = event.target.value;\n    // value является массивом выбранных значений\n    setSelectedPropertyIds(value);\n  };\n\n  // === Функции для работы с Свойствами (глобальные) ===\n  const [newPropertyName, setNewPropertyName] = useState('');\n  const [propertyFormError, setPropertyFormError] = useState('');\n  const handleCreateProperty = async () => {\n    if (!newPropertyName.trim()) {\n      setPropertyFormError('Название свойства не может быть пустым.');\n      return;\n    }\n    try {\n      await axios.post(`${config.API_BASE_URL}/api/properties`, {\n        name: newPropertyName.trim()\n      });\n      const res = await axios.get(`${config.API_BASE_URL}/api/properties`);\n      setProperties(res.data);\n      setNewPropertyName('');\n      setPropertyFormError('');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error(\"Ошибка при создании свойства:\", err);\n      setPropertyFormError('Не удалось создать свойство. ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Возможно, свойство с таким именем уже существует.'));\n    }\n  };\n  const handleDeleteProperty = async id => {\n    if (!window.confirm(\"Вы уверены, что хотите удалить это свойство?\")) return;\n    try {\n      await axios.delete(`${config.API_BASE_URL}/api/properties/${id}`);\n      setProperties(properties.filter(p => p.id !== id));\n      // Также нужно обновить выбранные свойства, если удаляемое свойство было выбрано\n      setSelectedPropertyIds(selectedPropertyIds.filter(pid => pid !== id));\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      console.error(\"Ошибка при удалении свойства:\", err);\n      alert('Не удалось удалить свойство. ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Возможно, оно используется типами.'));\n    }\n  };\n\n  // Получить имя свойства по ID для отображения в Chip\n  const getPropertyNameById = id => {\n    const prop = properties.find(p => p.id === id);\n    return prop ? prop.name : `Свойство ${id}`;\n  };\n\n  // Получить имя типа по ID для отображения в модальном окне\n  const getTypeNameById = id => {\n    const type = types.find(t => t.id === id);\n    return type ? type.name : `Тип ${id}`;\n  };\n  if (!currentUser || currentUser.role !== 'admin') {\n    return null; // Или какой-то индикатор загрузки/перенаправления\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"\\u0422\\u0438\\u043F\\u044B \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 26\n            }, this),\n            onClick: () => handleOpenTypeForm(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), error.types && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: error.types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 27\n        }, this), loading.types ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u0421\\u0432\\u044F\\u0437\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: types.length > 0 ? types.map(type => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: type.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: type.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: type.properties && type.properties.length > 0 ? type.properties.map((prop, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: prop.name,\n                    size: \"small\",\n                    style: {\n                      margin: '2px'\n                    }\n                  }, prop.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 31\n                  }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"\\u041D\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"primary\",\n                      onClick: () => handleOpenPropertiesModal(type.id),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0438\\u043F\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"secondary\",\n                      onClick: () => handleOpenTypeForm(type),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0442\\u0438\\u043F\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"error\",\n                      onClick: () => handleDeleteType(type.id),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)]\n              }, type.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 4,\n                  align: \"center\",\n                  children: \"\\u0422\\u0438\\u043F\\u044B \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 2,\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E\",\n            value: newPropertyName,\n            onChange: e => setNewPropertyName(e.target.value),\n            variant: \"outlined\",\n            size: \"small\",\n            error: !!propertyFormError,\n            helperText: propertyFormError,\n            onKeyPress: e => {\n              if (e.key === 'Enter') handleCreateProperty();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: handleCreateProperty,\n            disabled: !newPropertyName.trim(),\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), error.properties && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: error.properties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 32\n        }, this), loading.properties ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: properties.length > 0 ? properties.map(property => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: property.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: property.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"error\",\n                      onClick: () => handleDeleteProperty(property.id),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this)]\n              }, property.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 3,\n                  align: \"center\",\n                  children: \"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTypeForm,\n      onClose: handleCloseTypeForm,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: currentType ? 'Редактировать тип' : 'Добавить новый тип'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0438\\u043F\\u0430\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: typeName,\n          onChange: e => setTypeName(e.target.value),\n          error: !!typeFormError,\n          helperText: typeFormError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseTypeForm,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveType,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openPropertiesModal,\n      onClose: handleClosePropertiesModal,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 \\u0434\\u043B\\u044F \\u0442\\u0438\\u043F\\u0430: \", getTypeNameById(selectedTypeIdForProperties)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [propertiesModalError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: propertiesModalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"select-properties-label\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"select-properties-label\",\n            multiple: true,\n            value: selectedPropertyIds,\n            onChange: handleChangeSelectedProperties,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 22\n            }, this),\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(id => /*#__PURE__*/_jsxDEV(Chip, {\n                label: getPropertyNameById(id),\n                size: \"small\"\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this),\n            MenuProps: MenuProps,\n            children: properties.map(property => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: property.id,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedPropertyIds.indexOf(property.id) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: property.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)]\n            }, property.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClosePropertiesModal,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTypeProperties,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(Directory, \"wTFm+xeDC0/ypDLLkaCAmTLzKQU=\", false, function () {\n  return [useNavigate];\n});\n_c = Directory;\nexport default Directory;\nvar _c;\n$RefreshReg$(_c, \"Directory\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Box","Chip","FormControl","InputLabel","Select","MenuItem","Checkbox","ListItemText","OutlinedInput","Alert","CircularProgress","IconButton","Tooltip","AddIcon","EditIcon","DeleteIcon","useNavigate","config","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","Directory","currentUser","_s","navigate","role","types","setTypes","properties","setProperties","loading","setLoading","error","setError","openTypeForm","setOpenTypeForm","currentType","setCurrentType","typeName","setTypeName","typeFormError","setTypeFormError","openPropertiesModal","setOpenPropertiesModal","selectedTypeIdForProperties","setSelectedTypeIdForProperties","selectedPropertyIds","setSelectedPropertyIds","propertiesModalError","setPropertiesModalError","fetchData","typesRes","propertiesRes","Promise","all","get","API_BASE_URL","data","err","console","handleOpenTypeForm","type","name","handleCloseTypeForm","handleSaveType","trim","put","id","post","res","_err$response","_err$response$data","response","handleDeleteType","window","confirm","delete","filter","t","_err$response2","_err$response2$data","alert","handleOpenPropertiesModal","typeId","currentPropertyIds","map","p","handleClosePropertiesModal","handleSaveTypeProperties","currentRes","Set","newPropertyIds","toAdd","has","toRemove","promises","forEach","propId","push","_err$response3","_err$response3$data","handleChangeSelectedProperties","event","value","target","newPropertyName","setNewPropertyName","propertyFormError","setPropertyFormError","handleCreateProperty","_err$response4","_err$response4$data","handleDeleteProperty","pid","_err$response5","_err$response5$data","getPropertyNameById","prop","find","getTypeNameById","maxWidth","marginTop","children","elevation","padding","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","justifyContent","alignItems","color","startIcon","onClick","severity","marginBottom","my","component","length","index","label","size","margin","title","colSpan","gap","onChange","e","helperText","onKeyPress","key","disabled","property","open","onClose","autoFocus","fullWidth","labelId","multiple","input","renderValue","selected","sx","flexWrap","checked","indexOf","primary","_c","$RefreshReg$"],"sources":["D:/it_inventory.localhost/frontend/src/components/Directory.js"],"sourcesContent":["// frontend/src/components/Directory.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Box,\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  Alert,\r\n  CircularProgress,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport config from '../config'; // Импорт конфигурации\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst Directory = ({ currentUser }) => {\r\n  // Проверка авторизации и роли\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      navigate('/login');\r\n    } else if (currentUser.role !== 'admin') {\r\n      navigate('/assets');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  // === Состояния для данных ===\r\n  const [types, setTypes] = useState([]);\r\n  const [properties, setProperties] = useState([]);\r\n  const [loading, setLoading] = useState({ types: false, properties: false });\r\n  const [error, setError] = useState({ types: null, properties: null });\r\n\r\n  // === Состояния для форм ===\r\n  const [openTypeForm, setOpenTypeForm] = useState(false);\r\n  const [currentType, setCurrentType] = useState(null); // null для создания, объект для редактирования\r\n  const [typeName, setTypeName] = useState('');\r\n  const [typeFormError, setTypeFormError] = useState('');\r\n\r\n  // === Состояния для свойств типа ===\r\n  const [openPropertiesModal, setOpenPropertiesModal] = useState(false);\r\n  const [selectedTypeIdForProperties, setSelectedTypeIdForProperties] = useState(null);\r\n  const [selectedPropertyIds, setSelectedPropertyIds] = useState([]); // Для Select с множественным выбором\r\n  const [propertiesModalError, setPropertiesModalError] = useState('');\r\n\r\n  // === Загрузка данных ===\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading({ types: true, properties: true });\r\n      setError({ types: null, properties: null });\r\n\r\n      try {\r\n        const [typesRes, propertiesRes] = await Promise.all([\r\n          axios.get(`${config.API_BASE_URL}/api/types`),\r\n          axios.get(`${config.API_BASE_URL}/api/properties`)\r\n        ]);\r\n        setTypes(typesRes.data);\r\n        setProperties(propertiesRes.data);\r\n      } catch (err) {\r\n        console.error(\"Ошибка при загрузке данных:\", err);\r\n        setError({ types: 'Не удалось загрузить типы или свойства.', properties: 'Не удалось загрузить типы или свойства.' });\r\n      } finally {\r\n        setLoading({ types: false, properties: false });\r\n      }\r\n    };\r\n\r\n    if (currentUser && currentUser.role === 'admin') {\r\n      fetchData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // === Функции для работы с Типами ===\r\n  const handleOpenTypeForm = (type = null) => {\r\n    setCurrentType(type);\r\n    setTypeName(type ? type.name : '');\r\n    setTypeFormError('');\r\n    setOpenTypeForm(true);\r\n  };\r\n\r\n  const handleCloseTypeForm = () => {\r\n    setOpenTypeForm(false);\r\n    setCurrentType(null);\r\n    setTypeName('');\r\n    setTypeFormError('');\r\n  };\r\n\r\n  const handleSaveType = async () => {\r\n    if (!typeName.trim()) {\r\n      setTypeFormError('Название типа не может быть пустым.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (currentType) {\r\n        // Редактирование\r\n        await axios.put(`${config.API_BASE_URL}/api/types/${currentType.id}`, { name: typeName });\r\n      } else {\r\n        // Создание\r\n        await axios.post(`${config.API_BASE_URL}/api/types`, { name: typeName });\r\n      }\r\n      // Перезагрузка данных\r\n      const res = await axios.get(`${config.API_BASE_URL}/api/types`);\r\n      setTypes(res.data);\r\n      handleCloseTypeForm();\r\n    } catch (err) {\r\n      console.error(\"Ошибка при сохранении типа:\", err);\r\n      setTypeFormError('Не удалось сохранить тип. ' + (err.response?.data?.error || ''));\r\n    }\r\n  };\r\n\r\n  const handleDeleteType = async (id) => {\r\n    if (!window.confirm(\"Вы уверены, что хотите удалить этот тип?\")) return;\r\n    try {\r\n      await axios.delete(`${config.API_BASE_URL}/api/types/${id}`);\r\n      setTypes(types.filter(t => t.id !== id));\r\n    } catch (err) {\r\n      console.error(\"Ошибка при удалении типа:\", err);\r\n      alert('Не удалось удалить тип. ' + (err.response?.data?.error || 'Возможно, на него ссылаются активы.'));\r\n    }\r\n  };\r\n\r\n  // === Функции для работы со Свойствами ===\r\n  const handleOpenPropertiesModal = async (typeId) => {\r\n    setSelectedTypeIdForProperties(typeId);\r\n    setPropertiesModalError('');\r\n    setSelectedPropertyIds([]); // Сброс выбора\r\n\r\n    // Загрузить текущие свойства типа\r\n    try {\r\n      const res = await axios.get(`${config.API_BASE_URL}/api/types/${typeId}/properties`);\r\n      const currentPropertyIds = res.data.map(p => p.id);\r\n      setSelectedPropertyIds(currentPropertyIds);\r\n    } catch (err) {\r\n      console.error(\"Ошибка при загрузке свойств типа:\", err);\r\n      setPropertiesModalError('Не удалось загрузить свойства для этого типа.');\r\n    }\r\n    setOpenPropertiesModal(true);\r\n  };\r\n\r\n  const handleClosePropertiesModal = () => {\r\n    setOpenPropertiesModal(false);\r\n    setSelectedTypeIdForProperties(null);\r\n    setSelectedPropertyIds([]);\r\n    setPropertiesModalError('');\r\n  };\r\n\r\n  const handleSaveTypeProperties = async () => {\r\n    if (!selectedTypeIdForProperties) return;\r\n\r\n    try {\r\n      // 1. Получить текущие свойства типа\r\n      const currentRes = await axios.get(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties`);\r\n      const currentPropertyIds = new Set(currentRes.data.map(p => p.id));\r\n\r\n      // 2. Определить, что нужно добавить и что удалить\r\n      const newPropertyIds = new Set(selectedPropertyIds);\r\n      \r\n      // Свойства для добавления\r\n      const toAdd = [...newPropertyIds].filter(id => !currentPropertyIds.has(id));\r\n      // Свойства для удаления\r\n      const toRemove = [...currentPropertyIds].filter(id => !newPropertyIds.has(id));\r\n\r\n      // 3. Выполнить запросы на добавление/удаление\r\n      const promises = [];\r\n      toAdd.forEach(propId => {\r\n        promises.push(\r\n          axios.post(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties/${propId}`)\r\n        );\r\n      });\r\n      toRemove.forEach(propId => {\r\n        promises.push(\r\n          axios.delete(`${config.API_BASE_URL}/api/types/${selectedTypeIdForProperties}/properties/${propId}`)\r\n        );\r\n      });\r\n\r\n      await Promise.all(promises);\r\n\r\n      // Уведомление или просто закрытие модального окна\r\n      handleClosePropertiesModal();\r\n    } catch (err) {\r\n      console.error(\"Ошибка при сохранении свойств типа:\", err);\r\n      setPropertiesModalError('Не удалось сохранить свойства. ' + (err.response?.data?.error || ''));\r\n    }\r\n  };\r\n\r\n  const handleChangeSelectedProperties = (event) => {\r\n    const value = event.target.value;\r\n    // value является массивом выбранных значений\r\n    setSelectedPropertyIds(value);\r\n  };\r\n\r\n  // === Функции для работы с Свойствами (глобальные) ===\r\n  const [newPropertyName, setNewPropertyName] = useState('');\r\n  const [propertyFormError, setPropertyFormError] = useState('');\r\n\r\n  const handleCreateProperty = async () => {\r\n    if (!newPropertyName.trim()) {\r\n      setPropertyFormError('Название свойства не может быть пустым.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post(`${config.API_BASE_URL}/api/properties`, { name: newPropertyName.trim() });\r\n      const res = await axios.get(`${config.API_BASE_URL}/api/properties`);\r\n      setProperties(res.data);\r\n      setNewPropertyName('');\r\n      setPropertyFormError('');\r\n    } catch (err) {\r\n      console.error(\"Ошибка при создании свойства:\", err);\r\n      setPropertyFormError('Не удалось создать свойство. ' + (err.response?.data?.error || 'Возможно, свойство с таким именем уже существует.'));\r\n    }\r\n  };\r\n\r\n  const handleDeleteProperty = async (id) => {\r\n    if (!window.confirm(\"Вы уверены, что хотите удалить это свойство?\")) return;\r\n    try {\r\n      await axios.delete(`${config.API_BASE_URL}/api/properties/${id}`);\r\n      setProperties(properties.filter(p => p.id !== id));\r\n      // Также нужно обновить выбранные свойства, если удаляемое свойство было выбрано\r\n      setSelectedPropertyIds(selectedPropertyIds.filter(pid => pid !== id));\r\n    } catch (err) {\r\n      console.error(\"Ошибка при удалении свойства:\", err);\r\n      alert('Не удалось удалить свойство. ' + (err.response?.data?.error || 'Возможно, оно используется типами.'));\r\n    }\r\n  };\r\n\r\n  // Получить имя свойства по ID для отображения в Chip\r\n  const getPropertyNameById = (id) => {\r\n    const prop = properties.find(p => p.id === id);\r\n    return prop ? prop.name : `Свойство ${id}`;\r\n  };\r\n\r\n  // Получить имя типа по ID для отображения в модальном окне\r\n  const getTypeNameById = (id) => {\r\n    const type = types.find(t => t.id === id);\r\n    return type ? type.name : `Тип ${id}`;\r\n  };\r\n\r\n  if (!currentUser || currentUser.role !== 'admin') {\r\n    return null; // Или какой-то индикатор загрузки/перенаправления\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ marginTop: '20px' }}>\r\n      <Paper elevation={3} style={{ padding: '20px' }}>\r\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n          Справочник\r\n        </Typography>\r\n\r\n        {/* === Раздел: Типы устройств === */}\r\n        <Box mb={4}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n            <Typography variant=\"h5\">Типы устройств</Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => handleOpenTypeForm()}\r\n            >\r\n              Добавить тип\r\n            </Button>\r\n          </Box>\r\n\r\n          {error.types && <Alert severity=\"error\" style={{ marginBottom: '10px' }}>{error.types}</Alert>}\r\n          {loading.types ? (\r\n            <Box display=\"flex\" justifyContent=\"center\" my={2}><CircularProgress /></Box>\r\n          ) : (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Название</TableCell>\r\n                    <TableCell>Связанные свойства</TableCell>\r\n                    <TableCell align=\"right\">Действия</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {types.length > 0 ? (\r\n                    types.map((type) => (\r\n                      <TableRow key={type.id}>\r\n                        <TableCell>{type.id}</TableCell>\r\n                        <TableCell>{type.name}</TableCell>\r\n                        <TableCell>\r\n                          {/* Отображение свойств типа */}\r\n                          {type.properties && type.properties.length > 0 ? (\r\n                            type.properties.map((prop, index) => (\r\n                              <Chip\r\n                                key={prop.id}\r\n                                label={prop.name}\r\n                                size=\"small\"\r\n                                style={{ margin: '2px' }}\r\n                              />\r\n                            ))\r\n                          ) : (\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">Нет свойств</Typography>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Tooltip title=\"Редактировать свойства\">\r\n                            <IconButton\r\n                              color=\"primary\"\r\n                              onClick={() => handleOpenPropertiesModal(type.id)}\r\n                              size=\"small\"\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title=\"Редактировать тип\">\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              onClick={() => handleOpenTypeForm(type)}\r\n                              size=\"small\"\r\n                            >\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title=\"Удалить тип\">\r\n                            <IconButton\r\n                              color=\"error\"\r\n                              onClick={() => handleDeleteType(type.id)}\r\n                              size=\"small\"\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={4} align=\"center\">\r\n                        Типы устройств не найдены\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </Box>\r\n\r\n        {/* === Раздел: Свойства === */}\r\n        <Box>\r\n          <Typography variant=\"h5\" gutterBottom>Свойства</Typography>\r\n          \r\n          {/* Форма для создания нового свойства */}\r\n          <Box display=\"flex\" alignItems=\"center\" mb={2} gap={2}>\r\n            <TextField\r\n              label=\"Новое свойство\"\r\n              value={newPropertyName}\r\n              onChange={(e) => setNewPropertyName(e.target.value)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              error={!!propertyFormError}\r\n              helperText={propertyFormError}\r\n              onKeyPress={(e) => { if (e.key === 'Enter') handleCreateProperty(); }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleCreateProperty}\r\n              disabled={!newPropertyName.trim()}\r\n            >\r\n              Добавить\r\n            </Button>\r\n          </Box>\r\n\r\n          {error.properties && <Alert severity=\"error\" style={{ marginBottom: '10px' }}>{error.properties}</Alert>}\r\n          {loading.properties ? (\r\n            <Box display=\"flex\" justifyContent=\"center\" my={2}><CircularProgress /></Box>\r\n          ) : (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Название</TableCell>\r\n                    <TableCell align=\"right\">Действия</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {properties.length > 0 ? (\r\n                    properties.map((property) => (\r\n                      <TableRow key={property.id}>\r\n                        <TableCell>{property.id}</TableCell>\r\n                        <TableCell>{property.name}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Tooltip title=\"Удалить свойство\">\r\n                            <IconButton\r\n                              color=\"error\"\r\n                              onClick={() => handleDeleteProperty(property.id)}\r\n                              size=\"small\"\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={3} align=\"center\">\r\n                        Свойства не найдены\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* === Модальное окно для создания/редактирования Типа === */}\r\n      <Dialog open={openTypeForm} onClose={handleCloseTypeForm}>\r\n        <DialogTitle>{currentType ? 'Редактировать тип' : 'Добавить новый тип'}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Название типа\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={typeName}\r\n            onChange={(e) => setTypeName(e.target.value)}\r\n            error={!!typeFormError}\r\n            helperText={typeFormError}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseTypeForm} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleSaveType} color=\"primary\" variant=\"contained\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* === Модальное окно для управления Свойствами Типа === */}\r\n      <Dialog open={openPropertiesModal} onClose={handleClosePropertiesModal} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          Свойства для типа: {getTypeNameById(selectedTypeIdForProperties)}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {propertiesModalError && <Alert severity=\"error\" style={{ marginBottom: '10px' }}>{propertiesModalError}</Alert>}\r\n          <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\r\n            <InputLabel id=\"select-properties-label\">Выберите свойства</InputLabel>\r\n            <Select\r\n              labelId=\"select-properties-label\"\r\n              multiple\r\n              value={selectedPropertyIds}\r\n              onChange={handleChangeSelectedProperties}\r\n              input={<OutlinedInput label=\"Выберите свойства\" />}\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                  {selected.map((id) => (\r\n                    <Chip key={id} label={getPropertyNameById(id)} size=\"small\" />\r\n                  ))}\r\n                </Box>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {properties.map((property) => (\r\n                <MenuItem key={property.id} value={property.id}>\r\n                  <Checkbox checked={selectedPropertyIds.indexOf(property.id) > -1} />\r\n                  <ListItemText primary={property.name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClosePropertiesModal} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleSaveTypeProperties} color=\"primary\" variant=\"contained\">\r\n            Сохранить изменения\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Directory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}