{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Table, TableHead, TableRow, TableCell, TableBody, Button, Checkbox, Box } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = () => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation(); // Для отслеживания пути\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        const catsRes = await axios.get('http://localhost:5000/api/categories');\n        setAssets(assetsRes.data);\n        setDepartments(depsRes.data);\n        setStatuses(statsRes.data);\n        setEmployees(empsRes.data);\n        setCategories(catsRes.data);\n      } catch (err) {\n        console.error('Ошибка при загрузке данных:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Запрет перехода со страницы при выделеных чекбоксах\n  const navigateWithConfirm = path => {\n    if (selectedAssets.length > 0) {\n      const userConfirmed = window.confirm('Снять выделение и перейти на другую страницу?');\n      if (!userConfirmed) return; // Переход заблокирован\n      setSelectedAssets([]); // Снимаем выделение\n    }\n    navigate(path);\n  };\n\n  // Форматирование даты в DD.MM.YYYY\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    if (isNaN(date)) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n  };\n\n  // Форматирование ФИО → Иванов И.И.\n  const formatEmployeeName = employeeId => {\n    var _parts$, _parts$2;\n    if (!employeeId) return '';\n    const employee = employees.find(emp => emp.id === employeeId);\n    if (!employee) return '';\n    const parts = employee.name.split(' ');\n    const surname = parts[0] || '';\n    const firstInitial = ((_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.charAt(0).toUpperCase()) || '';\n    const patronymicInitial = ((_parts$2 = parts[2]) === null || _parts$2 === void 0 ? void 0 : _parts$2.charAt(0).toUpperCase()) || '';\n    return `${surname} ${firstInitial + '.'}${patronymicInitial + '.'}`;\n  };\n\n  // Получение имени статуса\n  const getStatusName = statusId => {\n    const status = statuses.find(stat => stat.id === statusId);\n    return (status === null || status === void 0 ? void 0 : status.name) || '';\n  };\n\n  // Получение имени отдела\n  const getDepartmentName = departmentId => {\n    const department = departments.find(d => d.id === departmentId);\n    return (department === null || department === void 0 ? void 0 : department.name) || '';\n  };\n\n  // Фильтрация по строке поиска\n  const filteredAssets = assets.filter(asset => {\n    const searchLower = searchTerm.toLowerCase();\n    const assetFieldsToSearch = [asset.inventory_number, `${asset.type} ${asset.brand} ${asset.model}`, getStatusName(asset.status_id), formatEmployeeName(asset.responsible_person), getDepartmentName(asset.department_id), asset.room || '', formatDate(asset.purchase_date)].join(' ').toLowerCase();\n    return assetFieldsToSearch.includes(searchLower);\n  });\n\n  // Сортировка активов\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\n    let comparison = 0;\n    switch (sortColumn) {\n      case 'inventory_number':\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, {\n          numeric: true\n        });\n        break;\n      case 'name':\n        comparison = a.type.localeCompare(b.type, undefined, {\n          sensitivity: 'base'\n        });\n        break;\n      case 'brand':\n        comparison = a.brand.localeCompare(b.brand, undefined, {\n          sensitivity: 'base'\n        });\n        break;\n      case 'model':\n        comparison = a.model.localeCompare(b.model, undefined, {\n          sensitivity: 'base'\n        });\n        break;\n      case 'status':\n        const statusA = getStatusName(a.status_id).toLowerCase();\n        const statusB = getStatusName(b.status_id).toLowerCase();\n        comparison = statusA.localeCompare(statusB);\n        break;\n      case 'responsible':\n        const empA = formatEmployeeName(a.responsible_person).toLowerCase();\n        const empB = formatEmployeeName(b.responsible_person).toLowerCase();\n        comparison = empA.localeCompare(empB);\n        break;\n      case 'department':\n        const deptA = getDepartmentName(a.department_id).toLowerCase();\n        const deptB = getDepartmentName(b.department_id).toLowerCase();\n        comparison = deptA.localeCompare(deptB);\n        break;\n      case 'room':\n        const roomA = (a.room || '').toLowerCase();\n        const roomB = (b.room || '').toLowerCase();\n        comparison = roomA.localeCompare(roomB);\n        break;\n      case 'purchase_date':\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\n        break;\n      default:\n        return 0;\n    }\n    if (sortOrder === 'desc') {\n      comparison = -comparison;\n    }\n    return comparison;\n  });\n\n  // Обработчик клика на заголовок столбца\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortOrder('asc');\n    }\n  };\n\n  // Удаление выбранных активов\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\n    try {\n      await axios.delete('http://localhost:5000/api/assets', {\n        data: {\n          ids: selectedAssets\n        }\n      });\n\n      // Убираем удаленные активы из списка\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\n      setSelectedAssets([]);\n      alert('Выбранные активы успешно удалены');\n    } catch (err) {\n      alert('Ошибка при удалении активов');\n      console.error(err);\n    }\n  };\n\n  // Печать QR-кодов\n  const handlePrintQRCode = async asset => {\n    if (selectedAssets.length === 0) {\n      alert('Выберите хотя бы один актив');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/qrcodes', {\n        ids: selectedAssets\n      });\n      const inventoryNumber = asset.inventory_number;\n      const name = asset.name || `${asset.type} ${asset.brand} ${asset.model}`;\n      const timestamp = new Date().getTime();\n      const fileName = `${timestamp}.pdf`;\n      const codes = res.data;\n      let htmlContent = `\n      <html>\n      <head>\n      <style>\n      @page {\n        size: A4;\n        margin: 0;\n        @top-center { content: ''; }\n        @bottom-left { content: ''; }\n        @bottom-right { content: ''; }\n        }\n        body {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                padding: 20px;\n                background-color: #fff;\n                }\n                .qr-wrapper {\n                  width: 3cm; /* Ширина контейнера */\n                  height: 3cm; /* Высота контейнера */\n                  position: relative;\n                  font-size: 10px;\n                  text-align: center;\n                  }\n                  .qr-container {\n                    width: 100%;\n                    height: 100%;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    }\n                    img {\n                      max-width: 100%;\n                      max-height: 100%;\n                      object-fit: contain;\n                      }\n                      .text-top, .text-bottom {\n                        position: absolute;\n                        left: 50%; /* Центрирование по горизонтали */\n                        transform: translateX(-50%); /* Корректировка центрирования */\n                        white-space: nowrap; /* Запрет переноса строки */\n                        overflow: hidden; /* Скрывает лишний текст */\n                        text-overflow: ellipsis; /* Добавляет многоточие при обрезке */\n                        width: 90%; /* Ограничиваем ширину текста */\n                        font-size: 8px; /* Маленький размер шрифта */\n                        }\n                        .text-top {\n                          top: 0;\n                          }\n                          .text-bottom {\n                            bottom: 0;\n                            }\n                            </style>\n                            </head>\n                            <body>\n                            `;\n      codes.forEach(code => {\n        htmlContent += `\n                              <div class=\"qr-wrapper\">\n                              <div class=\"qr-container\">\n                              <img src=\"data:image/png;base64,${code.qr_base64}\" />\n                              </div>\n                              <span class=\"text-top\">${code.name}</span>\n                              <span class=\"text-bottom\">${code.inventory_number}</span>\n                              </div>\n                              `;\n      });\n      htmlContent += '</body></html>';\n      const printWindow = window.open('', '_blank');\n      printWindow.document.write(htmlContent);\n      setTimeout(() => {\n        // Установка имени файла при скачивании\n        printWindow.document.title = fileName;\n        printWindow.document.head.innerHTML += `\n                              <meta http-equiv=\"Content-Disposition\" content=\"attachment; filename=${fileName}\" />\n                              `;\n        printWindow.print();\n        printWindow.close();\n      }, 500);\n    } catch (err) {\n      console.error('Ошибка при генерации QR-кодов:', err);\n      alert('Не удалось получить QR-коды с сервера');\n    }\n  };\n  const handleExportExcel = () => {\n    // Фильтруем активы: только выделенные, или все, если ничего не выбрано\n    const filteredAssets = selectedAssets.length > 0 ? assets.filter(asset => selectedAssets.includes(asset.id)) : assets;\n\n    // Преобразование данных для Excel\n    const dataToExport = filteredAssets.map((asset, index) => {\n      var _categories$find, _statuses$find, _departments$find;\n      const category = ((_categories$find = categories.find(cat => cat.id === asset.category_id)) === null || _categories$find === void 0 ? void 0 : _categories$find.name) || '';\n      const status = ((_statuses$find = statuses.find(stat => stat.id === asset.status_id)) === null || _statuses$find === void 0 ? void 0 : _statuses$find.name) || '';\n      const department = ((_departments$find = departments.find(dept => dept.id === asset.department_id)) === null || _departments$find === void 0 ? void 0 : _departments$find.name) || '';\n      const responsiblePerson = formatEmployeeName(asset.responsible_person);\n      return [index + 1, asset.serial_number || '', asset.inventory_number || '', asset.type || '', asset.brand || '', asset.model || '', formatDate(asset.purchase_date) || '', category || '', status || '', asset.actual_user || '', responsiblePerson || '', department || '', asset.room || '', asset.comments || ''];\n    });\n\n    // Заголовки таблицы\n    const headers = ['№', 'Серийный номер', 'Инвентарный номер', 'Тип', 'Фирма', 'Модель', 'Дата покупки', 'Категория', 'Статус', 'Фактический пользователь', 'Ответственный', 'Отдел', 'Помещение', 'Комментарий'];\n\n    // Добавление заголовков в начало\n    const worksheetData = [headers, ...dataToExport];\n\n    // Создание листа Excel\n    const ws = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // Автоподбор ширины столбцов\n    const colWidths = worksheetData[0].map((_, colIndex) => {\n      const maxLength = Math.max(...worksheetData.map(row => row[colIndex] ? row[colIndex].toString().length : 0));\n      return {\n        wch: Math.min(maxLength + 2, 50)\n      }; // Ограничиваем ширину до 50 символов\n    });\n    ws['!cols'] = colWidths;\n\n    // Стили для заголовка (жирный, центр, фон)\n    const headerStyle = {\n      font: {\n        bold: true,\n        color: {\n          rgb: \"000000\"\n        }\n      },\n      fill: {\n        fgColor: {\n          rgb: \"E0E0E0\"\n        }\n      },\n      alignment: {\n        horizontal: \"center\",\n        vertical: \"center\"\n      }\n    };\n\n    // Применяем стиль к заголовкам\n    for (let i = 0; i < headers.length; i++) {\n      const cellAddress = XLSX.utils.encode_cell({\n        r: 0,\n        c: i\n      });\n      if (!ws[cellAddress]) continue;\n      ws[cellAddress].s = headerStyle;\n    }\n\n    // Границы для всех ячеек\n    const borderStyle = {\n      border: {\n        top: {\n          style: 'thin',\n          color: {\n            rgb: '000000'\n          }\n        },\n        bottom: {\n          style: 'thin',\n          color: {\n            rgb: '000000'\n          }\n        },\n        left: {\n          style: 'thin',\n          color: {\n            rgb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            rgb: '000000'\n          }\n        }\n      },\n      alignment: {\n        horizontal: 'left',\n        vertical: 'top'\n      }\n    };\n\n    // Применяем стиль к каждой ячейке\n    const range = XLSX.utils.decode_range(ws['!ref']);\n    for (let R = range.s.r; R <= range.e.r; ++R) {\n      for (let C = range.s.c; C <= range.e.c; ++C) {\n        const cell = ws[XLSX.utils.encode_cell({\n          r: R,\n          c: C\n        })];\n        if (!cell) continue;\n        cell.s = borderStyle;\n      }\n    }\n\n    // Улучшаем отображение заголовков\n    const mergedHeaders = XLSX.utils.aoa_to_sheet(worksheetData);\n    ws['!merges'] = mergedHeaders['!merges'];\n    ws['!rows'] = [{\n      hpt: 20\n    }]; // Высота первой строки\n\n    // Создаём книгу и сохраняем файл\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, ws, 'Оборудования');\n    XLSX.writeFile(workbook, 'Оборудования.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          textAlign: 'center',\n          fontSize: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        fullWidth: true,\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: selectedAssets.length === 0,\n          onClick: handleExportExcel,\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: selectedAssets.length === 0,\n          onClick: handlePrintQRCode,\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          disabled: selectedAssets.length === 0,\n          onClick: handleDeleteSelected,\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => navigateWithConfirm('/assets/new'),\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < filteredAssets.length,\n                checked: selectedAssets.length === filteredAssets.length,\n                onChange: e => {\n                  if (e.target.checked) {\n                    const allIds = filteredAssets.map(asset => asset.id);\n                    setSelectedAssets(allIds);\n                  } else {\n                    setSelectedAssets([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('inventory_number'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\", ' ', sortColumn === 'inventory_number' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('name'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\", ' ', sortColumn === 'name' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('status'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\", ' ', sortColumn === 'status' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('responsible'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\", ' ', sortColumn === 'responsible' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('department'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u041E\\u0442\\u0434\\u0435\\u043B\", ' ', sortColumn === 'department' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('room'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\", ' ', sortColumn === 'room' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('purchase_date'),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\", ' ', sortColumn === 'purchase_date' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedAssets.map(asset => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            onClick: () => navigateWithConfirm(`/assets/${asset.id}`),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.includes(asset.id),\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedAssets([...selectedAssets, asset.id]);\n                  } else {\n                    setSelectedAssets(selectedAssets.filter(id => id !== asset.id));\n                  }\n                },\n                onClick: e => e.stopPropagation() // Чтобы клик по чекбоксу не открывал карточку актива\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.inventory_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: `${asset.type || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getStatusName(asset.status_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatEmployeeName(asset.responsible_person)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getDepartmentName(asset.department_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.room || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.purchase_date ? formatDate(asset.purchase_date) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)]\n          }, asset.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetList, \"8OYPI5Q7yN4zFYLqs1vn06gYnwA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AssetList;\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","TextField","Table","TableHead","TableRow","TableCell","TableBody","Button","Checkbox","Box","useNavigate","useLocation","XLSX","saveAs","jsxDEV","_jsxDEV","AssetList","_s","assets","setAssets","departments","setDepartments","statuses","setStatuses","employees","setEmployees","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortOrder","setSortOrder","selectedAssets","setSelectedAssets","categories","setCategories","navigate","location","fetchData","assetsRes","get","depsRes","statsRes","empsRes","catsRes","data","err","console","error","navigateWithConfirm","path","length","userConfirmed","window","confirm","formatDate","dateString","date","Date","isNaN","day","String","getDate","padStart","month","getMonth","year","getFullYear","formatEmployeeName","employeeId","_parts$","_parts$2","employee","find","emp","id","parts","name","split","surname","firstInitial","charAt","toUpperCase","patronymicInitial","getStatusName","statusId","status","stat","getDepartmentName","departmentId","department","d","filteredAssets","filter","asset","searchLower","toLowerCase","assetFieldsToSearch","inventory_number","type","brand","model","status_id","responsible_person","department_id","room","purchase_date","join","includes","sortedAssets","sort","a","b","comparison","localeCompare","undefined","numeric","sensitivity","statusA","statusB","empA","empB","deptA","deptB","roomA","roomB","handleSort","column","handleDeleteSelected","delete","ids","prev","alert","handlePrintQRCode","res","post","inventoryNumber","timestamp","getTime","fileName","codes","htmlContent","forEach","code","qr_base64","printWindow","open","document","write","setTimeout","title","head","innerHTML","print","close","handleExportExcel","dataToExport","map","index","_categories$find","_statuses$find","_departments$find","category","cat","category_id","dept","responsiblePerson","serial_number","actual_user","comments","headers","worksheetData","ws","utils","aoa_to_sheet","colWidths","_","colIndex","maxLength","Math","max","row","toString","wch","min","headerStyle","font","bold","color","rgb","fill","fgColor","alignment","horizontal","vertical","i","cellAddress","encode_cell","r","c","s","borderStyle","border","top","style","bottom","left","right","range","decode_range","R","e","C","cell","mergedHeaders","hpt","workbook","book_new","book_append_sheet","writeFile","maxWidth","children","elevation","padding","marginTop","variant","gutterBottom","textAlign","fontSize","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","target","marginBottom","display","alignItems","mb","disabled","onClick","marginRight","size","indeterminate","checked","allIds","sx","cursor","hover","stopPropagation","trim","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/AssetList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  Checkbox,\r\n  Box,\r\n} from '@mui/material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst AssetList = () => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation(); // Для отслеживания пути\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n        const catsRes = await axios.get('http://localhost:5000/api/categories');\r\n\r\n        setAssets(assetsRes.data);\r\n        setDepartments(depsRes.data);\r\n        setStatuses(statsRes.data);\r\n        setEmployees(empsRes.data);\r\n        setCategories(catsRes.data);\r\n        \r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке данных:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Запрет перехода со страницы при выделеных чекбоксах\r\n  const navigateWithConfirm = (path) => {\r\n  if (selectedAssets.length > 0) {\r\n    const userConfirmed = window.confirm(\r\n      'Снять выделение и перейти на другую страницу?'\r\n    );\r\n    if (!userConfirmed) return; // Переход заблокирован\r\n    setSelectedAssets([]); // Снимаем выделение\r\n  }\r\n  navigate(path);\r\n};\r\n\r\n  // Форматирование даты в DD.MM.YYYY\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    if (isNaN(date)) return '';\r\n\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  // Форматирование ФИО → Иванов И.И.\r\n  const formatEmployeeName = (employeeId) => {\r\n    if (!employeeId) return '';\r\n\r\n    const employee = employees.find(emp => emp.id === employeeId);\r\n    if (!employee) return '';\r\n\r\n    const parts = employee.name.split(' ');\r\n    const surname = parts[0] || '';\r\n    const firstInitial = parts[1]?.charAt(0).toUpperCase() || '';\r\n    const patronymicInitial = parts[2]?.charAt(0).toUpperCase() || '';\r\n\r\n    return `${surname} ${firstInitial + '.'}${patronymicInitial + '.'}`;\r\n  };\r\n\r\n  \r\n  // Получение имени статуса\r\n  const getStatusName = (statusId) => {\r\n    const status = statuses.find(stat => stat.id === statusId);\r\n    return status?.name || '';\r\n  };\r\n  \r\n  // Получение имени отдела\r\n  const getDepartmentName = (departmentId) => {\r\n    const department = departments.find(d => d.id === departmentId);\r\n    return department?.name || '';\r\n  };\r\n  \r\n  // Фильтрация по строке поиска\r\n  const filteredAssets = assets.filter(asset => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    \r\n    const assetFieldsToSearch = [\r\n      asset.inventory_number,\r\n      `${asset.type} ${asset.brand} ${asset.model}`,\r\n      getStatusName(asset.status_id),\r\n      formatEmployeeName(asset.responsible_person),\r\n      getDepartmentName(asset.department_id),\r\n      asset.room || '',\r\n      formatDate(asset.purchase_date),\r\n    ].join(' ').toLowerCase();\r\n    \r\n    return assetFieldsToSearch.includes(searchLower);\r\n  });\r\n  \r\n  // Сортировка активов\r\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\r\n    let comparison = 0;\r\n    \r\n    switch (sortColumn) {\r\n      case 'inventory_number':\r\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, { numeric: true });\r\n        break;\r\n        case 'name':\r\n          comparison = a.type.localeCompare(b.type, undefined, { sensitivity: 'base' });\r\n          break;\r\n          case 'brand':\r\n            comparison = a.brand.localeCompare(b.brand, undefined, { sensitivity: 'base' });\r\n            break;\r\n            case 'model':\r\n              comparison = a.model.localeCompare(b.model, undefined, { sensitivity: 'base' });\r\n              break;\r\n              case 'status':\r\n                const statusA = getStatusName(a.status_id).toLowerCase();\r\n                const statusB = getStatusName(b.status_id).toLowerCase();\r\n                comparison = statusA.localeCompare(statusB);\r\n                break;\r\n                case 'responsible':\r\n                  const empA = formatEmployeeName(a.responsible_person).toLowerCase();\r\n                  const empB = formatEmployeeName(b.responsible_person).toLowerCase();\r\n                  comparison = empA.localeCompare(empB);\r\n                  break;\r\n                  case 'department':\r\n                    const deptA = getDepartmentName(a.department_id).toLowerCase();\r\n                    const deptB = getDepartmentName(b.department_id).toLowerCase();\r\n                    comparison = deptA.localeCompare(deptB);\r\n                    break;\r\n                    case 'room':\r\n                      const roomA = (a.room || '').toLowerCase();\r\n                      const roomB = (b.room || '').toLowerCase();\r\n                      comparison = roomA.localeCompare(roomB);\r\n                      break;\r\n                      case 'purchase_date':\r\n                        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\r\n                        break;\r\n                        default:\r\n                          return 0;\r\n                        }\r\n                        \r\n    if (sortOrder === 'desc') {\r\n      comparison = -comparison;\r\n    }\r\n    \r\n    return comparison;\r\n  });\r\n  \r\n  // Обработчик клика на заголовок столбца\r\n  const handleSort = (column) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n  \r\n  // Удаление выбранных активов\r\n  const handleDeleteSelected = async () => {\r\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\r\n    \r\n    try {\r\n      await axios.delete('http://localhost:5000/api/assets', {\r\n        data: { ids: selectedAssets },\r\n      });\r\n      \r\n      // Убираем удаленные активы из списка\r\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\r\n      setSelectedAssets([]);\r\n      alert('Выбранные активы успешно удалены');\r\n    } catch (err) {\r\n      alert('Ошибка при удалении активов');\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n  // Печать QR-кодов\r\n  const handlePrintQRCode = async (asset) => {\r\n    if (selectedAssets.length === 0) {\r\n      alert('Выберите хотя бы один актив');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/qrcodes', {\r\n        ids: selectedAssets\r\n      });\r\n      const inventoryNumber = asset.inventory_number;\r\n      const name = asset.name || `${asset.type} ${asset.brand} ${asset.model}`;\r\n      const timestamp = new Date().getTime();\r\n      const fileName = `${timestamp}.pdf`;\r\n      const codes = res.data;\r\n      \r\n      let htmlContent = `\r\n      <html>\r\n      <head>\r\n      <style>\r\n      @page {\r\n        size: A4;\r\n        margin: 0;\r\n        @top-center { content: ''; }\r\n        @bottom-left { content: ''; }\r\n        @bottom-right { content: ''; }\r\n        }\r\n        body {\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                gap: 10px;\r\n                padding: 20px;\r\n                background-color: #fff;\r\n                }\r\n                .qr-wrapper {\r\n                  width: 3cm; /* Ширина контейнера */\r\n                  height: 3cm; /* Высота контейнера */\r\n                  position: relative;\r\n                  font-size: 10px;\r\n                  text-align: center;\r\n                  }\r\n                  .qr-container {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    align-items: center;\r\n                    }\r\n                    img {\r\n                      max-width: 100%;\r\n                      max-height: 100%;\r\n                      object-fit: contain;\r\n                      }\r\n                      .text-top, .text-bottom {\r\n                        position: absolute;\r\n                        left: 50%; /* Центрирование по горизонтали */\r\n                        transform: translateX(-50%); /* Корректировка центрирования */\r\n                        white-space: nowrap; /* Запрет переноса строки */\r\n                        overflow: hidden; /* Скрывает лишний текст */\r\n                        text-overflow: ellipsis; /* Добавляет многоточие при обрезке */\r\n                        width: 90%; /* Ограничиваем ширину текста */\r\n                        font-size: 8px; /* Маленький размер шрифта */\r\n                        }\r\n                        .text-top {\r\n                          top: 0;\r\n                          }\r\n                          .text-bottom {\r\n                            bottom: 0;\r\n                            }\r\n                            </style>\r\n                            </head>\r\n                            <body>\r\n                            `;\r\n                            \r\n                            codes.forEach((code) => {\r\n                              htmlContent += `\r\n                              <div class=\"qr-wrapper\">\r\n                              <div class=\"qr-container\">\r\n                              <img src=\"data:image/png;base64,${code.qr_base64}\" />\r\n                              </div>\r\n                              <span class=\"text-top\">${code.name}</span>\r\n                              <span class=\"text-bottom\">${code.inventory_number}</span>\r\n                              </div>\r\n                              `;\r\n                            });\r\n\r\n                            htmlContent += '</body></html>';\r\n                            \r\n                            const printWindow = window.open('', '_blank');\r\n                            printWindow.document.write(htmlContent);\r\n                            \r\n                            setTimeout(() => {\r\n                              // Установка имени файла при скачивании\r\n                              printWindow.document.title = fileName;\r\n                              printWindow.document.head.innerHTML += `\r\n                              <meta http-equiv=\"Content-Disposition\" content=\"attachment; filename=${fileName}\" />\r\n                              `;\r\n                              \r\n                              printWindow.print();\r\n                              printWindow.close();\r\n                            }, 500);\r\n                          } catch (err) {\r\n                            console.error('Ошибка при генерации QR-кодов:', err);\r\n      alert('Не удалось получить QR-коды с сервера');\r\n    }\r\n  };\r\n  \r\n  const handleExportExcel = () => {\r\n    // Фильтруем активы: только выделенные, или все, если ничего не выбрано\r\n    const filteredAssets = selectedAssets.length > 0\r\n      ? assets.filter(asset => selectedAssets.includes(asset.id))\r\n      : assets;\r\n\r\n    // Преобразование данных для Excel\r\n    const dataToExport = filteredAssets.map((asset, index) => {\r\n      const category = categories.find((cat) => cat.id === asset.category_id)?.name || '';\r\n      const status = statuses.find((stat) => stat.id === asset.status_id)?.name || '';\r\n      const department = departments.find((dept) => dept.id === asset.department_id)?.name || '';\r\n      const responsiblePerson = formatEmployeeName(asset.responsible_person);\r\n\r\n      return [\r\n        index + 1,\r\n        asset.serial_number || '',\r\n        asset.inventory_number || '',\r\n        asset.type || '',\r\n        asset.brand || '',\r\n        asset.model || '',\r\n        formatDate(asset.purchase_date) || '',\r\n        category || '',\r\n        status || '',\r\n        asset.actual_user || '',\r\n        responsiblePerson || '',\r\n        department || '',\r\n        asset.room || '',\r\n        asset.comments || ''\r\n      ];\r\n    });\r\n\r\n    // Заголовки таблицы\r\n    const headers = [\r\n      '№',\r\n      'Серийный номер',\r\n      'Инвентарный номер',\r\n      'Тип',\r\n      'Фирма',\r\n      'Модель',\r\n      'Дата покупки',\r\n      'Категория',\r\n      'Статус',\r\n      'Фактический пользователь',\r\n      'Ответственный',\r\n      'Отдел',\r\n      'Помещение',\r\n      'Комментарий'\r\n    ];\r\n\r\n    // Добавление заголовков в начало\r\n    const worksheetData = [headers, ...dataToExport];\r\n\r\n    // Создание листа Excel\r\n    const ws = XLSX.utils.aoa_to_sheet(worksheetData);\r\n\r\n    // Автоподбор ширины столбцов\r\n    const colWidths = worksheetData[0].map((_, colIndex) => {\r\n      const maxLength = Math.max(\r\n        ...worksheetData.map(row => row[colIndex] ? row[colIndex].toString().length : 0)\r\n      );\r\n      return { wch: Math.min(maxLength + 2, 50) }; // Ограничиваем ширину до 50 символов\r\n    });\r\n    ws['!cols'] = colWidths;\r\n\r\n    // Стили для заголовка (жирный, центр, фон)\r\n    const headerStyle = {\r\n      font: { bold: true, color: { rgb: \"000000\" } },\r\n      fill: { fgColor: { rgb: \"E0E0E0\" } },\r\n      alignment: { horizontal: \"center\", vertical: \"center\" }\r\n    };\r\n\r\n    // Применяем стиль к заголовкам\r\n    for (let i = 0; i < headers.length; i++) {\r\n      const cellAddress = XLSX.utils.encode_cell({ r: 0, c: i });\r\n      if (!ws[cellAddress]) continue;\r\n      ws[cellAddress].s = headerStyle;\r\n    }\r\n\r\n    // Границы для всех ячеек\r\n    const borderStyle = {\r\n      border: {\r\n        top: { style: 'thin', color: { rgb: '000000' } },\r\n        bottom: { style: 'thin', color: { rgb: '000000' } },\r\n        left: { style: 'thin', color: { rgb: '000000' } },\r\n        right: { style: 'thin', color: { rgb: '000000' } }\r\n      },\r\n      alignment: { horizontal: 'left', vertical: 'top' }\r\n    };\r\n\r\n    // Применяем стиль к каждой ячейке\r\n    const range = XLSX.utils.decode_range(ws['!ref']);\r\n    for (let R = range.s.r; R <= range.e.r; ++R) {\r\n      for (let C = range.s.c; C <= range.e.c; ++C) {\r\n        const cell = ws[XLSX.utils.encode_cell({ r: R, c: C })];\r\n        if (!cell) continue;\r\n        cell.s = borderStyle;\r\n      }\r\n    }\r\n\r\n    // Улучшаем отображение заголовков\r\n    const mergedHeaders = XLSX.utils.aoa_to_sheet(worksheetData);\r\n    ws['!merges'] = mergedHeaders['!merges'];\r\n    ws['!rows'] = [{ hpt: 20 }]; // Высота первой строки\r\n\r\n    // Создаём книгу и сохраняем файл\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, ws, 'Оборудования');\r\n    XLSX.writeFile(workbook, 'Оборудования.xlsx');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n        <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center', fontSize: '30px' }}>\r\n          <strong>Список оборудования</strong>\r\n        </Typography>\r\n\r\n        {/* Поисковая строка */}\r\n        <TextField\r\n          label=\"Поиск\"\r\n          fullWidth\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{ marginBottom: '16px' }}\r\n        />\r\n\r\n        {/* Кнопки управления */}\r\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handleExportExcel}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Экспорт Excel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handlePrintQRCode}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Печать QR\r\n          </Button>\r\n\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handleDeleteSelected}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Удалить\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => navigateWithConfirm('/assets/new')}\r\n            style={{ marginRight: '8px' }}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Таблица активов */}\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  indeterminate={\r\n                    selectedAssets.length > 0 &&\r\n                    selectedAssets.length < filteredAssets.length\r\n                  }\r\n                  checked={selectedAssets.length === filteredAssets.length}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      const allIds = filteredAssets.map((asset) => asset.id);\r\n                      setSelectedAssets(allIds);\r\n                    } else {\r\n                      setSelectedAssets([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('inventory_number')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Инвентарный номер{' '}\r\n                {sortColumn === 'inventory_number' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('name')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Наименование{' '}\r\n                {sortColumn === 'name' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('status')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Статус{' '}\r\n                {sortColumn === 'status' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('responsible')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Ответственный{' '}\r\n                {sortColumn === 'responsible' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('department')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Отдел{' '}\r\n                {sortColumn === 'department' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('room')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Помещение{' '}\r\n                {sortColumn === 'room' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => handleSort('purchase_date')}\r\n                sx={{ cursor: 'pointer' }}\r\n              >\r\n                Дата покупки{' '}\r\n                {sortColumn === 'purchase_date' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAssets.map((asset) => (\r\n              <TableRow\r\n                key={asset.id}\r\n                hover\r\n                onClick={() => navigateWithConfirm(`/assets/${asset.id}`)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  checked={selectedAssets.includes(asset.id)}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedAssets([...selectedAssets, asset.id]);\r\n                    } else {\r\n                      setSelectedAssets(selectedAssets.filter(id => id !== asset.id));\r\n                    }\r\n                  }}\r\n                  onClick={(e) => e.stopPropagation()} // Чтобы клик по чекбоксу не открывал карточку актива\r\n                />\r\n              </TableCell>\r\n                <TableCell>{asset.inventory_number}</TableCell>\r\n                <TableCell>{`${asset.type || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || ''}</TableCell>\r\n                <TableCell>{getStatusName(asset.status_id)}</TableCell>\r\n                <TableCell>{formatEmployeeName(asset.responsible_person)}</TableCell>\r\n                <TableCell>{getDepartmentName(asset.department_id)}</TableCell>\r\n                <TableCell>{asset.room || ''}</TableCell>\r\n                <TableCell>{asset.purchase_date ? formatDate(asset.purchase_date) : ''}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}