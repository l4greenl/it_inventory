{"ast":null,"code":"var _jsxFileName = \"D:\\\\it_inventory.localhost\\\\frontend\\\\src\\\\components\\\\AddAsset.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AddAsset.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, TextField, Button, Typography, Grid, FormControl, InputLabel, Select, MenuItem, FormHelperText,\n// <<<--- ИМПОРТ ДЛЯ КНОПКИ ОТМЕНА\nDialog,\n// Для подтверждения отмены, если форма не пуста\nDialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAsset = ({\n  currentUser\n}) => {\n  _s();\n  const [asset, setAsset] = useState({\n    serial_number: '',\n    inventory_number: '',\n    type_id: '',\n    // Изменено с category_id\n    brand: '',\n    model: '',\n    // Динамические поля будут добавлены позже\n    status_id: '',\n    actual_user: '',\n    responsible_person: '',\n    department_id: '',\n    // Становится обязательным\n    room: '',\n    purchase_date: '',\n    // Становится обязательным\n    comments: ''\n  });\n\n  // Состояния для выпадающих списков\n  const [types, setTypes] = useState([]); // Изменено с categories\n  const [statuses, setStatuses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n\n  // Состояния для динамических полей\n  const [typeProperties, setTypeProperties] = useState([]); // Список свойств для выбранного типа\n  const [dynamicFields, setDynamicFields] = useState({}); // Значения динамических полей\n\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  // <<<--- Состояние для модального окна подтверждения отмены\n  const [openCancelDialog, setOpenCancelDialog] = useState(false);\n\n  // Загрузка справочников\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [typesRes, statusesRes, employeesRes, departmentsRes] = await Promise.all([axios.get(`${API_BASE_URL}/api/types`, {\n          withCredentials: true\n        }),\n        // Изменено с /api/categories\n        axios.get(`${API_BASE_URL}/api/statuses`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/employees`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/departments`, {\n          withCredentials: true\n        })]);\n        setTypes(typesRes.data); // Изменено с setCategories\n        setStatuses(statusesRes.data);\n        setEmployees(employeesRes.data);\n        setDepartments(departmentsRes.data);\n      } catch (error) {\n        console.error('Ошибка при загрузке справочников:', error);\n        alert('Не удалось загрузить данные справочников.');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Загрузка свойств типа при изменении type_id\n  useEffect(() => {\n    const loadTypeProperties = async () => {\n      if (asset.type_id) {\n        try {\n          // Предполагается, что этот эндпоинт существует и возвращает свойства для типа\n          const res = await axios.get(`${API_BASE_URL}/api/types/${asset.type_id}/properties`, {\n            withCredentials: true\n          });\n          setTypeProperties(res.data);\n\n          // Инициализируем значения динамических полей\n          const initialDynamicFields = {};\n          res.data.forEach(prop => {\n            // Используем имя свойства как ключ для поля ввода\n            // Нужно сопоставить имя свойства с полем в модели Asset\n            const fieldName = mapPropertyNameToAssetField(prop.name);\n            if (fieldName) {\n              initialDynamicFields[fieldName] = ''; // Инициализируем пустой строкой\n            }\n          });\n          setDynamicFields(initialDynamicFields);\n        } catch (error) {\n          console.error('Ошибка при загрузке свойств типа:', error);\n          setTypeProperties([]);\n          setDynamicFields({});\n        }\n      } else {\n        setTypeProperties([]);\n        setDynamicFields({});\n      }\n    };\n    loadTypeProperties();\n  }, [asset.type_id]);\n\n  // Функция сопоставления имени свойства с полем в Asset\n  const mapPropertyNameToAssetField = propertyName => {\n    // Это сопоставление нужно адаптировать под реальные имена свойств в вашей БД\n    const mapping = {\n      'Диагональ': 'diagonal',\n      'Диагональ (дюймы)': 'diagonal',\n      'Операционная система': 'OS',\n      'Процессор': 'CPU',\n      'Оперативная память (ГБ)': 'RAM',\n      'Оперативная память': 'RAM',\n      'Диск (HDD/SSD)': 'Drive',\n      'Диск': 'Drive',\n      'IP-адрес': 'IP_address',\n      // В JS удобнее работать с IP_address\n      'Внутренний номер': 'number'\n      // Добавьте другие сопоставления, если они отличаются\n    };\n    return mapping[propertyName] || propertyName.toLowerCase().replace(/\\s+/g, '_'); // fallback\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAsset(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Очистка ошибок при изменении поля\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // <<<--- НОВАЯ ФУНКЦИЯ: Обработчик изменения Ответственного\n  const handleResponsiblePersonChange = async e => {\n    const employeeId = e.target.value;\n    handleChange(e); // Обновляем поле responsible_person в состоянии asset\n\n    if (employeeId) {\n      try {\n        // Запрашиваем данные сотрудника, включая department_id\n        // Предполагается, что API /api/employees/:id возвращает объект с department_id\n        const res = await axios.get(`${API_BASE_URL}/api/employees/${employeeId}`, {\n          withCredentials: true\n        });\n        const departmentId = res.data.department_id;\n\n        // Автоматически устанавливаем department_id\n        setAsset(prevAsset => ({\n          ...prevAsset,\n          department_id: departmentId || '' // Устанавливаем ID или пустую строку\n        }));\n\n        // Очищаем ошибку для department_id, если она была\n        if (errors.department_id) {\n          setErrors(prevErrors => ({\n            ...prevErrors,\n            department_id: ''\n          }));\n        }\n      } catch (error) {\n        console.error('Ошибка при получении данных сотрудника:', error);\n        alert('Не удалось получить отдел сотрудника. Пожалуйста, выберите отдел вручную.');\n        // В случае ошибки всё равно обновляем поле, но оставляем department_id пустым\n        setAsset(prevAsset => ({\n          ...prevAsset,\n          department_id: ''\n        }));\n      }\n    } else {\n      // Если сотрудник не выбран, очищаем отдел\n      setAsset(prevAsset => ({\n        ...prevAsset,\n        department_id: ''\n      }));\n    }\n  };\n\n  // Обработчик изменения динамических полей\n  const handleDynamicFieldChange = fieldName => e => {\n    const {\n      value\n    } = e.target;\n    setDynamicFields(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n    // Очистка ошибок для динамических полей, если они будут\n    // if (errors[fieldName]) {\n    //   setErrors((prev) => ({ ...prev, [fieldName]: '' }));\n    // }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // Проверка обязательных полей\n    if (!asset.inventory_number) newErrors.inventory_number = 'Обязательное поле';\n    if (!asset.type_id) newErrors.type_id = 'Обязательное поле'; // Изменено с category_id\n    if (!asset.status_id) newErrors.status_id = 'Обязательное поле';\n    if (!asset.responsible_person) newErrors.responsible_person = 'Обязательное поле';\n    if (!asset.department_id) newErrors.department_id = 'Обязательное поле'; // <<<--- Стало обязательным\n    if (!asset.purchase_date) newErrors.purchase_date = 'Обязательное поле'; // <<<--- Стало обязательным\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    try {\n      // Формируем данные для отправки, объединяя основные поля и динамические\n      const dataToSend = {\n        ...asset,\n        ...dynamicFields // Добавляем значения динамических полей\n        // Убедитесь, что имена полей в dynamicFields совпадают с ожидаемыми бэкендом (diagonal, CPU и т.д.)\n      };\n\n      // Обработка IP-адреса: если ключ в dynamicFields - 'IP_address', меняем его на 'IP-address' для бэкенда\n      // (Это зависит от того, как ваш бэкенд ожидает получить имя поля)\n      // const finalDataToSend = { ...dataToSend };\n      // if (finalDataToSend.IP_address !== undefined) {\n      //    finalDataToSend['IP-address'] = finalDataToSend.IP_address;\n      //    delete finalDataToSend.IP_address;\n      // }\n\n      await axios.post(`${API_BASE_URL}/api/assets`, dataToSend, {\n        withCredentials: true\n      });\n      alert('Актив успешно добавлен');\n      navigate('/assets');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Ошибка при добавлении актива:', error);\n      alert('Ошибка при добавлении актива: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message));\n    }\n  };\n\n  // <<<--- ФУНКЦИИ ДЛЯ ОТМЕНЫ\n  const handleOpenCancelDialog = () => {\n    // Проверим, были ли внесены изменения\n    const isFormTouched = asset.serial_number || asset.inventory_number || asset.type_id || asset.brand || asset.model || Object.keys(dynamicFields).some(key => dynamicFields[key]) || asset.status_id || asset.actual_user || asset.responsible_person || asset.department_id || asset.room || asset.purchase_date || asset.comments;\n    if (isFormTouched) {\n      setOpenCancelDialog(true);\n    } else {\n      // Если форма пуста, просто переходим\n      navigate('/assets');\n    }\n  };\n  const handleConfirmCancel = () => {\n    setOpenCancelDialog(false);\n    navigate('/assets'); // Переход на страницу списка активов\n  };\n  const handleCloseCancelDialog = () => {\n    setOpenCancelDialog(false);\n  };\n  // ----------------------------\n\n  // Функция для рендеринга динамического поля по имени свойства\n  const renderDynamicField = propertyName => {\n    const fieldName = mapPropertyNameToAssetField(propertyName);\n    const value = dynamicFields[fieldName] || '';\n\n    // Определяем тип поля ввода на основе имени свойства (можно усложнить)\n    let fieldType = 'text';\n    if (propertyName.toLowerCase().includes('дата')) {\n      fieldType = 'date';\n    }\n\n    // Можно добавить больше логики для выбора типа (например, Select для статусов ОС)\n\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      label: propertyName,\n      name: fieldName,\n      value: value,\n      onChange: handleDynamicFieldChange(fieldName),\n      fullWidth: true,\n      margin: \"normal\"\n      // Добавить error и helperText, если будут ошибки валидации для этих полей\n      // error={!!errors[fieldName]}\n      // helperText={errors[fieldName]}\n    }, fieldName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u043A\\u0442\\u0438\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0421\\u0435\\u0440\\u0438\\u0439\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\",\n            name: \"serial_number\",\n            value: asset.serial_number,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440 *\",\n            name: \"inventory_number\",\n            value: asset.inventory_number,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.inventory_number,\n            helperText: errors.inventory_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.type_id,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"type-label\",\n              children: \"\\u0422\\u0438\\u043F \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"type-label\" // Переименовано\n              ,\n              label: \"\\u0422\\u0438\\u043F \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 *\" // Переименовано\n              ,\n              name: \"type_id\" // Изменено с category_id\n              ,\n              value: asset.type_id // Изменено с category_id\n              ,\n              onChange: handleChange,\n              children: types.map(type =>\n              /*#__PURE__*/\n              // Изменено с categories\n              _jsxDEV(MenuItem, {\n                value: type.id,\n                children: type.name\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), errors.type_id && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.type_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0424\\u0438\\u0440\\u043C\\u0430\",\n            name: \"brand\",\n            value: asset.brand,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C\",\n            name: \"model\",\n            value: asset.model,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), typeProperties.map(property => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: renderDynamicField(property.name)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.status_id,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"status-label\",\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"status-label\",\n              label: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 *\",\n              name: \"status_id\",\n              value: asset.status_id,\n              onChange: handleChange,\n              children: statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: status.id,\n                children: status.name\n              }, status.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), errors.status_id && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.status_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0424\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\",\n            name: \"actual_user\",\n            value: asset.actual_user,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.responsible_person,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"responsible-person-label\",\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"responsible-person-label\",\n              label: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439 *\",\n              name: \"responsible_person\",\n              value: asset.responsible_person\n              // <<<--- ИЗМЕНЕНО: Используем новую функцию\n              ,\n              onChange: handleResponsiblePersonChange,\n              children: employees.map(emp => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: emp.id,\n                children: emp.name\n              }, emp.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), errors.responsible_person && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.responsible_person\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            error: !!errors.department_id,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"department-label\",\n              children: \"\\u041E\\u0442\\u0434\\u0435\\u043B (\\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"department-label\",\n              label: \"\\u041E\\u0442\\u0434\\u0435\\u043B (\\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u0435) *\",\n              name: \"department_id\",\n              value: asset.department_id,\n              onChange: handleChange\n              // <<<--- ИЗМЕНЕНО: Поле больше не заблокировано\n              // disabled\n              // style={{backgroundColor: '#f5f5f5',color: 'rgba(0, 0, 0, 0.38)'}}\n              ,\n              children: departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: dept.id,\n                children: dept.name\n              }, dept.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), errors.department_id && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: errors.department_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            name: \"room\",\n            value: asset.room,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438 *\",\n            name: \"purchase_date\",\n            type: \"date\",\n            value: asset.purchase_date,\n            onChange: handleChange,\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            error: !!errors.purchase_date,\n            helperText: errors.purchase_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n            name: \"comments\",\n            value: asset.comments,\n            onChange: handleChange,\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\" // Можно оставить primary или сделать grey\n          ,\n          onClick: handleOpenCancelDialog // <<<--- Используем новую функцию\n          ,\n          disabled: !currentUser || currentUser.role !== 'admin' // Блокировка для не-админов\n          ,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\" // <<<--- Зелёная кнопка\n          ,\n          disabled: !currentUser || currentUser.role !== 'admin' // Блокировка для не-админов\n          ,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u043A\\u0442\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCancelDialog,\n      onClose: handleCloseCancelDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Подтвердите отмену\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435? \\u0412\\u0441\\u0435 \\u0432\\u0432\\u0435\\u0434\\u0451\\u043D\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u043F\\u043E\\u0442\\u0435\\u0440\\u044F\\u043D\\u044B.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseCancelDialog,\n          color: \"primary\",\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmCancel,\n          color: \"error\",\n          autoFocus: true,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAsset, \"Gzsf4heIBr3MgD0CDakBen9qzEE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAsset;\nexport default AddAsset;\nvar _c;\n$RefreshReg$(_c, \"AddAsset\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","TextField","Button","Typography","Grid","FormControl","InputLabel","Select","MenuItem","FormHelperText","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","axios","useNavigate","API_BASE_URL","jsxDEV","_jsxDEV","AddAsset","currentUser","_s","asset","setAsset","serial_number","inventory_number","type_id","brand","model","status_id","actual_user","responsible_person","department_id","room","purchase_date","comments","types","setTypes","statuses","setStatuses","employees","setEmployees","departments","setDepartments","typeProperties","setTypeProperties","dynamicFields","setDynamicFields","errors","setErrors","navigate","openCancelDialog","setOpenCancelDialog","fetchData","typesRes","statusesRes","employeesRes","departmentsRes","Promise","all","get","withCredentials","data","error","console","alert","loadTypeProperties","res","initialDynamicFields","forEach","prop","fieldName","mapPropertyNameToAssetField","name","propertyName","mapping","toLowerCase","replace","handleChange","e","value","target","prev","handleResponsiblePersonChange","employeeId","departmentId","prevAsset","prevErrors","handleDynamicFieldChange","handleSubmit","preventDefault","newErrors","Object","keys","length","dataToSend","post","_error$response","_error$response$data","response","message","handleOpenCancelDialog","isFormTouched","some","key","handleConfirmCancel","handleCloseCancelDialog","renderDynamicField","fieldType","includes","label","onChange","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","style","marginTop","children","component","onSubmit","sx","display","flexDirection","gap","variant","container","spacing","item","xs","sm","helperText","id","labelId","map","type","property","status","emp","dept","InputLabelProps","shrink","multiline","rows","justifyContent","mt","color","onClick","disabled","role","open","onClose","autoFocus","_c","$RefreshReg$"],"sources":["D:/it_inventory.localhost/frontend/src/components/AddAsset.js"],"sourcesContent":["// frontend/src/components/AddAsset.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  // <<<--- ИМПОРТ ДЛЯ КНОПКИ ОТМЕНА\r\n  Dialog, // Для подтверждения отмены, если форма не пуста\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\r\n\r\nconst AddAsset = ({ currentUser }) => {\r\n  const [asset, setAsset] = useState({\r\n    serial_number: '',\r\n    inventory_number: '',\r\n    type_id: '', // Изменено с category_id\r\n    brand: '',\r\n    model: '',\r\n    // Динамические поля будут добавлены позже\r\n    status_id: '',\r\n    actual_user: '',\r\n    responsible_person: '',\r\n    department_id: '', // Становится обязательным\r\n    room: '',\r\n    purchase_date: '', // Становится обязательным\r\n    comments: ''\r\n  });\r\n\r\n  // Состояния для выпадающих списков\r\n  const [types, setTypes] = useState([]); // Изменено с categories\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  // Состояния для динамических полей\r\n  const [typeProperties, setTypeProperties] = useState([]); // Список свойств для выбранного типа\r\n  const [dynamicFields, setDynamicFields] = useState({}); // Значения динамических полей\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // <<<--- Состояние для модального окна подтверждения отмены\r\n  const [openCancelDialog, setOpenCancelDialog] = useState(false);\r\n\r\n  // Загрузка справочников\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [typesRes, statusesRes, employeesRes, departmentsRes] = await Promise.all([\r\n          axios.get(`${API_BASE_URL}/api/types`, { withCredentials: true }), // Изменено с /api/categories\r\n          axios.get(`${API_BASE_URL}/api/statuses`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/employees`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/departments`, { withCredentials: true }),\r\n        ]);\r\n\r\n        setTypes(typesRes.data); // Изменено с setCategories\r\n        setStatuses(statusesRes.data);\r\n        setEmployees(employeesRes.data);\r\n        setDepartments(departmentsRes.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке справочников:', error);\r\n        alert('Не удалось загрузить данные справочников.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Загрузка свойств типа при изменении type_id\r\n  useEffect(() => {\r\n    const loadTypeProperties = async () => {\r\n      if (asset.type_id) {\r\n        try {\r\n          // Предполагается, что этот эндпоинт существует и возвращает свойства для типа\r\n          const res = await axios.get(`${API_BASE_URL}/api/types/${asset.type_id}/properties`, { withCredentials: true });\r\n          setTypeProperties(res.data);\r\n\r\n          // Инициализируем значения динамических полей\r\n          const initialDynamicFields = {};\r\n          res.data.forEach(prop => {\r\n            // Используем имя свойства как ключ для поля ввода\r\n            // Нужно сопоставить имя свойства с полем в модели Asset\r\n            const fieldName = mapPropertyNameToAssetField(prop.name);\r\n            if (fieldName) {\r\n              initialDynamicFields[fieldName] = ''; // Инициализируем пустой строкой\r\n            }\r\n          });\r\n          setDynamicFields(initialDynamicFields);\r\n        } catch (error) {\r\n          console.error('Ошибка при загрузке свойств типа:', error);\r\n          setTypeProperties([]);\r\n          setDynamicFields({});\r\n        }\r\n      } else {\r\n        setTypeProperties([]);\r\n        setDynamicFields({});\r\n      }\r\n    };\r\n\r\n    loadTypeProperties();\r\n  }, [asset.type_id]);\r\n\r\n  // Функция сопоставления имени свойства с полем в Asset\r\n  const mapPropertyNameToAssetField = (propertyName) => {\r\n    // Это сопоставление нужно адаптировать под реальные имена свойств в вашей БД\r\n    const mapping = {\r\n      'Диагональ': 'diagonal',\r\n      'Диагональ (дюймы)': 'diagonal',\r\n      'Операционная система': 'OS',\r\n      'Процессор': 'CPU',\r\n      'Оперативная память (ГБ)': 'RAM',\r\n      'Оперативная память': 'RAM',\r\n      'Диск (HDD/SSD)': 'Drive',\r\n      'Диск': 'Drive',\r\n      'IP-адрес': 'IP_address', // В JS удобнее работать с IP_address\r\n      'Внутренний номер': 'number',\r\n      // Добавьте другие сопоставления, если они отличаются\r\n    };\r\n    return mapping[propertyName] || propertyName.toLowerCase().replace(/\\s+/g, '_'); // fallback\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAsset((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // Очистка ошибок при изменении поля\r\n    if (errors[name]) {\r\n      setErrors((prev) => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  // <<<--- НОВАЯ ФУНКЦИЯ: Обработчик изменения Ответственного\r\n  const handleResponsiblePersonChange = async (e) => {\r\n    const employeeId = e.target.value;\r\n    handleChange(e); // Обновляем поле responsible_person в состоянии asset\r\n\r\n    if (employeeId) {\r\n      try {\r\n        // Запрашиваем данные сотрудника, включая department_id\r\n        // Предполагается, что API /api/employees/:id возвращает объект с department_id\r\n        const res = await axios.get(`${API_BASE_URL}/api/employees/${employeeId}`, { withCredentials: true });\r\n        const departmentId = res.data.department_id;\r\n\r\n        // Автоматически устанавливаем department_id\r\n        setAsset(prevAsset => ({\r\n          ...prevAsset,\r\n          department_id: departmentId || '' // Устанавливаем ID или пустую строку\r\n        }));\r\n\r\n        // Очищаем ошибку для department_id, если она была\r\n        if (errors.department_id) {\r\n          setErrors(prevErrors => ({ ...prevErrors, department_id: '' }));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Ошибка при получении данных сотрудника:', error);\r\n        alert('Не удалось получить отдел сотрудника. Пожалуйста, выберите отдел вручную.');\r\n        // В случае ошибки всё равно обновляем поле, но оставляем department_id пустым\r\n        setAsset(prevAsset => ({\r\n          ...prevAsset,\r\n          department_id: ''\r\n        }));\r\n      }\r\n    } else {\r\n      // Если сотрудник не выбран, очищаем отдел\r\n      setAsset(prevAsset => ({\r\n        ...prevAsset,\r\n        department_id: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Обработчик изменения динамических полей\r\n  const handleDynamicFieldChange = (fieldName) => (e) => {\r\n    const { value } = e.target;\r\n    setDynamicFields((prev) => ({ ...prev, [fieldName]: value }));\r\n    // Очистка ошибок для динамических полей, если они будут\r\n    // if (errors[fieldName]) {\r\n    //   setErrors((prev) => ({ ...prev, [fieldName]: '' }));\r\n    // }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = {};\r\n\r\n    // Проверка обязательных полей\r\n    if (!asset.inventory_number) newErrors.inventory_number = 'Обязательное поле';\r\n    if (!asset.type_id) newErrors.type_id = 'Обязательное поле'; // Изменено с category_id\r\n    if (!asset.status_id) newErrors.status_id = 'Обязательное поле';\r\n    if (!asset.responsible_person) newErrors.responsible_person = 'Обязательное поле';\r\n    if (!asset.department_id) newErrors.department_id = 'Обязательное поле'; // <<<--- Стало обязательным\r\n    if (!asset.purchase_date) newErrors.purchase_date = 'Обязательное поле'; // <<<--- Стало обязательным\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Формируем данные для отправки, объединяя основные поля и динамические\r\n      const dataToSend = {\r\n        ...asset,\r\n        ...dynamicFields // Добавляем значения динамических полей\r\n        // Убедитесь, что имена полей в dynamicFields совпадают с ожидаемыми бэкендом (diagonal, CPU и т.д.)\r\n      };\r\n\r\n      // Обработка IP-адреса: если ключ в dynamicFields - 'IP_address', меняем его на 'IP-address' для бэкенда\r\n      // (Это зависит от того, как ваш бэкенд ожидает получить имя поля)\r\n      // const finalDataToSend = { ...dataToSend };\r\n      // if (finalDataToSend.IP_address !== undefined) {\r\n      //    finalDataToSend['IP-address'] = finalDataToSend.IP_address;\r\n      //    delete finalDataToSend.IP_address;\r\n      // }\r\n\r\n      await axios.post(`${API_BASE_URL}/api/assets`, dataToSend, { withCredentials: true });\r\n      alert('Актив успешно добавлен');\r\n      navigate('/assets');\r\n    } catch (error) {\r\n      console.error('Ошибка при добавлении актива:', error);\r\n      alert('Ошибка при добавлении актива: ' + (error.response?.data?.error || error.message));\r\n    }\r\n  };\r\n\r\n  // <<<--- ФУНКЦИИ ДЛЯ ОТМЕНЫ\r\n  const handleOpenCancelDialog = () => {\r\n    // Проверим, были ли внесены изменения\r\n    const isFormTouched =\r\n      asset.serial_number ||\r\n      asset.inventory_number ||\r\n      asset.type_id ||\r\n      asset.brand ||\r\n      asset.model ||\r\n      Object.keys(dynamicFields).some(key => dynamicFields[key]) ||\r\n      asset.status_id ||\r\n      asset.actual_user ||\r\n      asset.responsible_person ||\r\n      asset.department_id ||\r\n      asset.room ||\r\n      asset.purchase_date ||\r\n      asset.comments;\r\n\r\n    if (isFormTouched) {\r\n      setOpenCancelDialog(true);\r\n    } else {\r\n      // Если форма пуста, просто переходим\r\n      navigate('/assets');\r\n    }\r\n  };\r\n\r\n  const handleConfirmCancel = () => {\r\n    setOpenCancelDialog(false);\r\n    navigate('/assets'); // Переход на страницу списка активов\r\n  };\r\n\r\n  const handleCloseCancelDialog = () => {\r\n    setOpenCancelDialog(false);\r\n  };\r\n  // ----------------------------\r\n\r\n  // Функция для рендеринга динамического поля по имени свойства\r\n  const renderDynamicField = (propertyName) => {\r\n    const fieldName = mapPropertyNameToAssetField(propertyName);\r\n    const value = dynamicFields[fieldName] || '';\r\n\r\n    // Определяем тип поля ввода на основе имени свойства (можно усложнить)\r\n    let fieldType = 'text';\r\n    if (propertyName.toLowerCase().includes('дата')) {\r\n      fieldType = 'date';\r\n    }\r\n\r\n    // Можно добавить больше логики для выбора типа (например, Select для статусов ОС)\r\n\r\n    return (\r\n      <TextField\r\n        key={fieldName}\r\n        label={propertyName}\r\n        name={fieldName}\r\n        value={value}\r\n        onChange={handleDynamicFieldChange(fieldName)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        // Добавить error и helperText, если будут ошибки валидации для этих полей\r\n        // error={!!errors[fieldName]}\r\n        // helperText={errors[fieldName]}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: '20px' }}>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        <Typography variant=\"h5\">Добавить актив</Typography>\r\n\r\n        <Grid container spacing={2}>\r\n          {/* Серийный номер */}\r\n          <Grid item xs={6} sm={6}>\r\n            <TextField\r\n              label=\"Серийный номер\"\r\n              name=\"serial_number\"\r\n              value={asset.serial_number}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Инвентарный номер */}\r\n          <Grid item xs={6} sm={6}>\r\n            <TextField\r\n              label=\"Инвентарный номер *\"\r\n              name=\"inventory_number\"\r\n              value={asset.inventory_number}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={!!errors.inventory_number}\r\n              helperText={errors.inventory_number}\r\n            />\r\n          </Grid>\r\n\r\n          {/* Тип устройства (ранее Категория) */}\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth margin=\"normal\" error={!!errors.type_id}>\r\n              <InputLabel id=\"type-label\">Тип устройства *</InputLabel> {/* Переименовано */}\r\n              <Select\r\n                labelId=\"type-label\" // Переименовано\r\n                label=\"Тип устройства *\" // Переименовано\r\n                name=\"type_id\" // Изменено с category_id\r\n                value={asset.type_id} // Изменено с category_id\r\n                onChange={handleChange}\r\n              >\r\n                {types.map((type) => ( // Изменено с categories\r\n                  <MenuItem key={type.id} value={type.id}>\r\n                    {type.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {errors.type_id && <FormHelperText>{errors.type_id}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Фирма */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Фирма\"\r\n              name=\"brand\"\r\n              value={asset.brand}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Модель */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Модель\"\r\n              name=\"model\"\r\n              value={asset.model}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Динамические поля, полученные из type_properties */}\r\n          {typeProperties.map((property) => (\r\n            <Grid item xs={12} key={property.id}>\r\n              {renderDynamicField(property.name)}\r\n            </Grid>\r\n          ))}\r\n\r\n          {/* Статус */}\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth margin=\"normal\" error={!!errors.status_id}>\r\n              <InputLabel id=\"status-label\">Статус *</InputLabel>\r\n              <Select\r\n                labelId=\"status-label\"\r\n                label=\"Статус *\"\r\n                name=\"status_id\"\r\n                value={asset.status_id}\r\n                onChange={handleChange}\r\n              >\r\n                {statuses.map((status) => (\r\n                  <MenuItem key={status.id} value={status.id}>\r\n                    {status.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {errors.status_id && <FormHelperText>{errors.status_id}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Фактический пользователь */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Фактический пользователь\"\r\n              name=\"actual_user\"\r\n              value={asset.actual_user}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Ответственный */}\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth margin=\"normal\" error={!!errors.responsible_person}>\r\n              <InputLabel id=\"responsible-person-label\">Ответственный *</InputLabel>\r\n              <Select\r\n                labelId=\"responsible-person-label\"\r\n                label=\"Ответственный *\"\r\n                name=\"responsible_person\"\r\n                value={asset.responsible_person}\r\n                // <<<--- ИЗМЕНЕНО: Используем новую функцию\r\n                onChange={handleResponsiblePersonChange}\r\n              >\r\n                {employees.map((emp) => (\r\n                  <MenuItem key={emp.id} value={emp.id}>\r\n                    {emp.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {errors.responsible_person && <FormHelperText>{errors.responsible_person}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Отдел (подразделение) */}\r\n          <Grid item xs={12} sm={6}>\r\n            <FormControl fullWidth margin=\"normal\" error={!!errors.department_id}>\r\n              <InputLabel id=\"department-label\">Отдел (подразделение) *</InputLabel>\r\n              <Select\r\n                labelId=\"department-label\"\r\n                label=\"Отдел (подразделение) *\"\r\n                name=\"department_id\"\r\n                value={asset.department_id}\r\n                onChange={handleChange}\r\n                // <<<--- ИЗМЕНЕНО: Поле больше не заблокировано\r\n                // disabled\r\n                // style={{backgroundColor: '#f5f5f5',color: 'rgba(0, 0, 0, 0.38)'}}\r\n              >\r\n                {departments.map((dept) => (\r\n                  <MenuItem key={dept.id} value={dept.id}>\r\n                    {dept.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {errors.department_id && <FormHelperText>{errors.department_id}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Помещение */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Помещение\"\r\n              name=\"room\"\r\n              value={asset.room}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {/* Дата покупки */}\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              label=\"Дата покупки *\"\r\n              name=\"purchase_date\"\r\n              type=\"date\"\r\n              value={asset.purchase_date}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              error={!!errors.purchase_date}\r\n              helperText={errors.purchase_date}\r\n            />\r\n          </Grid>\r\n\r\n          {/* Комментарий */}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Комментарий\"\r\n              name=\"comments\"\r\n              value={asset.comments}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* <<<--- ИЗМЕНЕНО: Кнопки \"Отмена\" и \"Добавить\" внизу */}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\" // Можно оставить primary или сделать grey\r\n            onClick={handleOpenCancelDialog} // <<<--- Используем новую функцию\r\n            disabled={!currentUser || currentUser.role !== 'admin'} // Блокировка для не-админов\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"success\" // <<<--- Зелёная кнопка\r\n            disabled={!currentUser || currentUser.role !== 'admin'} // Блокировка для не-админов\r\n          >\r\n            Добавить актив\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* <<<--- Модальное окно подтверждения отмены */}\r\n      <Dialog\r\n        open={openCancelDialog}\r\n        onClose={handleCloseCancelDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Подтвердите отмену\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Вы уверены, что хотите отменить добавление? Все введённые данные будут потеряны.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseCancelDialog} color=\"primary\">\r\n            Продолжить заполнение\r\n          </Button>\r\n          <Button onClick={handleConfirmCancel} color=\"error\" autoFocus>\r\n            Отменить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddAsset;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}