{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [assetCounts, setAssetCounts] = useState({});\n\n  // Загружаем сотрудников и отделы\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        setEmployees(empsRes.data);\n        setDepartments(depsRes.data);\n      } catch (err) {\n        console.error('Ошибка загрузки сотрудников:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Для каждого сотрудника загружаем количество оборудования\n  useEffect(() => {\n    const fetchAssetCounts = async () => {\n      const counts = {};\n      for (let emp of employees) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/employees/${emp.id}/assets_count`);\n          counts[emp.id] = res.data.assets_count;\n        } catch (err) {\n          console.error(`Ошибка при загрузке оборудования для ${emp.name}:`, err);\n          counts[emp.id] = 0;\n        }\n      }\n      setAssetCounts(counts);\n    };\n    if (employees.length > 0) {\n      fetchAssetCounts();\n    }\n  }, [employees]);\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: employees.map(emp => {\n      const dept = departments.find(d => d.id === emp.department_id);\n\n      // Разбиваем ФИО в React\n      const fullName = emp.name.split(' ');\n      const surname = fullName[0] || '';\n      const name = fullName[1] || '';\n      const patronymic = fullName[2] || '';\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: surname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: patronymic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: (dept === null || dept === void 0 ? void 0 : dept.name) || 'Не указано'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: emp.room || '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: emp.internal_phone || '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          align: \"right\",\n          children: assetCounts[emp.id] || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, emp.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"8hcSjvfrlli5xIk2XUAhpX8OpyU=\");\n_c = EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["EmployeeList","_s","employees","setEmployees","useState","departments","setDepartments","assetCounts","setAssetCounts","useEffect","fetchData","empsRes","axios","get","depsRes","data","err","console","error","fetchAssetCounts","counts","emp","res","id","assets_count","name","length","_jsxDEV","TableBody","children","map","dept","find","d","department_id","fullName","split","surname","patronymic","TableRow","TableCell","fileName","_jsxFileName","lineNumber","columnNumber","room","internal_phone","align","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/EmployeeList.js"],"sourcesContent":["const EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [assetCounts, setAssetCounts] = useState({});\r\n\r\n  // Загружаем сотрудников и отделы\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n\r\n        setEmployees(empsRes.data);\r\n        setDepartments(depsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки сотрудников:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Для каждого сотрудника загружаем количество оборудования\r\n  useEffect(() => {\r\n    const fetchAssetCounts = async () => {\r\n      const counts = {};\r\n      for (let emp of employees) {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/employees/${emp.id}/assets_count`);\r\n          counts[emp.id] = res.data.assets_count;\r\n        } catch (err) {\r\n          console.error(`Ошибка при загрузке оборудования для ${emp.name}:`, err);\r\n          counts[emp.id] = 0;\r\n        }\r\n      }\r\n      setAssetCounts(counts);\r\n    };\r\n\r\n    if (employees.length > 0) {\r\n      fetchAssetCounts();\r\n    }\r\n  }, [employees]);\r\n\r\n  return (\r\n    <TableBody>\r\n      {employees.map(emp => {\r\n        const dept = departments.find(d => d.id === emp.department_id);\r\n\r\n        // Разбиваем ФИО в React\r\n        const fullName = emp.name.split(' ');\r\n        const surname = fullName[0] || '';\r\n        const name = fullName[1] || '';\r\n        const patronymic = fullName[2] || '';\r\n\r\n        return (\r\n          <TableRow key={emp.id}>\r\n            <TableCell>{surname}</TableCell>\r\n            <TableCell>{name}</TableCell>\r\n            <TableCell>{patronymic}</TableCell>\r\n            <TableCell>-</TableCell>\r\n            <TableCell>{dept?.name || 'Не указано'}</TableCell>\r\n            <TableCell>{emp.room || '-'}</TableCell>\r\n            <TableCell>{emp.internal_phone || '-'}</TableCell>\r\n            <TableCell align=\"right\">{assetCounts[emp.id] || 0}</TableCell>\r\n          </TableRow>\r\n        );\r\n      })}\r\n    </TableBody>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}