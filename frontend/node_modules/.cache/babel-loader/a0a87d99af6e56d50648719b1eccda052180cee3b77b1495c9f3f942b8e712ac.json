{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport html2canvas from 'html2canvas'; // Убедись, что установлен\nimport { QRCodeSVG } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = ({\n  currentUser\n}) => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const navigate = useNavigate();\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        setAssets(assetsRes.data);\n        setDepartments(depsRes.data);\n        setStatuses(statsRes.data);\n        setEmployees(empsRes.data);\n      } catch (err) {\n        console.error('Ошибка загрузки данных:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Фильтрация по строке поиска\n  const filteredAssets = assets.filter(asset => {\n    var _asset$inventory_numb;\n    const searchLower = searchTerm.toLowerCase();\n    return ((_asset$inventory_numb = asset.inventory_number) === null || _asset$inventory_numb === void 0 ? void 0 : _asset$inventory_numb.toLowerCase().includes(searchLower)) || `${asset.type} ${asset.brand} ${asset.model}`.toLowerCase().includes(searchLower);\n  });\n\n  // Сортировка активов\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\n    let comparison = 0;\n    switch (sortColumn) {\n      case 'inventory_number':\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, {\n          numeric: true\n        });\n        break;\n      case 'purchase_date':\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\n        break;\n      default:\n        return 0;\n    }\n    if (sortOrder === 'desc') {\n      comparison = -comparison;\n    }\n    return comparison;\n  });\n\n  // Обработчик изменения чекбокса\n  const handleCheckboxChange = id => {\n    setSelectedAssets(prev => prev.includes(id) ? prev.filter(assetId => assetId !== id) : [...prev, id]);\n  };\n\n  // Массовая печать QR-кодов\n  const handlePrintQRCode = () => {\n    if (selectedAssets.length === 0) {\n      alert('Выберите хотя бы один актив для печати QR-кодов');\n      return;\n    }\n    const printWindow = window.open('', '_blank', 'width=800,height=600');\n    const selectedAssetsData = assets.filter(asset => selectedAssets.includes(asset.id));\n    let htmlContent = `\n      <html>\n        <head>\n          <style>\n            body {\n              display: flex;\n              flex-wrap: wrap;\n              gap: 10px;\n              padding: 10px;\n              background-color: #ffffff;\n            }\n            .qr-wrapper {\n              width: 3cm;\n              height: 3cm;\n              position: relative;\n              font-size: 10px;\n              text-align: center;\n            }\n            .top-left {\n              position: absolute;\n              top: 0;\n              left: 0;\n            }\n            .bottom-right {\n              position: absolute;\n              bottom: 0;\n              right: 0;\n            }\n            img {\n              width: 100%;\n              height: 100%;\n              object-fit: contain;\n            }\n          </style>\n        </head>\n        <body>\n    `;\n    selectedAssetsData.forEach(asset => {\n      const name = `${asset.type} ${asset.brand} ${asset.model}`;\n      const url = `http://localhost:3000/assets/${asset.id}`;\n\n      // Генерируем SVG напрямую через qrcode.react\n      const qrCanvas = document.createElement('canvas');\n      const ctx = qrCanvas.getContext('2d');\n      const size = 200;\n      qrCanvas.width = size;\n      qrCanvas.height = size;\n\n      // Рисуем QR-код\n      const qrCode = new QRCodeSVG({\n        value: url,\n        size: `${size}px`,\n        fgColor: '#000000'\n      });\n      const serializer = new XMLSerializer();\n      const svgStr = serializer.serializeToString(qrCode.querySelector('svg'));\n      htmlContent += `\n        <div class=\"qr-wrapper\">\n          <img src=\"image/svg+xml;base64,${btoa(svgStr)}\" />\n          <span class=\"top-left\">${name}</span>\n          <span class=\"bottom-right\">${asset.inventory_number}</span>\n        </div>\n      `;\n    });\n    htmlContent += '</body></html>';\n    printWindow.document.write(htmlContent);\n    setTimeout(() => {\n      printWindow.print();\n      printWindow.close();\n      setSelectedAssets([]); // Снимаем выделение после печати\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        fullWidth: true,\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => navigate('/assets/new'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          disabled: selectedAssets.length === 0,\n          onClick: handlePrintQRCode,\n          children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          disabled: selectedAssets.length === 0,\n          onClick: async () => {\n            if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\n            try {\n              await axios.delete('http://localhost:5000/api/assets', {\n                data: {\n                  ids: selectedAssets\n                }\n              });\n              setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\n              setSelectedAssets([]);\n              alert('Выбранные активы успешно удалены');\n            } catch (err) {\n              alert('Ошибка при удалении активов');\n              console.error(err);\n            }\n          },\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.length === assets.length && selectedAssets.length > 0,\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < assets.length,\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedAssets(assets.map(asset => asset.id));\n                  } else {\n                    setSelectedAssets([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('inventory_number'),\n              children: [\"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\", ' ', sortColumn === 'inventory_number' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('purchase_date'),\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\", ' ', sortColumn === 'purchase_date' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedAssets.map(asset => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.includes(asset.id),\n                onChange: e => handleCheckboxChange(asset.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.inventory_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(asset.purchase_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: `${asset.type} ${asset.brand} ${asset.model}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getStatusName(asset.status_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatEmployeeName(asset.responsible_person)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getDepartmentName(asset.department_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, asset.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n// Форматирование даты\n_s(AssetList, \"HjDB2ZhdkalFc3REQroUF50erL4=\", false, function () {\n  return [useNavigate];\n});\n_c = AssetList;\nconst formatDate = dateString => {\n  if (!dateString) return '';\n  const date = new Date(dateString);\n  if (isNaN(date)) return '';\n  return `${String(date.getDate()).padStart(2, '0')}.${String(date.getMonth() + 1).padStart(2, '0')}.${date.getFullYear()}`;\n};\n\n// Форматирование ФИО сотрудника\nconst formatEmployeeName = employeeId => {\n  var _parts$, _parts$2;\n  if (!employeeId) return 'Не указан';\n  const employee = employees.find(emp => emp.id === employeeId);\n  if (!employee) return 'Не найден';\n  const parts = employee.name.split(' ');\n  const surname = parts[0] || '';\n  const firstInitial = ((_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.charAt(0).toUpperCase()) || '';\n  const patronymicInitial = ((_parts$2 = parts[2]) === null || _parts$2 === void 0 ? void 0 : _parts$2.charAt(0).toUpperCase()) || '';\n  return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}${patronymicInitial ? '.' : ''}`;\n};\n\n// Получение имени статуса\nconst getStatusName = statusId => {\n  const status = statuses.find(stat => stat.id === statusId);\n  return (status === null || status === void 0 ? void 0 : status.name) || 'Не указан';\n};\n\n// Получение имени отдела\nconst getDepartmentName = departmentId => {\n  const department = departments.find(d => d.id === departmentId);\n  return (department === null || department === void 0 ? void 0 : department.name) || 'Не указан';\n};\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","TextField","Table","TableHead","TableRow","TableCell","TableBody","Button","useNavigate","html2canvas","QRCodeSVG","jsxDEV","_jsxDEV","AssetList","currentUser","_s","assets","setAssets","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortOrder","setSortOrder","selectedAssets","setSelectedAssets","navigate","fetchData","assetsRes","get","depsRes","statsRes","empsRes","data","setDepartments","setStatuses","setEmployees","err","console","error","filteredAssets","filter","asset","_asset$inventory_numb","searchLower","toLowerCase","inventory_number","includes","type","brand","model","sortedAssets","sort","a","b","comparison","localeCompare","undefined","numeric","Date","purchase_date","handleCheckboxChange","id","prev","assetId","handlePrintQRCode","length","alert","printWindow","window","open","selectedAssetsData","htmlContent","forEach","name","url","qrCanvas","document","createElement","ctx","getContext","size","width","height","qrCode","value","fgColor","serializer","XMLSerializer","svgStr","serializeToString","querySelector","btoa","write","setTimeout","print","close","maxWidth","children","elevation","style","padding","marginTop","variant","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","onChange","e","target","marginBottom","Box","display","gap","mb","color","onClick","disabled","confirm","delete","ids","Checkbox","checked","indeterminate","map","handleSort","hover","formatDate","getStatusName","status_id","formatEmployeeName","responsible_person","getDepartmentName","department_id","room","_c","dateString","date","isNaN","String","getDate","padStart","getMonth","getFullYear","employeeId","_parts$","_parts$2","employee","employees","find","emp","parts","split","surname","firstInitial","charAt","toUpperCase","patronymicInitial","statusId","status","statuses","stat","departmentId","department","departments","d","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/AssetList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas'; // Убедись, что установлен\r\nimport { QRCodeSVG } from 'qrcode.react';\r\n\r\nconst AssetList = ({ currentUser }) => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n        const statsRes = await axios.get('http://localhost:5000/api/statuses');\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n\r\n        setAssets(assetsRes.data);\r\n        setDepartments(depsRes.data);\r\n        setStatuses(statsRes.data);\r\n        setEmployees(empsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки данных:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Фильтрация по строке поиска\r\n  const filteredAssets = assets.filter((asset) => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      asset.inventory_number?.toLowerCase().includes(searchLower) ||\r\n      `${asset.type} ${asset.brand} ${asset.model}`.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  // Сортировка активов\r\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\r\n    let comparison = 0;\r\n\r\n    switch (sortColumn) {\r\n      case 'inventory_number':\r\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, { numeric: true });\r\n        break;\r\n      case 'purchase_date':\r\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\r\n        break;\r\n      default:\r\n        return 0;\r\n    }\r\n\r\n    if (sortOrder === 'desc') {\r\n      comparison = -comparison;\r\n    }\r\n\r\n    return comparison;\r\n  });\r\n\r\n  // Обработчик изменения чекбокса\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedAssets(prev =>\r\n      prev.includes(id)\r\n        ? prev.filter(assetId => assetId !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  // Массовая печать QR-кодов\r\n  const handlePrintQRCode = () => {\r\n    if (selectedAssets.length === 0) {\r\n      alert('Выберите хотя бы один актив для печати QR-кодов');\r\n      return;\r\n    }\r\n\r\n    const printWindow = window.open('', '_blank', 'width=800,height=600');\r\n    const selectedAssetsData = assets.filter(asset => selectedAssets.includes(asset.id));\r\n\r\n    let htmlContent = `\r\n      <html>\r\n        <head>\r\n          <style>\r\n            body {\r\n              display: flex;\r\n              flex-wrap: wrap;\r\n              gap: 10px;\r\n              padding: 10px;\r\n              background-color: #ffffff;\r\n            }\r\n            .qr-wrapper {\r\n              width: 3cm;\r\n              height: 3cm;\r\n              position: relative;\r\n              font-size: 10px;\r\n              text-align: center;\r\n            }\r\n            .top-left {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n            }\r\n            .bottom-right {\r\n              position: absolute;\r\n              bottom: 0;\r\n              right: 0;\r\n            }\r\n            img {\r\n              width: 100%;\r\n              height: 100%;\r\n              object-fit: contain;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n    `;\r\n\r\n    selectedAssetsData.forEach(asset => {\r\n      const name = `${asset.type} ${asset.brand} ${asset.model}`;\r\n      const url = `http://localhost:3000/assets/${asset.id}`;\r\n\r\n      // Генерируем SVG напрямую через qrcode.react\r\n      const qrCanvas = document.createElement('canvas');\r\n      const ctx = qrCanvas.getContext('2d');\r\n      const size = 200;\r\n      qrCanvas.width = size;\r\n      qrCanvas.height = size;\r\n\r\n      // Рисуем QR-код\r\n      const qrCode = new QRCodeSVG({ value: url, size: `${size}px`, fgColor: '#000000' });\r\n      const serializer = new XMLSerializer();\r\n      const svgStr = serializer.serializeToString(qrCode.querySelector('svg'));\r\n\r\n      htmlContent += `\r\n        <div class=\"qr-wrapper\">\r\n          <img src=\"image/svg+xml;base64,${btoa(svgStr)}\" />\r\n          <span class=\"top-left\">${name}</span>\r\n          <span class=\"bottom-right\">${asset.inventory_number}</span>\r\n        </div>\r\n      `;\r\n    });\r\n\r\n    htmlContent += '</body></html>';\r\n\r\n    printWindow.document.write(htmlContent);\r\n\r\n    setTimeout(() => {\r\n      printWindow.print();\r\n      printWindow.close();\r\n      setSelectedAssets([]); // Снимаем выделение после печати\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n        <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center' }}>\r\n          <strong>Список оборудования</strong>\r\n        </Typography>\r\n\r\n        {/* Поисковая строка */}\r\n        <TextField\r\n          label=\"Поиск\"\r\n          fullWidth\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{ marginBottom: '16px' }}\r\n        />\r\n\r\n        {/* Кнопки управления */}\r\n        <Box display=\"flex\" gap={2} mb={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => navigate('/assets/new')}\r\n          >\r\n            Добавить\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handlePrintQRCode}\r\n          >\r\n            Печать QR\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={async () => {\r\n              if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\r\n\r\n              try {\r\n                await axios.delete('http://localhost:5000/api/assets', {\r\n                  data: { ids: selectedAssets },\r\n                });\r\n\r\n                setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\r\n                setSelectedAssets([]);\r\n                alert('Выбранные активы успешно удалены');\r\n              } catch (err) {\r\n                alert('Ошибка при удалении активов');\r\n                console.error(err);\r\n              }\r\n            }}\r\n          >\r\n            Удалить выделенные\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Таблица активов */}\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  checked={selectedAssets.length === assets.length && selectedAssets.length > 0}\r\n                  indeterminate={\r\n                    selectedAssets.length > 0 &&\r\n                    selectedAssets.length < assets.length\r\n                  }\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedAssets(assets.map(asset => asset.id));\r\n                    } else {\r\n                      setSelectedAssets([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell onClick={() => handleSort('inventory_number')}>\r\n                Инвентарный номер{' '}\r\n                {sortColumn === 'inventory_number' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell onClick={() => handleSort('purchase_date')}>\r\n                Дата покупки{' '}\r\n                {sortColumn === 'purchase_date' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell>Наименование</TableCell>\r\n              <TableCell>Статус</TableCell>\r\n              <TableCell>Ответственный</TableCell>\r\n              <TableCell>Отдел</TableCell>\r\n              <TableCell>Помещение</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAssets.map((asset) => (\r\n              <TableRow key={asset.id} hover>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selectedAssets.includes(asset.id)}\r\n                    onChange={(e) => handleCheckboxChange(asset.id)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{asset.inventory_number}</TableCell>\r\n                <TableCell>{formatDate(asset.purchase_date)}</TableCell>\r\n                <TableCell>{`${asset.type} ${asset.brand} ${asset.model}`}</TableCell>\r\n                <TableCell>{getStatusName(asset.status_id)}</TableCell>\r\n                <TableCell>{formatEmployeeName(asset.responsible_person)}</TableCell>\r\n                <TableCell>{getDepartmentName(asset.department_id)}</TableCell>\r\n                <TableCell>{asset.room}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Форматирование даты\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  if (isNaN(date)) return '';\r\n  return `${String(date.getDate()).padStart(2, '0')}.${String(date.getMonth() + 1).padStart(2, '0')}.${date.getFullYear()}`;\r\n};\r\n\r\n// Форматирование ФИО сотрудника\r\nconst formatEmployeeName = (employeeId) => {\r\n  if (!employeeId) return 'Не указан';\r\n  const employee = employees.find(emp => emp.id === employeeId);\r\n  if (!employee) return 'Не найден';\r\n\r\n  const parts = employee.name.split(' ');\r\n  const surname = parts[0] || '';\r\n  const firstInitial = parts[1]?.charAt(0).toUpperCase() || '';\r\n  const patronymicInitial = parts[2]?.charAt(0).toUpperCase() || '';\r\n\r\n  return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}${patronymicInitial ? '.' : ''}`;\r\n};\r\n\r\n// Получение имени статуса\r\nconst getStatusName = (statusId) => {\r\n  const status = statuses.find(stat => stat.id === statusId);\r\n  return status?.name || 'Не указан';\r\n};\r\n\r\n// Получение имени отдела\r\nconst getDepartmentName = (departmentId) => {\r\n  const department = departments.find(d => d.id === departmentId);\r\n  return department?.name || 'Не указан';\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}