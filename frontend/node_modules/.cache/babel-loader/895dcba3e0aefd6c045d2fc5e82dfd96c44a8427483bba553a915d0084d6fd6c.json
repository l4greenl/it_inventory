{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\Directory.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Directory.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Paper, Typography, Box, Table, TableBody, TableCell, TableRow, TextField, Button, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Directory = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  // Для добавления\n  const [newCategory, setNewCategory] = useState('');\n  const [newStatus, setNewStatus] = useState('');\n  const [newDepartment, setNewDepartment] = useState('');\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    department_id: ''\n  });\n  const [departmentList, setDepartmentList] = useState([]);\n  const [employeeDepartmentList, setEmployeeDepartmentList] = useState([]);\n  const fetchAllDirectories = async () => {\n    try {\n      const [cats, stats, deps, emps] = await Promise.all([fetch('http://localhost:5000/api/categories').then(res => res.json()), fetch('http://localhost:5000/api/statuses').then(res => res.json()), fetch('http://localhost:5000/api/departments').then(res => res.json()), fetch('http://localhost:5000/api/employees').then(res => res.json())]);\n      setCategories(cats);\n      setStatuses(stats);\n      setDepartments(deps);\n      setEmployees(emps);\n      setDepartmentList([...deps]);\n      setEmployeeDepartmentList([...deps]);\n    } catch (err) {\n      console.error('Ошибка загрузки справочников:', err);\n    }\n  };\n  useEffect(() => {\n    fetchAllDirectories();\n  }, []);\n\n  // === Категории ===\n  const handleAddCategory = async () => {\n    if (!newCategory.trim()) return alert('Введите категорию');\n    try {\n      const res = await fetch('http://localhost:5000/api/categories', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newCategory\n        })\n      });\n      const data = await res.json();\n      setCategories([...categories, data]);\n      setNewCategory('');\n    } catch (err) {\n      alert('Ошибка при добавлении категории');\n      console.error(err);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    if (!window.confirm('Удалить эту категорию?')) return;\n    try {\n      await fetch(`http://localhost:5000/api/categories/${id}`, {\n        method: 'DELETE'\n      });\n      fetchAllDirectories();\n    } catch (err) {\n      alert('Ошибка при удалении категории');\n      console.error(err);\n    }\n  };\n\n  // === Статусы ===\n  const handleAddStatus = async () => {\n    if (!newStatus.trim()) return alert('Введите статус');\n    try {\n      const res = await fetch('http://localhost:5000/api/statuses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newStatus\n        })\n      });\n      const data = await res.json();\n      setStatuses([...statuses, data]);\n      setNewStatus('');\n    } catch (err) {\n      alert('Ошибка при добавлении статуса');\n      console.error(err);\n    }\n  };\n  const handleDeleteStatus = async id => {\n    if (!window.confirm('Удалить этот статус?')) return;\n    try {\n      await fetch(`http://localhost:5000/api/statuses/${id}`, {\n        method: 'DELETE'\n      });\n      fetchAllDirectories();\n    } catch (err) {\n      alert('Ошибка при удалении статуса');\n      console.error(err);\n    }\n  };\n\n  // === Отделы ===\n  const handleAddDepartment = async () => {\n    if (!newDepartment.trim()) return alert('Введите название отдела');\n    try {\n      const res = await fetch('http://localhost:5000/api/departments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newDepartment\n        })\n      });\n      const data = await res.json();\n      setDepartments([...departments, data]);\n      setNewDepartment('');\n    } catch (err) {\n      alert('Ошибка при добавлении отдела');\n      console.error(err);\n    }\n  };\n  const handleDeleteDepartment = async id => {\n    if (!window.confirm('Удалить этот отдел?')) return;\n    try {\n      await fetch(`http://localhost:5000/api/departments/${id}`, {\n        method: 'DELETE'\n      });\n      fetchAllDirectories();\n    } catch (err) {\n      alert('Ошибка при удалении отдела');\n      console.error(err);\n    }\n  };\n\n  // === Сотрудники ===\n  const handleAddEmployee = async () => {\n    if (!newEmployee.name || !newEmployee.department_id) {\n      return alert('Введите имя сотрудника и выберите отдел');\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/employees', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newEmployee)\n      });\n      const data = await res.json();\n      setEmployees([...employees, data]);\n      setNewEmployee({\n        name: '',\n        department_id: ''\n      });\n    } catch (err) {\n      alert('Ошибка при добавлении сотрудника');\n      console.error(err);\n    }\n  };\n  const handleDeleteEmployee = async id => {\n    if (!window.confirm('Удалить этого сотрудника?')) return;\n    try {\n      await fetch(`http://localhost:5000/api/employees/${id}`, {\n        method: 'DELETE'\n      });\n      fetchAllDirectories();\n    } catch (err) {\n      alert('Ошибка при удалении сотрудника');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 2,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\",\n              value: newCategory,\n              onChange: e => setNewCategory(e.target.value),\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleAddCategory,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: categories.map(cat => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: cat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDeleteCategory(cat.id),\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)]\n              }, cat.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 2,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\",\n              value: newStatus,\n              onChange: e => setNewStatus(e.target.value),\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleAddStatus,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: statuses.map(stat => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: stat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDeleteStatus(stat.id),\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)]\n              }, stat.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 2,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043E\\u0442\\u0434\\u0435\\u043B\",\n              value: newDepartment,\n              onChange: e => setNewDepartment(e.target.value),\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleAddDepartment,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: departments.map(dept => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: dept.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDeleteDepartment(dept.id),\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, dept.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 2,\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u0424\\u0418\\u041E\",\n              value: newEmployee.name,\n              onChange: e => setNewEmployee({\n                ...newEmployee,\n                name: e.target.value\n              }),\n              size: \"small\",\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              label: \"\\u041E\\u0442\\u0434\\u0435\\u043B\",\n              value: newEmployee.department_id,\n              onChange: e => setNewEmployee({\n                ...newEmployee,\n                department_id: e.target.value\n              }),\n              size: \"small\",\n              sx: {\n                minWidth: 150\n              },\n              children: departmentList.map(d => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: d.id,\n                children: d.name\n              }, d.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleAddEmployee,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: employees.map(emp => {\n                const dept = employeeDepartmentList.find(d => d.id === emp.department_id);\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: emp.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: (dept === null || dept === void 0 ? void 0 : dept.name) || 'Не указано'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      color: \"error\",\n                      onClick: () => handleDeleteEmployee(emp.id),\n                      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(Directory, \"FNV3xvJqzeiOfxhnw96EJiuOUg8=\");\n_c = Directory;\nexport default Directory;\nvar _c;\n$RefreshReg$(_c, \"Directory\");","map":{"version":3,"names":["React","useEffect","useState","Container","Paper","Typography","Box","Table","TableBody","TableCell","TableRow","TextField","Button","Grid","jsxDEV","_jsxDEV","Directory","_s","categories","setCategories","statuses","setStatuses","departments","setDepartments","employees","setEmployees","newCategory","setNewCategory","newStatus","setNewStatus","newDepartment","setNewDepartment","newEmployee","setNewEmployee","name","department_id","departmentList","setDepartmentList","employeeDepartmentList","setEmployeeDepartmentList","fetchAllDirectories","cats","stats","deps","emps","Promise","all","fetch","then","res","json","err","console","error","handleAddCategory","trim","alert","method","headers","body","JSON","stringify","data","handleDeleteCategory","id","window","confirm","handleAddStatus","handleDeleteStatus","handleAddDepartment","handleDeleteDepartment","handleAddEmployee","handleDeleteEmployee","maxWidth","children","elevation","style","padding","marginTop","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","display","gap","mb","label","value","onChange","e","target","size","fullWidth","onClick","map","cat","align","color","stat","mt","dept","sx","flexGrow","select","minWidth","d","MenuItem","emp","find","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/Directory.js"],"sourcesContent":["// frontend/src/components/Directory.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  Grid\r\n} from '@mui/material';\r\n\r\nconst Directory = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // Для добавления\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [newStatus, setNewStatus] = useState('');\r\n  const [newDepartment, setNewDepartment] = useState('');\r\n  const [newEmployee, setNewEmployee] = useState({ name: '', department_id: '' });\r\n\r\n  const [departmentList, setDepartmentList] = useState([]);\r\n  const [employeeDepartmentList, setEmployeeDepartmentList] = useState([]);\r\n\r\n  const fetchAllDirectories = async () => {\r\n    try {\r\n      const [cats, stats, deps, emps] = await Promise.all([\r\n        fetch('http://localhost:5000/api/categories').then(res => res.json()),\r\n        fetch('http://localhost:5000/api/statuses').then(res => res.json()),\r\n        fetch('http://localhost:5000/api/departments').then(res => res.json()),\r\n        fetch('http://localhost:5000/api/employees').then(res => res.json())\r\n      ]);\r\n\r\n      setCategories(cats);\r\n      setStatuses(stats);\r\n      setDepartments(deps);\r\n      setEmployees(emps);\r\n\r\n      setDepartmentList([...deps]);\r\n      setEmployeeDepartmentList([...deps]);\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки справочников:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllDirectories();\r\n  }, []);\r\n\r\n  // === Категории ===\r\n  const handleAddCategory = async () => {\r\n    if (!newCategory.trim()) return alert('Введите категорию');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/categories', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: newCategory }),\r\n      });\r\n      const data = await res.json();\r\n      setCategories([...categories, data]);\r\n      setNewCategory('');\r\n    } catch (err) {\r\n      alert('Ошибка при добавлении категории');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    if (!window.confirm('Удалить эту категорию?')) return;\r\n    try {\r\n      await fetch(`http://localhost:5000/api/categories/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n      fetchAllDirectories();\r\n    } catch (err) {\r\n      alert('Ошибка при удалении категории');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // === Статусы ===\r\n  const handleAddStatus = async () => {\r\n    if (!newStatus.trim()) return alert('Введите статус');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/statuses', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: newStatus }),\r\n      });\r\n      const data = await res.json();\r\n      setStatuses([...statuses, data]);\r\n      setNewStatus('');\r\n    } catch (err) {\r\n      alert('Ошибка при добавлении статуса');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteStatus = async (id) => {\r\n    if (!window.confirm('Удалить этот статус?')) return;\r\n    try {\r\n      await fetch(`http://localhost:5000/api/statuses/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n      fetchAllDirectories();\r\n    } catch (err) {\r\n      alert('Ошибка при удалении статуса');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // === Отделы ===\r\n  const handleAddDepartment = async () => {\r\n    if (!newDepartment.trim()) return alert('Введите название отдела');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/departments', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: newDepartment }),\r\n      });\r\n      const data = await res.json();\r\n      setDepartments([...departments, data]);\r\n      setNewDepartment('');\r\n    } catch (err) {\r\n      alert('Ошибка при добавлении отдела');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDepartment = async (id) => {\r\n    if (!window.confirm('Удалить этот отдел?')) return;\r\n    try {\r\n      await fetch(`http://localhost:5000/api/departments/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n      fetchAllDirectories();\r\n    } catch (err) {\r\n      alert('Ошибка при удалении отдела');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // === Сотрудники ===\r\n  const handleAddEmployee = async () => {\r\n    if (!newEmployee.name || !newEmployee.department_id) {\r\n      return alert('Введите имя сотрудника и выберите отдел');\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/employees', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newEmployee),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setEmployees([...employees, data]);\r\n      setNewEmployee({ name: '', department_id: '' });\r\n    } catch (err) {\r\n      alert('Ошибка при добавлении сотрудника');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEmployee = async (id) => {\r\n    if (!window.confirm('Удалить этого сотрудника?')) return;\r\n    try {\r\n      await fetch(`http://localhost:5000/api/employees/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n      fetchAllDirectories();\r\n    } catch (err) {\r\n      alert('Ошибка при удалении сотрудника');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n        <Typography variant=\"h5\" gutterBottom>Справочники</Typography>\r\n\r\n        {/* Категории */}\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">Категории</Typography>\r\n            <Box display=\"flex\" gap={2} mb={2}>\r\n              <TextField\r\n                label=\"Новая категория\"\r\n                value={newCategory}\r\n                onChange={(e) => setNewCategory(e.target.value)}\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n              <Button variant=\"contained\" onClick={handleAddCategory}>\r\n                Добавить\r\n              </Button>\r\n            </Box>\r\n            <Table size=\"small\">\r\n              <TableBody>\r\n                {categories.map(cat => (\r\n                  <TableRow key={cat.id}>\r\n                    <TableCell>{cat.name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button size=\"small\" color=\"error\" onClick={() => handleDeleteCategory(cat.id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n\r\n          {/* Статусы */}\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">Статусы</Typography>\r\n            <Box display=\"flex\" gap={2} mb={2}>\r\n              <TextField\r\n                label=\"Новый статус\"\r\n                value={newStatus}\r\n                onChange={(e) => setNewStatus(e.target.value)}\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n              <Button variant=\"contained\" onClick={handleAddStatus}>\r\n                Добавить\r\n              </Button>\r\n            </Box>\r\n            <Table size=\"small\">\r\n              <TableBody>\r\n                {statuses.map(stat => (\r\n                  <TableRow key={stat.id}>\r\n                    <TableCell>{stat.name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button size=\"small\" color=\"error\" onClick={() => handleDeleteStatus(stat.id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n\r\n          {/* Отделы */}\r\n          <Grid item xs={6} mt={4}>\r\n            <Typography variant=\"h6\">Отделы</Typography>\r\n            <Box display=\"flex\" gap={2} mb={2}>\r\n              <TextField\r\n                label=\"Новый отдел\"\r\n                value={newDepartment}\r\n                onChange={(e) => setNewDepartment(e.target.value)}\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n              <Button variant=\"contained\" onClick={handleAddDepartment}>\r\n                Добавить\r\n              </Button>\r\n            </Box>\r\n            <Table size=\"small\">\r\n              <TableBody>\r\n                {departments.map(dept => (\r\n                  <TableRow key={dept.id}>\r\n                    <TableCell>{dept.name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Button size=\"small\" color=\"error\" onClick={() => handleDeleteDepartment(dept.id)}>\r\n                        Удалить\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n\r\n          {/* Сотрудники */}\r\n          <Grid item xs={6} mt={4}>\r\n            <Typography variant=\"h6\">Сотрудники</Typography>\r\n            <Box display=\"flex\" gap={2} mb={2}>\r\n              <TextField\r\n                label=\"ФИО\"\r\n                value={newEmployee.name}\r\n                onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\r\n                size=\"small\"\r\n                sx={{ flexGrow: 1 }}\r\n              />\r\n              <TextField\r\n                select\r\n                label=\"Отдел\"\r\n                value={newEmployee.department_id}\r\n                onChange={(e) => setNewEmployee({ ...newEmployee, department_id: e.target.value })}\r\n                size=\"small\"\r\n                sx={{ minWidth: 150 }}\r\n              >\r\n                {departmentList.map(d => (\r\n                  <MenuItem key={d.id} value={d.id}>\r\n                    {d.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <Button variant=\"contained\" onClick={handleAddEmployee}>\r\n                Добавить\r\n              </Button>\r\n            </Box>\r\n            <Table size=\"small\">\r\n              <TableBody>\r\n                {employees.map(emp => {\r\n                  const dept = employeeDepartmentList.find(d => d.id === emp.department_id);\r\n                  return (\r\n                    <TableRow key={emp.id}>\r\n                      <TableCell>{emp.name}</TableCell>\r\n                      <TableCell>{dept?.name || 'Не указано'}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button size=\"small\" color=\"error\" onClick={() => handleDeleteEmployee(emp.id)}>\r\n                          Удалить\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Directory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}