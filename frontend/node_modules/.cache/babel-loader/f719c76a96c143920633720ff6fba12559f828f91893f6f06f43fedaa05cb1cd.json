{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Table, TableHead, TableRow, TableCell, TableBody, Button, Checkbox, Box } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { QRCodeSVG } from 'qrcode.react';\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = () => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const navigate = useNavigate();\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchAssets = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/assets');\n        setAssets(res.data);\n      } catch (err) {\n        console.error('Ошибка загрузки активов:', err);\n      }\n    };\n    fetchAssets();\n  }, []);\n\n  // Фильтрация активов по строке поиска\n  const filteredAssets = assets.filter(asset => {\n    var _asset$inventory_numb;\n    const searchLower = searchTerm.toLowerCase();\n    return ((_asset$inventory_numb = asset.inventory_number) === null || _asset$inventory_numb === void 0 ? void 0 : _asset$inventory_numb.toLowerCase().includes(searchLower)) || `${asset.type} ${asset.brand} ${asset.model}`.toLowerCase().includes(searchLower);\n  });\n\n  // Сортировка активов\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\n    let comparison = 0;\n    switch (sortColumn) {\n      case 'inventory_number':\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, {\n          numeric: true\n        });\n        break;\n      case 'purchase_date':\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\n        break;\n      default:\n        return 0;\n    }\n    if (sortOrder === 'desc') {\n      comparison = -comparison;\n    }\n    return comparison;\n  });\n\n  // Обработчик изменения чекбокса\n  const handleCheckboxChange = id => {\n    setSelectedAssets(prev => prev.includes(id) ? prev.filter(assetId => assetId !== id) : [...prev, id]);\n  };\n\n  // Удаление выбранных активов\n  const handleDeleteSelected = async () => {\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\n    try {\n      await axios.delete('http://localhost:5000/api/assets', {\n        data: {\n          ids: selectedAssets\n        }\n      });\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\n      setSelectedAssets([]);\n      alert('Выбранные активы успешно удалены');\n    } catch (err) {\n      alert('Ошибка при удалении активов');\n      console.error(err);\n    }\n  };\n\n  // Генерация QR-кода для печати\n  const handlePrintQRCode = async asset => {\n    if (!asset.inventory_number) return;\n    const inventoryNumber = asset.inventory_number;\n    const name = asset.name || `${asset.type} ${asset.brand} ${asset.model}`;\n    const timestamp = new Date().getTime();\n    const fileName = `${inventoryNumber}_${timestamp}.pdf`;\n\n    // Создаем временный контейнер для QR-кода\n    const tempContainer = document.createElement('div');\n    tempContainer.style.position = 'absolute';\n    tempContainer.style.left = '-9999px';\n    document.body.appendChild(tempContainer);\n\n    // Генерируем SVG QR-кода\n    const qrElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    const qrCode = new QRCodeSVG({\n      value: `http://localhost:3000/assets/${asset.id}`,\n      size: '200x200',\n      bgColor: '#ffffff',\n      fgColor: '#000000',\n      level: 'H'\n    });\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(qrCode.querySelector('svg'));\n\n    // Добавляем QR-код в временную контейнер\n    tempContainer.innerHTML = `\n      <div style=\"text-align: center; font-family: Arial, sans-serif;\">\n        <div style=\"font-size: 8px; white-space: nowrap;\">${name}</div>\n        <div id=\"temp-qr\" style=\"width: 3cm; height: 3cm;\"></div>\n        <div style=\"font-size: 8px; margin-top: 5px;\">${inventoryNumber}</div>\n      </div>\n    `;\n    tempContainer.querySelector('#temp-qr').innerHTML = svgString;\n\n    // Конвертируем в изображение\n    const target = tempContainer.querySelector('#temp-qr');\n    try {\n      const canvas = await html2canvas(target);\n      const imgDataUrl = canvas.toDataURL('image/jpeg');\n\n      // Создаем окно печати\n      const printWindow = window.open('', '_blank', 'width=600,height=400');\n      printWindow.document.write(`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <style>\n              @page {\n                size: A4;\n                margin: 0;\n              }\n              body {\n                margin: 0;\n                padding: 0;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                height: 100vh;\n                background-color: #ffffff;\n              }\n            </style>\n          </head>\n          <body>\n            <img src=\"${imgDataUrl}\" alt=\"QR Code\" style=\"width: 3cm; height: 3cm;\" />\n            <div style=\"position: absolute; top: 0; left: 0; font-size: 8px;\">${name}</div>\n            <div style=\"position: absolute; bottom: 0; right: 0; font-size: 8px;\">${inventoryNumber}</div>\n          </body>\n        </html>\n      `);\n      setTimeout(() => {\n        printWindow.print();\n        printWindow.close();\n        document.body.removeChild(tempContainer);\n      }, 500);\n    } catch (err) {\n      console.error('Ошибка генерации QR-кода:', err);\n      alert('Не удалось создать QR-код');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        fullWidth: true,\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => navigate('/assets/new'),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          disabled: selectedAssets.length === 0,\n          onClick: handlePrintQRCode,\n          children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          disabled: selectedAssets.length === 0,\n          onClick: handleDeleteSelected,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.length === assets.length && selectedAssets.length > 0,\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < assets.length,\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedAssets(assets.map(asset => asset.id));\n                  } else {\n                    setSelectedAssets([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('inventory_number'),\n              children: [\"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\", ' ', sortColumn === 'inventory_number' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort('purchase_date'),\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\", ' ', sortColumn === 'purchase_date' && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: sortOrder === 'asc' ? '↑' : '↓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedAssets.map(asset => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAssets.includes(asset.id),\n                onChange: e => handleCheckboxChange(asset.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.inventory_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(asset.purchase_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: `${asset.type} ${asset.brand} ${asset.model}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getStatusName(asset.status_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatEmployeeName(asset.responsible_person)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: getDepartmentName(asset.department_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: asset.room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handlePrintQRCode(asset),\n                children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, asset.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n\n// Форматирование даты в DD.MM.YYYY\n_s(AssetList, \"Z0Q5uoK8mbwuM3faMMETrpzyUzw=\", false, function () {\n  return [useNavigate];\n});\n_c = AssetList;\nconst formatDate = dateString => {\n  if (!dateString) return '';\n  const date = new Date(dateString);\n  if (isNaN(date)) return '';\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n};\n\n// Форматирование ФИО → Иванов И.И.\nconst formatEmployeeName = employeeId => {\n  var _parts$, _parts$2;\n  if (!employeeId) return 'Не указан';\n  const employee = employees.find(emp => emp.id === employeeId);\n  if (!employee) return 'Не найден';\n  const parts = employee.name.split(' ');\n  const surname = parts[0] || '';\n  const firstInitial = ((_parts$ = parts[1]) === null || _parts$ === void 0 ? void 0 : _parts$.charAt(0).toUpperCase()) || '';\n  const patronymicInitial = ((_parts$2 = parts[2]) === null || _parts$2 === void 0 ? void 0 : _parts$2.charAt(0).toUpperCase()) || '';\n  return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}`;\n};\n\n// Получение имени статуса\nconst getStatusName = statusId => {\n  const status = statuses.find(stat => stat.id === statusId);\n  return (status === null || status === void 0 ? void 0 : status.name) || 'Не указан';\n};\n\n// Получение имени отдела\nconst getDepartmentName = departmentId => {\n  const department = departments.find(d => d.id === departmentId);\n  return (department === null || department === void 0 ? void 0 : department.name) || 'Не указан';\n};\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","TextField","Table","TableHead","TableRow","TableCell","TableBody","Button","Checkbox","Box","useNavigate","QRCodeSVG","html2canvas","jsxDEV","_jsxDEV","AssetList","_s","assets","setAssets","departments","setDepartments","statuses","setStatuses","employees","setEmployees","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortOrder","setSortOrder","selectedAssets","setSelectedAssets","navigate","fetchAssets","res","get","data","err","console","error","filteredAssets","filter","asset","_asset$inventory_numb","searchLower","toLowerCase","inventory_number","includes","type","brand","model","sortedAssets","sort","a","b","comparison","localeCompare","undefined","numeric","Date","purchase_date","handleCheckboxChange","id","prev","assetId","handleDeleteSelected","window","confirm","length","delete","ids","alert","handlePrintQRCode","inventoryNumber","name","timestamp","getTime","fileName","tempContainer","document","createElement","style","position","left","body","appendChild","qrElement","createElementNS","qrCode","value","size","bgColor","fgColor","level","serializer","XMLSerializer","svgString","serializeToString","querySelector","innerHTML","target","canvas","imgDataUrl","toDataURL","printWindow","open","write","setTimeout","print","close","removeChild","maxWidth","children","elevation","padding","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","label","fullWidth","onChange","e","marginBottom","display","gap","mb","color","onClick","disabled","checked","indeterminate","map","handleSort","formatDate","getStatusName","status_id","formatEmployeeName","responsible_person","getDepartmentName","department_id","room","_c","dateString","date","isNaN","day","String","getDate","padStart","month","getMonth","year","getFullYear","employeeId","_parts$","_parts$2","employee","find","emp","parts","split","surname","firstInitial","charAt","toUpperCase","patronymicInitial","statusId","status","stat","departmentId","department","d","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/AssetList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  Checkbox,\r\n  Box,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst AssetList = () => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchAssets = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/assets');\r\n        setAssets(res.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки активов:', err);\r\n      }\r\n    };\r\n\r\n    fetchAssets();\r\n  }, []);\r\n\r\n  // Фильтрация активов по строке поиска\r\n  const filteredAssets = assets.filter((asset) => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      asset.inventory_number?.toLowerCase().includes(searchLower) ||\r\n      `${asset.type} ${asset.brand} ${asset.model}`.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  // Сортировка активов\r\n  const sortedAssets = [...filteredAssets].sort((a, b) => {\r\n    let comparison = 0;\r\n\r\n    switch (sortColumn) {\r\n      case 'inventory_number':\r\n        comparison = a.inventory_number.localeCompare(b.inventory_number, undefined, { numeric: true });\r\n        break;\r\n      case 'purchase_date':\r\n        comparison = new Date(a.purchase_date) - new Date(b.purchase_date);\r\n        break;\r\n      default:\r\n        return 0;\r\n    }\r\n\r\n    if (sortOrder === 'desc') {\r\n      comparison = -comparison;\r\n    }\r\n\r\n    return comparison;\r\n  });\r\n\r\n  // Обработчик изменения чекбокса\r\n  const handleCheckboxChange = (id) => {\r\n    setSelectedAssets(prev =>\r\n      prev.includes(id)\r\n        ? prev.filter(assetId => assetId !== id)\r\n        : [...prev, id]\r\n    );\r\n  };\r\n\r\n  // Удаление выбранных активов\r\n  const handleDeleteSelected = async () => {\r\n    if (!window.confirm(`Вы уверены, что хотите удалить ${selectedAssets.length} активов?`)) return;\r\n\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/assets', {\r\n        data: { ids: selectedAssets },\r\n      });\r\n\r\n      setAssets(prev => prev.filter(asset => !selectedAssets.includes(asset.id)));\r\n      setSelectedAssets([]);\r\n      alert('Выбранные активы успешно удалены');\r\n    } catch (err) {\r\n      alert('Ошибка при удалении активов');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Генерация QR-кода для печати\r\n  const handlePrintQRCode = async (asset) => {\r\n    if (!asset.inventory_number) return;\r\n\r\n    const inventoryNumber = asset.inventory_number;\r\n    const name = asset.name || `${asset.type} ${asset.brand} ${asset.model}`;\r\n    const timestamp = new Date().getTime();\r\n    const fileName = `${inventoryNumber}_${timestamp}.pdf`;\r\n\r\n    // Создаем временный контейнер для QR-кода\r\n    const tempContainer = document.createElement('div');\r\n    tempContainer.style.position = 'absolute';\r\n    tempContainer.style.left = '-9999px';\r\n    document.body.appendChild(tempContainer);\r\n\r\n    // Генерируем SVG QR-кода\r\n    const qrElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    const qrCode = new QRCodeSVG({\r\n      value: `http://localhost:3000/assets/${asset.id}`,\r\n      size: '200x200',\r\n      bgColor: '#ffffff',\r\n      fgColor: '#000000',\r\n      level: 'H',\r\n    });\r\n\r\n    const serializer = new XMLSerializer();\r\n    const svgString = serializer.serializeToString(qrCode.querySelector('svg'));\r\n\r\n    // Добавляем QR-код в временную контейнер\r\n    tempContainer.innerHTML = `\r\n      <div style=\"text-align: center; font-family: Arial, sans-serif;\">\r\n        <div style=\"font-size: 8px; white-space: nowrap;\">${name}</div>\r\n        <div id=\"temp-qr\" style=\"width: 3cm; height: 3cm;\"></div>\r\n        <div style=\"font-size: 8px; margin-top: 5px;\">${inventoryNumber}</div>\r\n      </div>\r\n    `;\r\n    tempContainer.querySelector('#temp-qr').innerHTML = svgString;\r\n\r\n    // Конвертируем в изображение\r\n    const target = tempContainer.querySelector('#temp-qr');\r\n\r\n    try {\r\n      const canvas = await html2canvas(target);\r\n      const imgDataUrl = canvas.toDataURL('image/jpeg');\r\n\r\n      // Создаем окно печати\r\n      const printWindow = window.open('', '_blank', 'width=600,height=400');\r\n      printWindow.document.write(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n          <head>\r\n            <style>\r\n              @page {\r\n                size: A4;\r\n                margin: 0;\r\n              }\r\n              body {\r\n                margin: 0;\r\n                padding: 0;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n                height: 100vh;\r\n                background-color: #ffffff;\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n            <img src=\"${imgDataUrl}\" alt=\"QR Code\" style=\"width: 3cm; height: 3cm;\" />\r\n            <div style=\"position: absolute; top: 0; left: 0; font-size: 8px;\">${name}</div>\r\n            <div style=\"position: absolute; bottom: 0; right: 0; font-size: 8px;\">${inventoryNumber}</div>\r\n          </body>\r\n        </html>\r\n      `);\r\n\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n        printWindow.close();\r\n        document.body.removeChild(tempContainer);\r\n      }, 500);\r\n    } catch (err) {\r\n      console.error('Ошибка генерации QR-кода:', err);\r\n      alert('Не удалось создать QR-код');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper elevation={3} style={{ padding: '20px' }}>\r\n        <Typography variant=\"h5\" gutterBottom>Список оборудования</Typography>\r\n\r\n        {/* Поисковая строка */}\r\n        <TextField\r\n          label=\"Поиск\"\r\n          fullWidth\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{ marginBottom: '16px' }}\r\n        />\r\n\r\n        {/* Кнопки управления */}\r\n        <Box display=\"flex\" gap={2} mb={2}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => navigate('/assets/new')}\r\n          >\r\n            Добавить\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handlePrintQRCode}\r\n          >\r\n            Печать QR\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            disabled={selectedAssets.length === 0}\r\n            onClick={handleDeleteSelected}\r\n          >\r\n            Удалить выделенные\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Таблица активов */}\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Checkbox\r\n                  checked={selectedAssets.length === assets.length && selectedAssets.length > 0}\r\n                  indeterminate={\r\n                    selectedAssets.length > 0 &&\r\n                    selectedAssets.length < assets.length\r\n                  }\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedAssets(assets.map(asset => asset.id));\r\n                    } else {\r\n                      setSelectedAssets([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell onClick={() => handleSort('inventory_number')}>\r\n                Инвентарный номер{' '}\r\n                {sortColumn === 'inventory_number' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell onClick={() => handleSort('purchase_date')}>\r\n                Дата покупки{' '}\r\n                {sortColumn === 'purchase_date' && <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>}\r\n              </TableCell>\r\n              <TableCell>Наименование</TableCell>\r\n              <TableCell>Статус</TableCell>\r\n              <TableCell>Ответственный</TableCell>\r\n              <TableCell>Отдел</TableCell>\r\n              <TableCell>Помещение</TableCell>\r\n              <TableCell>Действия</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedAssets.map((asset) => (\r\n              <TableRow key={asset.id}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={selectedAssets.includes(asset.id)}\r\n                    onChange={(e) => handleCheckboxChange(asset.id)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{asset.inventory_number}</TableCell>\r\n                <TableCell>{formatDate(asset.purchase_date)}</TableCell>\r\n                <TableCell>{`${asset.type} ${asset.brand} ${asset.model}`}</TableCell>\r\n                <TableCell>{getStatusName(asset.status_id)}</TableCell>\r\n                <TableCell>{formatEmployeeName(asset.responsible_person)}</TableCell>\r\n                <TableCell>{getDepartmentName(asset.department_id)}</TableCell>\r\n                <TableCell>{asset.room}</TableCell>\r\n                <TableCell>\r\n                  <Button onClick={() => handlePrintQRCode(asset)}>Печать QR</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Форматирование даты в DD.MM.YYYY\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return '';\r\n  const date = new Date(dateString);\r\n  if (isNaN(date)) return '';\r\n\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const year = date.getFullYear();\r\n\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\n// Форматирование ФИО → Иванов И.И.\r\nconst formatEmployeeName = (employeeId) => {\r\n  if (!employeeId) return 'Не указан';\r\n\r\n  const employee = employees.find(emp => emp.id === employeeId);\r\n  if (!employee) return 'Не найден';\r\n\r\n  const parts = employee.name.split(' ');\r\n  const surname = parts[0] || '';\r\n  const firstInitial = parts[1]?.charAt(0).toUpperCase() || '';\r\n  const patronymicInitial = parts[2]?.charAt(0).toUpperCase() || '';\r\n\r\n  return `${surname} ${firstInitial}${patronymicInitial ? '.' : ''}`;\r\n};\r\n\r\n// Получение имени статуса\r\nconst getStatusName = (statusId) => {\r\n  const status = statuses.find(stat => stat.id === statusId);\r\n  return status?.name || 'Не указан';\r\n};\r\n\r\n// Получение имени отдела\r\nconst getDepartmentName = (departmentId) => {\r\n  const department = departments.find(d => d.id === departmentId);\r\n  return department?.name || 'Не указан';\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}