{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [assetCounts, setAssetCounts] = useState({}); // Кол-во активов на сотрудника\n  const [totalAssetsByDept, setTotalAssetsByDept] = useState([]);\n\n  // === Загрузка данных ===\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Загружаем сотрудников и отделы\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        const emps = empsRes.data;\n        const deps = depsRes.data;\n        setEmployees(emps);\n        setDepartments(deps);\n\n        // Загружаем все активы один раз\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\n        const allAssets = assetsRes.data;\n\n        // Подсчитываем оборудование для каждого сотрудника (частичное совпадение)\n        const assetCounts = {};\n        for (let emp of emps) {\n          const count = allAssets.filter(a => {\n            var _a$responsible_person;\n            return (_a$responsible_person = a.responsible_person) === null || _a$responsible_person === void 0 ? void 0 : _a$responsible_person.toLowerCase().includes(emp.name.toLowerCase());\n          }).length;\n          assetCounts[emp.id] = count;\n        }\n        setAssetCounts(assetCounts);\n\n        // Подсчитываем общее количество активов по отделам\n        const totalAssetsByDept = {};\n        for (let dept of deps) {\n          const count = allAssets.filter(a => a.department_id === dept.id).length;\n          totalAssetsByDept[dept.id] = count;\n        }\n        setTotalAssetsByDept(totalAssetsByDept);\n      } catch (err) {\n        console.error('Ошибка при загрузке данных:', err);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: departments.map(dept => {\n        const deptEmployees = employees.filter(emp => emp.department_id === dept.id);\n        const totalAssets = deptEmployees.reduce((sum, emp) => sum + (assetCounts[emp.id] || 0), 0);\n        if (deptEmployees.length === 0) {\n          return null; // Не отображаем пустые отделы\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            style: {\n              fontWeight: 'bold',\n              textAlign: 'center',\n              fontSize: '25px'\n            },\n            children: dept.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    fontSize: '12px'\n                  },\n                  children: \"\\u041E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [deptEmployees.map(emp => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: assetCounts[emp.id] || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  backgroundColor: '#f0f0f0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"\\u0412\\u0441\\u0435\\u0433\\u043E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: totalAssetsByDept[dept.id] || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, dept.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"hMrQmMOjHaVrkw8R/9l5PWC0n+A=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","departments","setDepartments","assetCounts","setAssetCounts","totalAssetsByDept","setTotalAssetsByDept","fetchData","empsRes","get","depsRes","emps","data","deps","assetsRes","allAssets","emp","count","filter","a","_a$responsible_person","responsible_person","toLowerCase","includes","name","length","id","dept","department_id","err","console","error","maxWidth","children","elevation","style","padding","marginTop","map","deptEmployees","totalAssets","reduce","sum","variant","gutterBottom","fontWeight","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","size","align","sx","backgroundColor","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from '@mui/material';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [assetCounts, setAssetCounts] = useState({}); // Кол-во активов на сотрудника\r\n  const [totalAssetsByDept, setTotalAssetsByDept] = useState([]);\r\n\r\n  // === Загрузка данных ===\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Загружаем сотрудников и отделы\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n        const emps = empsRes.data;\r\n        const deps = depsRes.data;\r\n\r\n        setEmployees(emps);\r\n        setDepartments(deps);\r\n\r\n        // Загружаем все активы один раз\r\n        const assetsRes = await axios.get('http://localhost:5000/api/assets');\r\n        const allAssets = assetsRes.data;\r\n\r\n        // Подсчитываем оборудование для каждого сотрудника (частичное совпадение)\r\n        const assetCounts = {};\r\n\r\n        for (let emp of emps) {\r\n          const count = allAssets.filter(a =>\r\n            a.responsible_person?.toLowerCase().includes(emp.name.toLowerCase())\r\n          ).length;\r\n\r\n          assetCounts[emp.id] = count;\r\n        }\r\n\r\n        setAssetCounts(assetCounts);\r\n\r\n        // Подсчитываем общее количество активов по отделам\r\n        const totalAssetsByDept = {};\r\n\r\n        for (let dept of deps) {\r\n          const count = allAssets.filter(a => a.department_id === dept.id).length;\r\n          totalAssetsByDept[dept.id] = count;\r\n        }\r\n\r\n        setTotalAssetsByDept(totalAssetsByDept);\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке данных:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n\r\n        {/* Отображаем сотрудников по отделам */}\r\n        {departments.map(dept => {\r\n          const deptEmployees = employees.filter(emp => emp.department_id === dept.id);\r\n          const totalAssets = deptEmployees.reduce((sum, emp) => sum + (assetCounts[emp.id] || 0), 0);  \r\n\r\n          if (deptEmployees.length === 0) {\r\n            return null; // Не отображаем пустые отделы\r\n          }\r\n\r\n          return (\r\n            <div key={dept.id}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                gutterBottom\r\n                style={{ fontWeight: 'bold', textAlign: 'center', fontSize: '25px' }}\r\n              >\r\n                {dept.name}\r\n              </Typography>\r\n\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"right\" style={{ fontSize: '12px'}}>Оборудования</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deptEmployees.map(emp => (\r\n                    <TableRow key={emp.id}>\r\n                      <TableCell>{emp.name}</TableCell>\r\n                      <TableCell align=\"right\">{assetCounts[emp.id] || 0}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  {/* Итоговая строка с суммой оборудования */}\r\n                  <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\r\n                    <TableCell><strong>Всего</strong></TableCell>\r\n                    <TableCell align=\"right\"><strong>{totalAssetsByDept[dept.id] || 0}</strong></TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}