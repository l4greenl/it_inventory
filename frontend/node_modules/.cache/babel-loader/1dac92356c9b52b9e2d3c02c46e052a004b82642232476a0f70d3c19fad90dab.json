{"ast":null,"code":"var _jsxFileName = \"D:\\\\it_inventory.localhost\\\\frontend\\\\src\\\\components\\\\Directory.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Directory.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Snackbar, Alert, Box, Autocomplete, Checkbox, Chip, FormControl, InputLabel, Select, MenuItem, FormHelperText, IconButton, Tooltip, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport config from '../config'; // Импорт конфигурации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = config.API_BASE_URL; // Получение URL из конфигурации\n\nconst Directory = () => {\n  _s();\n  // === Состояния для данных ===\n  const [types, setTypes] = useState([]); // Ранее categories\n  const [departments, setDepartments] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [properties, setProperties] = useState([]); // Новое состояние для всех свойств\n\n  // === Состояния для UI ===\n  const [activeTab, setActiveTab] = useState('types'); // Ранее categories\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [loading, setLoading] = useState(false);\n  const [deletingItem, setDeletingItem] = useState(null);\n\n  // === Состояния для форм ===\n  const [formData, setFormData] = useState({\n    name: '',\n    // Для типов устройств также будем хранить выбранные свойства\n    selectedProperties: [] // Новое поле для выбранных свойств при создании/редактировании\n  });\n  const [editingItem, setEditingItem] = useState(null);\n  const [errors, setErrors] = useState({});\n\n  // === Загрузка данных справочников ===\n  useEffect(() => {\n    fetchData();\n  }, [activeTab]);\n  const fetchData = async () => {\n    setLoading(true);\n    setErrors({});\n    try {\n      let url = '';\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          url = `${API_BASE_URL}/api/types`;\n          break;\n        case 'departments':\n          url = `${API_BASE_URL}/api/departments`;\n          break;\n        case 'statuses':\n          url = `${API_BASE_URL}/api/statuses`;\n          break;\n        case 'employees':\n          url = `${API_BASE_URL}/api/employees`;\n          break;\n        default:\n          return;\n      }\n      const response = await axios.get(url);\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          setTypes(response.data);\n          break;\n        case 'departments':\n          setDepartments(response.data);\n          break;\n        case 'statuses':\n          setStatuses(response.data);\n          break;\n        case 'employees':\n          setEmployees(response.data);\n          break;\n        default:\n          break;\n      }\n    } catch (err) {\n      console.error(`Ошибка при загрузке ${activeTab}:`, err);\n      showSnackbar(`Ошибка при загрузке ${getTabLabel(activeTab, true)}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // === Функции для работы с типами устройств (ранее категории) ===\n  const fetchPropertiesForType = async typeId => {\n    // Загружает список свойств, связанных с конкретным типом\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/types/${typeId}/properties`);\n      return response.data; // Ожидается массив {id, name}\n    } catch (err) {\n      console.error(`Ошибка при загрузке свойств для типа ${typeId}:`, err);\n      showSnackbar('Ошибка при загрузке свойств типа', 'error');\n      return [];\n    }\n  };\n  const fetchAllProperties = async () => {\n    // Загружает список всех доступных свойств\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/properties`);\n      return response.data; // Ожидается массив {id, name}\n    } catch (err) {\n      console.error('Ошибка при загрузке всех свойств:', err);\n      showSnackbar('Ошибка при загрузке списка свойств', 'error');\n      return [];\n    }\n  };\n\n  // === Вспомогательные функции ===\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  const getTabLabel = (tab, plural = false) => {\n    switch (tab) {\n      case 'types':\n        // Ранее categories\n        return plural ? 'Типы устройств' : 'Тип устройства';\n      // Изменено\n      case 'departments':\n        return plural ? 'Отделы' : 'Отдел';\n      case 'statuses':\n        return plural ? 'Статусы' : 'Статус';\n      case 'employees':\n        return plural ? 'Сотрудники' : 'Сотрудник';\n      default:\n        return tab;\n    }\n  };\n  const getCurrentData = () => {\n    switch (activeTab) {\n      case 'types':\n        // Ранее categories\n        return types;\n      case 'departments':\n        return departments;\n      case 'statuses':\n        return statuses;\n      case 'employees':\n        return employees;\n      default:\n        return [];\n    }\n  };\n  const getCurrentDataName = item => {\n    // Предполагаем, что у всех элементов есть поле 'name'\n    // Для сотрудников может быть 'full_name' или комбинация полей\n    if (activeTab === 'employees') {\n      // Пример: если у сотрудника есть поля first_name и last_name\n      // return `${item.first_name || ''} ${item.last_name || ''}`.trim() || item.name || 'Без имени';\n      // Пока используем общее поле 'name'\n      return item.name || 'Без имени';\n    }\n    return item.name || 'Без названия';\n  };\n\n  // === Функции открытия/закрытия диалогов ===\n  const handleOpenCreateDialog = async () => {\n    setFormData({\n      name: '',\n      selectedProperties: []\n    }); // Инициализируем selectedProperties\n    setErrors({});\n    if (activeTab === 'types') {\n      // Ранее categories\n      // При открытии диалога создания типа, загружаем все свойства\n      const allProps = await fetchAllProperties();\n      setProperties(allProps);\n    }\n    setOpenCreateDialog(true);\n  };\n  const handleCloseCreateDialog = () => {\n    setOpenCreateDialog(false);\n    setFormData({\n      name: '',\n      selectedProperties: []\n    }); // Очищаем при закрытии\n    setErrors({});\n  };\n  const handleOpenEditDialog = async item => {\n    setEditingItem(item);\n    if (activeTab === 'types') {\n      // Ранее categories\n      // При открытии диалога редактирования типа, загружаем все свойства и текущие свойства типа\n      const allProps = await fetchAllProperties();\n      setProperties(allProps);\n      const typeProps = await fetchPropertiesForType(item.id);\n      // Устанавливаем форму с именем типа и его текущими свойствами\n      setFormData({\n        name: item.name || '',\n        selectedProperties: typeProps\n      });\n    } else {\n      setFormData({\n        name: item.name || '',\n        selectedProperties: []\n      }); // Для других вкладок\n    }\n    setErrors({});\n    setOpenEditDialog(true);\n  };\n  const handleCloseEditDialog = () => {\n    setOpenEditDialog(false);\n    setEditingItem(null);\n    setFormData({\n      name: '',\n      selectedProperties: []\n    }); // Очищаем при закрытии\n    setErrors({});\n  };\n  const handleOpenDeleteDialog = item => {\n    setDeletingItem(item);\n    setOpenDeleteDialog(true);\n  };\n  const handleCloseDeleteDialog = () => {\n    setOpenDeleteDialog(false);\n    setDeletingItem(null);\n  };\n\n  // === Функции обработки изменений в форме ===\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    // Очищаем ошибку при изменении поля\n    if (errors[name]) {\n      setErrors({\n        ...errors,\n        [name]: ''\n      });\n    }\n  };\n  const handlePropertiesChange = (event, newValue) => {\n    // newValue - массив выбранных свойств {id, name}\n    setFormData({\n      ...formData,\n      selectedProperties: newValue\n    });\n    // Ошибки для свойств можно обрабатывать отдельно, если нужно\n  };\n\n  // === Функции сохранения данных ===\n  const handleCreateItem = async () => {\n    if (!formData.name.trim()) {\n      setErrors({\n        name: 'Название обязательно'\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      let url = '';\n      let payload = {\n        name: formData.name\n      };\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          url = `${API_BASE_URL}/api/types`;\n          // Для типов добавляем информацию о свойствах\n          payload.property_ids = formData.selectedProperties.map(p => p.id); // Отправляем массив ID\n          break;\n        case 'departments':\n          url = `${API_BASE_URL}/api/departments`;\n          break;\n        case 'statuses':\n          url = `${API_BASE_URL}/api/statuses`;\n          break;\n        case 'employees':\n          url = `${API_BASE_URL}/api/employees`;\n          // payload = { name: formData.name, department_id: ... }; // Пример для сотрудника\n          break;\n        default:\n          throw new Error('Неизвестная вкладка');\n      }\n      const response = await axios.post(url, payload);\n\n      // Обновляем локальное состояние\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          setTypes([...types, response.data]);\n          break;\n        case 'departments':\n          setDepartments([...departments, response.data]);\n          break;\n        case 'statuses':\n          setStatuses([...statuses, response.data]);\n          break;\n        case 'employees':\n          setEmployees([...employees, response.data]);\n          break;\n        default:\n          break;\n      }\n      handleCloseCreateDialog();\n      showSnackbar(`${getTabLabel(activeTab)} успешно создан`, 'success');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Ошибка при создании элемента:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Не удалось создать элемент';\n      showSnackbar(errorMsg, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpdateItem = async () => {\n    if (!formData.name.trim()) {\n      setErrors({\n        name: 'Название обязательно'\n      });\n      return;\n    }\n    if (!editingItem) return;\n    setLoading(true);\n    try {\n      let url = '';\n      let payload = {\n        name: formData.name\n      };\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          url = `${API_BASE_URL}/api/types/${editingItem.id}`;\n          // Для типов добавляем информацию о свойствах\n          payload.property_ids = formData.selectedProperties.map(p => p.id); // Отправляем массив ID\n          break;\n        case 'departments':\n          url = `${API_BASE_URL}/api/departments/${editingItem.id}`;\n          break;\n        case 'statuses':\n          url = `${API_BASE_URL}/api/statuses/${editingItem.id}`;\n          break;\n        case 'employees':\n          url = `${API_BASE_URL}/api/employees/${editingItem.id}`;\n          // payload = { name: formData.name, department_id: ... };\n          break;\n        default:\n          throw new Error('Неизвестная вкладка');\n      }\n      const response = await axios.put(url, payload);\n\n      // Обновляем локальное состояние\n      const updateState = items => items.map(item => item.id === editingItem.id ? response.data : item);\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          setTypes(updateState(types));\n          break;\n        case 'departments':\n          setDepartments(updateState(departments));\n          break;\n        case 'statuses':\n          setStatuses(updateState(statuses));\n          break;\n        case 'employees':\n          setEmployees(updateState(employees));\n          break;\n        default:\n          break;\n      }\n      handleCloseEditDialog();\n      showSnackbar(`${getTabLabel(activeTab)} успешно обновлён`, 'success');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Ошибка при обновлении элемента:', err);\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Не удалось обновить элемент';\n      showSnackbar(errorMsg, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteItem = async () => {\n    if (!deletingItem) return;\n    setLoading(true);\n    try {\n      let url = '';\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          url = `${API_BASE_URL}/api/types/${deletingItem.id}`;\n          break;\n        case 'departments':\n          url = `${API_BASE_URL}/api/departments/${deletingItem.id}`;\n          break;\n        case 'statuses':\n          url = `${API_BASE_URL}/api/statuses/${deletingItem.id}`;\n          break;\n        case 'employees':\n          url = `${API_BASE_URL}/api/employees/${deletingItem.id}`;\n          break;\n        default:\n          throw new Error('Неизвестная вкладка');\n      }\n      await axios.delete(url);\n\n      // Обновляем локальное состояние\n      const removeState = items => items.filter(item => item.id !== deletingItem.id);\n      switch (activeTab) {\n        case 'types':\n          // Ранее categories\n          setTypes(removeState(types));\n          break;\n        case 'departments':\n          setDepartments(removeState(departments));\n          break;\n        case 'statuses':\n          setStatuses(removeState(statuses));\n          break;\n        case 'employees':\n          setEmployees(removeState(employees));\n          break;\n        default:\n          break;\n      }\n      handleCloseDeleteDialog();\n      showSnackbar(`${getTabLabel(activeTab)} успешно удалён`, 'success');\n    } catch (err) {\n      console.error('Ошибка при удалении элемента:', err);\n      // Проверяем, есть ли специфичное сообщение от сервера\n      let errorMsg = 'Не удалось удалить элемент.';\n      if (err.response) {\n        if (err.response.status === 409) {\n          // 409 Conflict - часто используется для ошибок ограничения внешнего ключа\n          errorMsg = 'Невозможно удалить элемент, так как он используется в других записях.';\n        } else {\n          var _err$response$data2;\n          errorMsg = ((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.error) || errorMsg;\n        }\n      }\n      showSnackbar(errorMsg, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // === Рендеринг ===\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"\\u0421\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mb: 3,\n      flexWrap: \"wrap\",\n      gap: 1,\n      children: ['types', 'departments', 'statuses', 'employees'].map(tab => /*#__PURE__*/_jsxDEV(Button, {\n        variant: activeTab === tab ? 'contained' : 'outlined',\n        onClick: () => setActiveTab(tab),\n        style: {\n          margin: '0 5px'\n        },\n        children: [getTabLabel(tab, true), \" \"]\n      }, tab, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: getTabLabel(activeTab, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 22\n        }, this),\n        onClick: handleOpenCreateDialog,\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", getTabLabel(activeTab), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      my: 2,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this), !loading && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), activeTab === 'types' && /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 43\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: getCurrentData().length > 0 ? getCurrentData().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: getCurrentDataName(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 21\n            }, this), activeTab === 'types' && /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.properties && item.properties.length > 0 ? item.properties.map(prop => /*#__PURE__*/_jsxDEV(Chip, {\n                label: prop.name,\n                size: \"small\",\n                style: {\n                  margin: '2px'\n                }\n              }, prop.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 29\n              }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'gray'\n                },\n                children: \"\\u041D\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  onClick: () => handleOpenEditDialog(item),\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"error\",\n                  onClick: () => handleOpenDeleteDialog(item),\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: activeTab === 'types' ? 3 : 2,\n              align: \"center\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCreateDialog,\n      onClose: handleCloseCreateDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", getTabLabel(activeTab)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"name\",\n          label: `Название ${getTabLabel(activeTab, false)}`,\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: formData.name,\n          onChange: handleInputChange,\n          error: !!errors.name,\n          helperText: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), activeTab === 'types' && /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            options: properties // Все доступные свойства\n            ,\n            getOptionLabel: option => option.name,\n            value: formData.selectedProperties,\n            onChange: handlePropertiesChange,\n            filterSelectedOptions: true,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              variant: \"outlined\",\n              label: \"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 \\u0442\\u0438\\u043F\\u0430\",\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 19\n            }, this),\n            renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              variant: \"outlined\",\n              label: option.name,\n              size: \"small\",\n              ...getTagProps({\n                index\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0434\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E \\u0442\\u0438\\u043F\\u0430 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430. \\u041A\\u0430\\u0436\\u0434\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u0441\\u0432\\u044F\\u0437\\u0430\\u043D\\u043E \\u0441 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u0438\\u043C\\u0438 \\u0442\\u0438\\u043F\\u0430\\u043C\\u0438.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseCreateDialog,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateItem,\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 24\n          }, this) : 'Создать'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: handleCloseEditDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \", getTabLabel(activeTab)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"name\",\n          label: `Название ${getTabLabel(activeTab, false)}`,\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: formData.name,\n          onChange: handleInputChange,\n          error: !!errors.name,\n          helperText: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), activeTab === 'types' && /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n            multiple: true,\n            options: properties // Все доступные свойства\n            ,\n            getOptionLabel: option => option.name,\n            value: formData.selectedProperties,\n            onChange: handlePropertiesChange,\n            filterSelectedOptions: true,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              variant: \"outlined\",\n              label: \"\\u0421\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430 \\u0442\\u0438\\u043F\\u0430\",\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 19\n            }, this),\n            renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              variant: \"outlined\",\n              label: option.name,\n              size: \"small\",\n              ...getTagProps({\n                index\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0434\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E \\u0442\\u0438\\u043F\\u0430 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430. \\u041A\\u0430\\u0436\\u0434\\u043E\\u0435 \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u043E \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u0441\\u0432\\u044F\\u0437\\u0430\\u043D\\u043E \\u0441 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u0438\\u043C\\u0438 \\u0442\\u0438\\u043F\\u0430\\u043C\\u0438.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditDialog,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateItem,\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 24\n          }, this) : 'Сохранить'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCloseDeleteDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\\"\", deletingItem ? getCurrentDataName(deletingItem) : '', \"\\\"? \\u042D\\u0442\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDeleteDialog,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteItem,\n          color: \"error\",\n          variant: \"contained\",\n          autoFocus: true,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 24\n          }, this) : 'Удалить'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n_s(Directory, \"Ox70i0Hdt/BwBmQUuip7s5T0Ylk=\");\n_c = Directory;\nexport default Directory;\nvar _c;\n$RefreshReg$(_c, \"Directory\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Snackbar","Alert","Box","Autocomplete","Checkbox","Chip","FormControl","InputLabel","Select","MenuItem","FormHelperText","IconButton","Tooltip","CircularProgress","axios","AddIcon","EditIcon","DeleteIcon","config","jsxDEV","_jsxDEV","API_BASE_URL","Directory","_s","types","setTypes","departments","setDepartments","statuses","setStatuses","employees","setEmployees","properties","setProperties","activeTab","setActiveTab","openCreateDialog","setOpenCreateDialog","openEditDialog","setOpenEditDialog","openDeleteDialog","setOpenDeleteDialog","snackbar","setSnackbar","open","message","severity","loading","setLoading","deletingItem","setDeletingItem","formData","setFormData","name","selectedProperties","editingItem","setEditingItem","errors","setErrors","fetchData","url","response","get","data","err","console","error","showSnackbar","getTabLabel","fetchPropertiesForType","typeId","fetchAllProperties","handleCloseSnackbar","tab","plural","getCurrentData","getCurrentDataName","item","handleOpenCreateDialog","allProps","handleCloseCreateDialog","handleOpenEditDialog","typeProps","id","handleCloseEditDialog","handleOpenDeleteDialog","handleCloseDeleteDialog","handleInputChange","e","value","target","handlePropertiesChange","event","newValue","handleCreateItem","trim","payload","property_ids","map","p","Error","post","_err$response","_err$response$data","errorMsg","handleUpdateItem","put","updateState","items","_err$response2","_err$response2$data","handleDeleteItem","delete","removeState","filter","status","_err$response$data2","maxWidth","style","marginTop","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","mb","flexWrap","gap","onClick","margin","alignItems","color","startIcon","my","component","length","prop","label","size","title","colSpan","onClose","fullWidth","autoFocus","type","onChange","helperText","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","renderTags","getTagProps","index","disabled","autoHideDuration","anchorOrigin","vertical","horizontal","sx","width","_c","$RefreshReg$"],"sources":["D:/it_inventory.localhost/frontend/src/components/Directory.js"],"sourcesContent":["// frontend/src/components/Directory.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Snackbar,\r\n  Alert,\r\n  Box,\r\n  Autocomplete,\r\n  Checkbox,\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport config from '../config'; // Импорт конфигурации\r\n\r\nconst API_BASE_URL = config.API_BASE_URL; // Получение URL из конфигурации\r\n\r\nconst Directory = () => {\r\n  // === Состояния для данных ===\r\n  const [types, setTypes] = useState([]); // Ранее categories\r\n  const [departments, setDepartments] = useState([]);\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [properties, setProperties] = useState([]); // Новое состояние для всех свойств\r\n\r\n  // === Состояния для UI ===\r\n  const [activeTab, setActiveTab] = useState('types'); // Ранее categories\r\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [deletingItem, setDeletingItem] = useState(null);\r\n\r\n  // === Состояния для форм ===\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    // Для типов устройств также будем хранить выбранные свойства\r\n    selectedProperties: [], // Новое поле для выбранных свойств при создании/редактировании\r\n  });\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // === Загрузка данных справочников ===\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [activeTab]);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setErrors({});\r\n    try {\r\n      let url = '';\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          url = `${API_BASE_URL}/api/types`;\r\n          break;\r\n        case 'departments':\r\n          url = `${API_BASE_URL}/api/departments`;\r\n          break;\r\n        case 'statuses':\r\n          url = `${API_BASE_URL}/api/statuses`;\r\n          break;\r\n        case 'employees':\r\n          url = `${API_BASE_URL}/api/employees`;\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      const response = await axios.get(url);\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          setTypes(response.data);\r\n          break;\r\n        case 'departments':\r\n          setDepartments(response.data);\r\n          break;\r\n        case 'statuses':\r\n          setStatuses(response.data);\r\n          break;\r\n        case 'employees':\r\n          setEmployees(response.data);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.error(`Ошибка при загрузке ${activeTab}:`, err);\r\n      showSnackbar(`Ошибка при загрузке ${getTabLabel(activeTab, true)}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // === Функции для работы с типами устройств (ранее категории) ===\r\n  const fetchPropertiesForType = async (typeId) => {\r\n    // Загружает список свойств, связанных с конкретным типом\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/types/${typeId}/properties`);\r\n      return response.data; // Ожидается массив {id, name}\r\n    } catch (err) {\r\n      console.error(`Ошибка при загрузке свойств для типа ${typeId}:`, err);\r\n      showSnackbar('Ошибка при загрузке свойств типа', 'error');\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const fetchAllProperties = async () => {\r\n    // Загружает список всех доступных свойств\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/properties`);\r\n      return response.data; // Ожидается массив {id, name}\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке всех свойств:', err);\r\n      showSnackbar('Ошибка при загрузке списка свойств', 'error');\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // === Вспомогательные функции ===\r\n  const showSnackbar = (message, severity = 'success') => {\r\n    setSnackbar({ open: true, message, severity });\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  const getTabLabel = (tab, plural = false) => {\r\n    switch (tab) {\r\n      case 'types': // Ранее categories\r\n        return plural ? 'Типы устройств' : 'Тип устройства'; // Изменено\r\n      case 'departments':\r\n        return plural ? 'Отделы' : 'Отдел';\r\n      case 'statuses':\r\n        return plural ? 'Статусы' : 'Статус';\r\n      case 'employees':\r\n        return plural ? 'Сотрудники' : 'Сотрудник';\r\n      default:\r\n        return tab;\r\n    }\r\n  };\r\n\r\n  const getCurrentData = () => {\r\n    switch (activeTab) {\r\n      case 'types': // Ранее categories\r\n        return types;\r\n      case 'departments':\r\n        return departments;\r\n      case 'statuses':\r\n        return statuses;\r\n      case 'employees':\r\n        return employees;\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const getCurrentDataName = (item) => {\r\n    // Предполагаем, что у всех элементов есть поле 'name'\r\n    // Для сотрудников может быть 'full_name' или комбинация полей\r\n    if (activeTab === 'employees') {\r\n      // Пример: если у сотрудника есть поля first_name и last_name\r\n      // return `${item.first_name || ''} ${item.last_name || ''}`.trim() || item.name || 'Без имени';\r\n      // Пока используем общее поле 'name'\r\n      return item.name || 'Без имени';\r\n    }\r\n    return item.name || 'Без названия';\r\n  };\r\n\r\n  // === Функции открытия/закрытия диалогов ===\r\n  const handleOpenCreateDialog = async () => {\r\n    setFormData({ name: '', selectedProperties: [] }); // Инициализируем selectedProperties\r\n    setErrors({});\r\n    if (activeTab === 'types') { // Ранее categories\r\n      // При открытии диалога создания типа, загружаем все свойства\r\n      const allProps = await fetchAllProperties();\r\n      setProperties(allProps);\r\n    }\r\n    setOpenCreateDialog(true);\r\n  };\r\n\r\n  const handleCloseCreateDialog = () => {\r\n    setOpenCreateDialog(false);\r\n    setFormData({ name: '', selectedProperties: [] }); // Очищаем при закрытии\r\n    setErrors({});\r\n  };\r\n\r\n  const handleOpenEditDialog = async (item) => {\r\n    setEditingItem(item);\r\n    if (activeTab === 'types') { // Ранее categories\r\n      // При открытии диалога редактирования типа, загружаем все свойства и текущие свойства типа\r\n      const allProps = await fetchAllProperties();\r\n      setProperties(allProps);\r\n      const typeProps = await fetchPropertiesForType(item.id);\r\n      // Устанавливаем форму с именем типа и его текущими свойствами\r\n      setFormData({ name: item.name || '', selectedProperties: typeProps });\r\n    } else {\r\n      setFormData({ name: item.name || '', selectedProperties: [] }); // Для других вкладок\r\n    }\r\n    setErrors({});\r\n    setOpenEditDialog(true);\r\n  };\r\n\r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setEditingItem(null);\r\n    setFormData({ name: '', selectedProperties: [] }); // Очищаем при закрытии\r\n    setErrors({});\r\n  };\r\n\r\n  const handleOpenDeleteDialog = (item) => {\r\n    setDeletingItem(item);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeletingItem(null);\r\n  };\r\n\r\n  // === Функции обработки изменений в форме ===\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n    // Очищаем ошибку при изменении поля\r\n    if (errors[name]) {\r\n      setErrors({ ...errors, [name]: '' });\r\n    }\r\n  };\r\n\r\n  const handlePropertiesChange = (event, newValue) => {\r\n    // newValue - массив выбранных свойств {id, name}\r\n    setFormData({\r\n      ...formData,\r\n      selectedProperties: newValue,\r\n    });\r\n    // Ошибки для свойств можно обрабатывать отдельно, если нужно\r\n  };\r\n\r\n  // === Функции сохранения данных ===\r\n  const handleCreateItem = async () => {\r\n    if (!formData.name.trim()) {\r\n      setErrors({ name: 'Название обязательно' });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      let url = '';\r\n      let payload = { name: formData.name };\r\n\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          url = `${API_BASE_URL}/api/types`;\r\n          // Для типов добавляем информацию о свойствах\r\n          payload.property_ids = formData.selectedProperties.map(p => p.id); // Отправляем массив ID\r\n          break;\r\n        case 'departments':\r\n          url = `${API_BASE_URL}/api/departments`;\r\n          break;\r\n        case 'statuses':\r\n          url = `${API_BASE_URL}/api/statuses`;\r\n          break;\r\n        case 'employees':\r\n          url = `${API_BASE_URL}/api/employees`;\r\n          // payload = { name: formData.name, department_id: ... }; // Пример для сотрудника\r\n          break;\r\n        default:\r\n          throw new Error('Неизвестная вкладка');\r\n      }\r\n\r\n      const response = await axios.post(url, payload);\r\n\r\n      // Обновляем локальное состояние\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          setTypes([...types, response.data]);\r\n          break;\r\n        case 'departments':\r\n          setDepartments([...departments, response.data]);\r\n          break;\r\n        case 'statuses':\r\n          setStatuses([...statuses, response.data]);\r\n          break;\r\n        case 'employees':\r\n          setEmployees([...employees, response.data]);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      handleCloseCreateDialog();\r\n      showSnackbar(`${getTabLabel(activeTab)} успешно создан`, 'success');\r\n    } catch (err) {\r\n      console.error('Ошибка при создании элемента:', err);\r\n      const errorMsg = err.response?.data?.error || 'Не удалось создать элемент';\r\n      showSnackbar(errorMsg, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateItem = async () => {\r\n    if (!formData.name.trim()) {\r\n      setErrors({ name: 'Название обязательно' });\r\n      return;\r\n    }\r\n\r\n    if (!editingItem) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      let url = '';\r\n      let payload = { name: formData.name };\r\n\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          url = `${API_BASE_URL}/api/types/${editingItem.id}`;\r\n          // Для типов добавляем информацию о свойствах\r\n          payload.property_ids = formData.selectedProperties.map(p => p.id); // Отправляем массив ID\r\n          break;\r\n        case 'departments':\r\n          url = `${API_BASE_URL}/api/departments/${editingItem.id}`;\r\n          break;\r\n        case 'statuses':\r\n          url = `${API_BASE_URL}/api/statuses/${editingItem.id}`;\r\n          break;\r\n        case 'employees':\r\n          url = `${API_BASE_URL}/api/employees/${editingItem.id}`;\r\n          // payload = { name: formData.name, department_id: ... };\r\n          break;\r\n        default:\r\n          throw new Error('Неизвестная вкладка');\r\n      }\r\n\r\n      const response = await axios.put(url, payload);\r\n\r\n      // Обновляем локальное состояние\r\n      const updateState = (items) =>\r\n        items.map((item) => (item.id === editingItem.id ? response.data : item));\r\n\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          setTypes(updateState(types));\r\n          break;\r\n        case 'departments':\r\n          setDepartments(updateState(departments));\r\n          break;\r\n        case 'statuses':\r\n          setStatuses(updateState(statuses));\r\n          break;\r\n        case 'employees':\r\n          setEmployees(updateState(employees));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      handleCloseEditDialog();\r\n      showSnackbar(`${getTabLabel(activeTab)} успешно обновлён`, 'success');\r\n    } catch (err) {\r\n      console.error('Ошибка при обновлении элемента:', err);\r\n      const errorMsg = err.response?.data?.error || 'Не удалось обновить элемент';\r\n      showSnackbar(errorMsg, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async () => {\r\n    if (!deletingItem) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      let url = '';\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          url = `${API_BASE_URL}/api/types/${deletingItem.id}`;\r\n          break;\r\n        case 'departments':\r\n          url = `${API_BASE_URL}/api/departments/${deletingItem.id}`;\r\n          break;\r\n        case 'statuses':\r\n          url = `${API_BASE_URL}/api/statuses/${deletingItem.id}`;\r\n          break;\r\n        case 'employees':\r\n          url = `${API_BASE_URL}/api/employees/${deletingItem.id}`;\r\n          break;\r\n        default:\r\n          throw new Error('Неизвестная вкладка');\r\n      }\r\n\r\n      await axios.delete(url);\r\n\r\n      // Обновляем локальное состояние\r\n      const removeState = (items) => items.filter((item) => item.id !== deletingItem.id);\r\n\r\n      switch (activeTab) {\r\n        case 'types': // Ранее categories\r\n          setTypes(removeState(types));\r\n          break;\r\n        case 'departments':\r\n          setDepartments(removeState(departments));\r\n          break;\r\n        case 'statuses':\r\n          setStatuses(removeState(statuses));\r\n          break;\r\n        case 'employees':\r\n          setEmployees(removeState(employees));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      handleCloseDeleteDialog();\r\n      showSnackbar(`${getTabLabel(activeTab)} успешно удалён`, 'success');\r\n    } catch (err) {\r\n      console.error('Ошибка при удалении элемента:', err);\r\n      // Проверяем, есть ли специфичное сообщение от сервера\r\n      let errorMsg = 'Не удалось удалить элемент.';\r\n      if (err.response) {\r\n        if (err.response.status === 409) {\r\n          // 409 Conflict - часто используется для ошибок ограничения внешнего ключа\r\n          errorMsg = 'Невозможно удалить элемент, так как он используется в других записях.';\r\n        } else {\r\n          errorMsg = err.response.data?.error || errorMsg;\r\n        }\r\n      }\r\n      showSnackbar(errorMsg, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // === Рендеринг ===\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ marginTop: '20px' }}>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n        Справочники\r\n      </Typography>\r\n\r\n      {/* Кнопки навигации по вкладкам */}\r\n      <Box display=\"flex\" justifyContent=\"center\" mb={3} flexWrap=\"wrap\" gap={1}>\r\n        {['types', 'departments', 'statuses', 'employees'].map((tab) => (\r\n          <Button\r\n            key={tab}\r\n            variant={activeTab === tab ? 'contained' : 'outlined'}\r\n            onClick={() => setActiveTab(tab)}\r\n            style={{ margin: '0 5px' }}\r\n          >\r\n            {getTabLabel(tab, true)} {/* Используем множественное число для кнопок */}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Заголовок текущей вкладки */}\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <Typography variant=\"h5\">{getTabLabel(activeTab, true)}</Typography> {/* Множ. число */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleOpenCreateDialog}\r\n        >\r\n          Добавить {getTabLabel(activeTab)} {/* Единственное число */}\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Индикатор загрузки */}\r\n      {loading && (\r\n        <Box display=\"flex\" justifyContent=\"center\" my={2}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Таблица данных */}\r\n      {!loading && (\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Название</TableCell>\r\n                {activeTab === 'types' && <TableCell>Свойства</TableCell>} {/* Новый столбец для типов */}\r\n                <TableCell align=\"right\">Действия</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {getCurrentData().length > 0 ? (\r\n                getCurrentData().map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{getCurrentDataName(item)}</TableCell>\r\n                    {/* Отображение свойств для типа устройства */}\r\n                    {activeTab === 'types' && (\r\n                      <TableCell>\r\n                        {item.properties && item.properties.length > 0 ? (\r\n                          item.properties.map((prop) => (\r\n                            <Chip\r\n                              key={prop.id}\r\n                              label={prop.name}\r\n                              size=\"small\"\r\n                              style={{ margin: '2px' }}\r\n                            />\r\n                          ))\r\n                        ) : (\r\n                          <span style={{ color: 'gray' }}>Нет свойств</span>\r\n                        )}\r\n                      </TableCell>\r\n                    )}\r\n                    <TableCell align=\"right\">\r\n                      <Tooltip title=\"Редактировать\">\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          onClick={() => handleOpenEditDialog(item)}\r\n                          size=\"small\"\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Удалить\">\r\n                        <IconButton\r\n                          color=\"error\"\r\n                          onClick={() => handleOpenDeleteDialog(item)}\r\n                          size=\"small\"\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={activeTab === 'types' ? 3 : 2} align=\"center\">\r\n                    Нет данных\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      {/* Диалог создания элемента */}\r\n      <Dialog open={openCreateDialog} onClose={handleCloseCreateDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Добавить {getTabLabel(activeTab)}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"name\"\r\n            label={`Название ${getTabLabel(activeTab, false)}`}\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            error={!!errors.name}\r\n            helperText={errors.name}\r\n          />\r\n          {/* Поле выбора свойств для типа устройства */}\r\n          {activeTab === 'types' && (\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Autocomplete\r\n                multiple\r\n                options={properties} // Все доступные свойства\r\n                getOptionLabel={(option) => option.name}\r\n                value={formData.selectedProperties}\r\n                onChange={handlePropertiesChange}\r\n                filterSelectedOptions\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    label=\"Свойства типа\"\r\n                    placeholder=\"Выберите свойства\"\r\n                  />\r\n                )}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      label={option.name}\r\n                      size=\"small\"\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n              />\r\n              <FormHelperText>Выберите одно или несколько свойств для этого типа устройства. Каждое свойство может быть связано с несколькими типами.</FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseCreateDialog} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleCreateItem} color=\"primary\" variant=\"contained\" disabled={loading}>\r\n            {loading ? <CircularProgress size={24} /> : 'Создать'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог редактирования элемента */}\r\n      <Dialog open={openEditDialog} onClose={handleCloseEditDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Редактировать {getTabLabel(activeTab)}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"name\"\r\n            label={`Название ${getTabLabel(activeTab, false)}`}\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            error={!!errors.name}\r\n            helperText={errors.name}\r\n          />\r\n          {/* Поле выбора свойств для типа устройства при редактировании */}\r\n          {activeTab === 'types' && (\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <Autocomplete\r\n                multiple\r\n                options={properties} // Все доступные свойства\r\n                getOptionLabel={(option) => option.name}\r\n                value={formData.selectedProperties}\r\n                onChange={handlePropertiesChange}\r\n                filterSelectedOptions\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    label=\"Свойства типа\"\r\n                    placeholder=\"Выберите свойства\"\r\n                  />\r\n                )}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      label={option.name}\r\n                      size=\"small\"\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n              />\r\n              <FormHelperText>Выберите одно или несколько свойств для этого типа устройства. Каждое свойство может быть связано с несколькими типами.</FormHelperText>\r\n            </FormControl>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseEditDialog} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleUpdateItem} color=\"primary\" variant=\"contained\" disabled={loading}>\r\n            {loading ? <CircularProgress size={24} /> : 'Сохранить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Диалог подтверждения удаления */}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDeleteDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Подтвердите удаление</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Вы уверены, что хотите удалить \"{deletingItem ? getCurrentDataName(deletingItem) : ''}\"?\r\n            Это действие нельзя отменить.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDeleteDialog} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleDeleteItem} color=\"error\" variant=\"contained\" autoFocus disabled={loading}>\r\n            {loading ? <CircularProgress size={24} /> : 'Удалить'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar для уведомлений */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Directory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}