{"ast":null,"code":"var _jsxFileName = \"D:\\\\it_inventory.localhost\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AssetList.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, TextField, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Alert, Snackbar, TablePagination, TableSortLabel, Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = ({\n  currentUser\n}) => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [filteredAssets, setFilteredAssets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [types, setTypes] = useState([]); // Для отображения имени типа\n  const [statuses, setStatuses] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  // Для множественного удаления\n  const [assetsToDelete, setAssetsToDelete] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        // Использование withCredentials и API_BASE_URL\n        const [assetsRes, typesRes, statusesRes, departmentsRes, employeesRes] = await Promise.all([axios.get(`${API_BASE_URL}/api/assets`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/types`, {\n          withCredentials: true\n        }),\n        // Получаем types\n        axios.get(`${API_BASE_URL}/api/statuses`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/departments`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/employees`, {\n          withCredentials: true\n        })]);\n        setAssets(assetsRes.data);\n        setTypes(typesRes.data);\n        setStatuses(statusesRes.data);\n        setDepartments(departmentsRes.data);\n        setEmployees(employeesRes.data);\n        setFilteredAssets(assetsRes.data);\n      } catch (err) {\n        console.error('Ошибка загрузки данных:', err);\n        if (err.response && err.response.status === 401) {\n          setError('Ошибка аутентификации. Пожалуйста, войдите снова.');\n        } else {\n          setError('Ошибка загрузки данных. Пожалуйста, попробуйте позже.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Функции для получения имен по ID\n  const getTypeName = typeId => {\n    const type = types.find(t => t.id === typeId);\n    return type ? type.name : 'Не указано';\n  };\n  const getStatusName = statusId => {\n    const status = statuses.find(s => s.id === statusId);\n    return status ? status.name : 'Не указано';\n  };\n  const getDepartmentName = deptId => {\n    const dept = departments.find(d => d.id === deptId);\n    return dept ? dept.name : 'Не указано';\n  };\n  const getEmployeeName = empId => {\n    const emp = employees.find(e => e.id === empId);\n    return emp ? emp.name : 'Не указано';\n  };\n\n  // Фильтрация и сортировка\n  useEffect(() => {\n    let result = assets;\n\n    // Поиск\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(asset => {\n        // Создаем составное \"Наименование\"\n        const fullName = `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.toLowerCase().trim();\n\n        // Проверяем совпадение по всем указанным полям\n        return asset.inventory_number && asset.inventory_number.toLowerCase().includes(term) || fullName.includes(term) || asset.CPU && asset.CPU.toLowerCase().includes(term) || asset.RAM && asset.RAM.toLowerCase().includes(term) || asset.Drive && asset.Drive.toLowerCase().includes(term) || asset['IP-address'] && asset['IP-address'].toLowerCase().includes(term) ||\n        // Используем имя из JSON\n        getStatusName(asset.status_id).toLowerCase().includes(term) || asset.actual_user && asset.actual_user.toLowerCase().includes(term) || getEmployeeName(asset.responsible_person).toLowerCase().includes(term) || getDepartmentName(asset.department_id).toLowerCase().includes(term) || asset.room && asset.room.toLowerCase().includes(term) || asset.purchase_date && asset.purchase_date.toLowerCase().includes(term);\n      });\n    }\n\n    // Сортировка\n    result = [...result].sort((a, b) => {\n      let aValue = a[sortColumn];\n      let bValue = b[sortColumn];\n\n      // Для специальных полей, которые требуют преобразования\n      if (sortColumn === 'type_id') {\n        aValue = getTypeName(aValue);\n        bValue = getTypeName(bValue);\n      } else if (sortColumn === 'status_id') {\n        aValue = getStatusName(aValue);\n        bValue = getStatusName(bValue);\n      } else if (sortColumn === 'department_id') {\n        aValue = getDepartmentName(aValue);\n        bValue = getDepartmentName(bValue);\n      } else if (sortColumn === 'responsible_person') {\n        aValue = getEmployeeName(aValue);\n        bValue = getEmployeeName(bValue);\n      } else if (sortColumn === 'purchase_date') {\n        aValue = aValue ? new Date(aValue) : new Date(0);\n        bValue = bValue ? new Date(bValue) : new Date(0);\n      } else if (typeof aValue === 'string') {\n        aValue = aValue.toLowerCase();\n        bValue = bValue.toLowerCase();\n      }\n      if (aValue < bValue) {\n        return sortOrder === 'asc' ? -1 : 1;\n      }\n      if (aValue > bValue) {\n        return sortOrder === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    setFilteredAssets(result);\n    setPage(0); // Сбросить на первую страницу после фильтрации/сортировки\n  }, [assets, searchTerm, sortColumn, sortOrder, types, statuses, departments, employees]);\n\n  // Сортировка\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortOrder('asc');\n    }\n  };\n\n  // Пагинация\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Выбор активов\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = paginatedAssets.map(asset => asset.id);\n      setSelectedAssets(newSelected);\n      return;\n    }\n    setSelectedAssets([]);\n  };\n  const handleClick = (event, id) => {\n    const selectedIndex = selectedAssets.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedAssets, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedAssets.slice(1));\n    } else if (selectedIndex === selectedAssets.length - 1) {\n      newSelected = newSelected.concat(selectedAssets.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selectedAssets.slice(0, selectedIndex), selectedAssets.slice(selectedIndex + 1));\n    }\n    setSelectedAssets(newSelected);\n  };\n  const isSelected = id => selectedAssets.indexOf(id) !== -1;\n\n  // Пагинация\n  const paginatedAssets = filteredAssets.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  const isAllSelected = paginatedAssets.length > 0 && selectedAssets.length === paginatedAssets.length;\n\n  // Печать QR-кодов\n  const handlePrintQRCode = async () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите хотя бы один актив',\n        severity: 'warning'\n      });\n      return;\n    }\n    try {\n      const res = await axios.post(`${API_BASE_URL}/api/qrcodes`, {\n        ids: selectedAssets\n      }, {\n        withCredentials: true\n      });\n      const codes = res.data;\n      let htmlContent = `\n        <html>\n          <head>\n            <style>\n              @page {\n                size: A4;\n                margin: 0;\n              }\n\n              body {\n                width: 21cm;\n                padding: 0;\n                background-color: #fff;\n                font-family: Arial, sans-serif;\n              }\n\n              .page {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                padding: 20px;\n                box-sizing: border-box;\n                page-break-after: always;\n                break-after: page;\n              }\n\n              .qr-wrapper {\n                width: 3cm;\n                height: 3cm;\n                position: relative;\n                text-align: center;\n                font-size: 10px;\n                box-sizing: border-box;\n                page-break-inside: avoid;\n                break-inside: avoid;\n              }\n\n              .qr-container {\n                width: 100%;\n                height: calc(100% - 20px); /* Оставляем место для текста */\n                display: flex;\n                justify-content: center;\n                align-items: center;\n              }\n\n              img {\n                max-width: 100%;\n                max-height: 100%;\n                object-fit: contain;\n              }\n\n              .text-top,\n              .text-bottom {\n                position: absolute;\n                left: 50%;\n                transform: translateX(-50%);\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                width: 90%;\n                font-size: 8px;\n              }\n\n              .text-top {\n                top: 0;\n              }\n\n              .text-bottom {\n                bottom: 0;\n              }\n            </style>\n          </head>\n          <body>\n      `;\n      const itemsPerPage = 48;\n      for (let i = 0; i < codes.length; i += itemsPerPage) {\n        const pageItems = codes.slice(i, i + itemsPerPage);\n        htmlContent += `<div class=\"page\">`;\n        pageItems.forEach(code => {\n          htmlContent += `\n            <div class=\"qr-wrapper\">\n              <div class=\"qr-container\">\n                <img src=\"data:image/png;base64,${code.qr_base64}\" />\n              </div>\n              <span class=\"text-top\">${code.full_name || ''}</span>\n              <span class=\"text-bottom\">${code.inventory_number || ''}</span>\n            </div>\n          `;\n        });\n        htmlContent += `</div>`;\n      }\n      htmlContent += '</body></html>';\n      const printWindow = window.open('', '_blank');\n      printWindow.document.write(htmlContent);\n      setTimeout(() => {\n        printWindow.print();\n        printWindow.close();\n      }, 500);\n    } catch (err) {\n      console.error('Ошибка при генерации QR-кодов:', err);\n      setSnackbar({\n        open: true,\n        message: 'Не удалось получить QR-коды с сервера',\n        severity: 'error'\n      });\n    }\n  };\n\n  // Экспорт в Excel\n  const handleExportExcel = () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите хотя бы один актив для экспорта',\n        severity: 'warning'\n      });\n      return;\n    }\n\n    // Фильтруем активы по выбранным ID\n    const selectedAssetObjects = assets.filter(asset => selectedAssets.includes(asset.id));\n\n    // Подготавливаем данные для экспорта\n    const dataToExport = selectedAssetObjects.map(asset => ({\n      'Инвентарный номер': asset.inventory_number || '',\n      'Наименование': `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim(),\n      'Процессор': asset.CPU || '',\n      'Оперативная память': asset.RAM || '',\n      'Диск': asset.Drive || '',\n      'IP-адрес': asset['IP-address'] || '',\n      // Используем имя из JSON\n      'Статус': getStatusName(asset.status_id),\n      'Пользователь': asset.actual_user || '',\n      'Ответственный': getEmployeeName(asset.responsible_person),\n      'Отдел': getDepartmentName(asset.department_id),\n      'Помещение': asset.room || '',\n      'Дата покупки': asset.purchase_date ? new Date(asset.purchase_date).toLocaleDateString() : ''\n    }));\n\n    // Создаем CSV контент\n    const headers = Object.keys(dataToExport[0]).join(';') + '\\n';\n    const rows = dataToExport.map(obj => Object.values(obj).map(value => `\"${value}\"`).join(';')).join('\\n');\n    const csvContent = '\\uFEFF' + headers + rows; // BOM для UTF-8\n\n    // Создаем и скачиваем файл\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `Оборудование_${new Date().toISOString().slice(0, 10)}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Удаление активов\n  const handleDeleteSelected = () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите активы для удаления',\n        severity: 'warning'\n      });\n      return;\n    }\n    setAssetsToDelete(selectedAssets);\n    setDeleteDialogOpen(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      // Удаляем каждый выбранный актив\n      await Promise.all(assetsToDelete.map(id => axios.delete(`${API_BASE_URL}/api/assets/${id}`, {\n        withCredentials: true\n      })));\n      // Обновляем состояние\n      setAssets(assets.filter(asset => !assetsToDelete.includes(asset.id)));\n      setSelectedAssets([]); // Очищаем выбор\n      setAssetsToDelete([]); // Очищаем список на удаление\n      setSnackbar({\n        open: true,\n        message: 'Активы успешно удалены',\n        severity: 'success'\n      });\n    } catch (err) {\n      console.error('Ошибка при удалении активов:', err);\n      setSnackbar({\n        open: true,\n        message: 'Ошибка при удалении активов',\n        severity: 'error'\n      });\n    } finally {\n      setDeleteDialogOpen(false);\n    }\n  };\n  const closeDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setAssetsToDelete([]);\n  };\n\n  // Уведомления\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      style: {\n        textAlign: 'center',\n        fontSize: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        marginBottom: '16px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      mb: 2,\n      flexWrap: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleExportExcel,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePrintQRCode,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\" // <<<--- Красная кнопка\n        ,\n        onClick: handleDeleteSelected,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), currentUser && currentUser.role === 'admin' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\" // <<<--- Зелёная кнопка\n        ,\n        onClick: () => navigate('/assets/add'),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < paginatedAssets.length,\n                checked: isAllSelected,\n                onChange: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'inventory_number',\n                direction: sortColumn === 'inventory_number' ? sortOrder : 'asc',\n                onClick: () => handleSort('inventory_number'),\n                children: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'type_id' // Сортируем по имени типа\n                ,\n                direction: sortColumn === 'type_id' ? sortOrder : 'asc',\n                onClick: () => handleSort('type_id'),\n                children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'CPU',\n                direction: sortColumn === 'CPU' ? sortOrder : 'asc',\n                onClick: () => handleSort('CPU'),\n                children: \"\\u041F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u043E\\u0440\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'RAM',\n                direction: sortColumn === 'RAM' ? sortOrder : 'asc',\n                onClick: () => handleSort('RAM'),\n                children: \"\\u041E\\u043F\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u043F\\u0430\\u043C\\u044F\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'Drive',\n                direction: sortColumn === 'Drive' ? sortOrder : 'asc',\n                onClick: () => handleSort('Drive'),\n                children: \"\\u0414\\u0438\\u0441\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'IP-address' // Используем имя из JSON\n                ,\n                direction: sortColumn === 'IP-address' ? sortOrder : 'asc',\n                onClick: () => handleSort('IP-address'),\n                children: \"IP-\\u0430\\u0434\\u0440\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'status_id',\n                direction: sortColumn === 'status_id' ? sortOrder : 'asc',\n                onClick: () => handleSort('status_id'),\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'actual_user',\n                direction: sortColumn === 'actual_user' ? sortOrder : 'asc',\n                onClick: () => handleSort('actual_user'),\n                children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'responsible_person',\n                direction: sortColumn === 'responsible_person' ? sortOrder : 'asc',\n                onClick: () => handleSort('responsible_person'),\n                children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'department_id',\n                direction: sortColumn === 'department_id' ? sortOrder : 'asc',\n                onClick: () => handleSort('department_id'),\n                children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'room',\n                direction: sortColumn === 'room' ? sortOrder : 'asc',\n                onClick: () => handleSort('room'),\n                children: \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'purchase_date',\n                direction: sortColumn === 'purchase_date' ? sortOrder : 'asc',\n                onClick: () => handleSort('purchase_date'),\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paginatedAssets.length > 0 ? paginatedAssets.map(asset => {\n            const isItemSelected = isSelected(asset.id);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: event => {\n                // Клик по чекбоксу или кнопке не должен открывать карточку\n                if (event.target.type !== 'checkbox') {\n                  navigate(`/assets/${asset.id}`);\n                }\n              },\n              selected: isItemSelected,\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isItemSelected,\n                  onChange: event => handleClick(event, asset.id),\n                  onClick: event => event.stopPropagation() // Останавливаем всплытие, чтобы не открывать карточку\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.inventory_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.CPU || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.RAM || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.Drive || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset['IP-address'] || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getStatusName(asset.status_id) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.actual_user || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getEmployeeName(asset.responsible_person) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getDepartmentName(asset.department_id) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.room || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.purchase_date ? new Date(asset.purchase_date).toLocaleDateString() : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 21\n              }, this)]\n            }, asset.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 13,\n              align: \"center\",\n              children: [\" \", \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 50, 100],\n      component: \"div\",\n      count: filteredAssets.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage,\n      labelRowsPerPage: \"\\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435:\",\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} из ${count}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: closeDeleteDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Подтвердите удаление\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: [\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", assetsToDelete.length, \" \\u0430\\u043A\\u0442\\u0438\\u0432(\\u043E\\u0432)? \\u042D\\u0442\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDeleteDialog,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDelete,\n          color: \"error\",\n          autoFocus: true,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetList, \"geOBcadiZRDIOXPe6ifnQyz+5NA=\", false, function () {\n  return [useNavigate];\n});\n_c = AssetList;\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Typography","Box","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Alert","Snackbar","TablePagination","TableSortLabel","Checkbox","FormControlLabel","FormGroup","axios","API_BASE_URL","jsxDEV","_jsxDEV","AssetList","currentUser","_s","assets","setAssets","filteredAssets","setFilteredAssets","searchTerm","setSearchTerm","types","setTypes","statuses","setStatuses","departments","setDepartments","employees","setEmployees","selectedAssets","setSelectedAssets","sortColumn","setSortColumn","sortOrder","setSortOrder","page","setPage","rowsPerPage","setRowsPerPage","snackbar","setSnackbar","open","message","severity","deleteDialogOpen","setDeleteDialogOpen","assetsToDelete","setAssetsToDelete","loading","setLoading","error","setError","navigate","fetchData","assetsRes","typesRes","statusesRes","departmentsRes","employeesRes","Promise","all","get","withCredentials","data","err","console","response","status","getTypeName","typeId","type","find","t","id","name","getStatusName","statusId","s","getDepartmentName","deptId","dept","d","getEmployeeName","empId","emp","e","result","term","toLowerCase","filter","asset","fullName","type_id","brand","model","trim","inventory_number","includes","CPU","RAM","Drive","status_id","actual_user","responsible_person","department_id","room","purchase_date","sort","a","b","aValue","bValue","Date","handleSort","column","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelected","paginatedAssets","map","handleClick","selectedIndex","indexOf","concat","slice","length","isSelected","isAllSelected","handlePrintQRCode","res","post","ids","codes","htmlContent","itemsPerPage","i","pageItems","forEach","code","qr_base64","full_name","printWindow","window","document","write","setTimeout","print","close","handleExportExcel","selectedAssetObjects","dataToExport","toLocaleDateString","headers","Object","keys","join","rows","obj","values","csvContent","blob","Blob","url","URL","createObjectURL","link","createElement","setAttribute","toISOString","style","visibility","body","appendChild","click","removeChild","handleDeleteSelected","confirmDelete","delete","closeDeleteDialog","handleCloseSnackbar","maxWidth","marginTop","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","fontSize","label","fullWidth","onChange","marginBottom","display","gap","mb","flexWrap","color","onClick","disabled","role","component","padding","indeterminate","active","direction","isItemSelected","hover","selected","cursor","stopPropagation","colSpan","align","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","from","to","onClose","autoFocus","autoHideDuration","sx","width","_c","$RefreshReg$"],"sources":["D:/it_inventory.localhost/frontend/src/components/AssetList.js"],"sourcesContent":["// frontend/src/components/AssetList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Alert,\r\n  Snackbar,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\r\n\r\nconst AssetList = ({ currentUser }) => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [filteredAssets, setFilteredAssets] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [types, setTypes] = useState([]); // Для отображения имени типа\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(50);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  // Для множественного удаления\r\n  const [assetsToDelete, setAssetsToDelete] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        // Использование withCredentials и API_BASE_URL\r\n        const [assetsRes, typesRes, statusesRes, departmentsRes, employeesRes] = await Promise.all([\r\n          axios.get(`${API_BASE_URL}/api/assets`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/types`, { withCredentials: true }), // Получаем types\r\n          axios.get(`${API_BASE_URL}/api/statuses`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/departments`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/employees`, { withCredentials: true }),\r\n        ]);\r\n\r\n        setAssets(assetsRes.data);\r\n        setTypes(typesRes.data);\r\n        setStatuses(statusesRes.data);\r\n        setDepartments(departmentsRes.data);\r\n        setEmployees(employeesRes.data);\r\n        setFilteredAssets(assetsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки данных:', err);\r\n        if (err.response && err.response.status === 401) {\r\n          setError('Ошибка аутентификации. Пожалуйста, войдите снова.');\r\n        } else {\r\n          setError('Ошибка загрузки данных. Пожалуйста, попробуйте позже.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Функции для получения имен по ID\r\n  const getTypeName = (typeId) => {\r\n    const type = types.find(t => t.id === typeId);\r\n    return type ? type.name : 'Не указано';\r\n  };\r\n\r\n  const getStatusName = (statusId) => {\r\n    const status = statuses.find(s => s.id === statusId);\r\n    return status ? status.name : 'Не указано';\r\n  };\r\n\r\n  const getDepartmentName = (deptId) => {\r\n    const dept = departments.find(d => d.id === deptId);\r\n    return dept ? dept.name : 'Не указано';\r\n  };\r\n\r\n  const getEmployeeName = (empId) => {\r\n    const emp = employees.find(e => e.id === empId);\r\n    return emp ? emp.name : 'Не указано';\r\n  };\r\n\r\n  // Фильтрация и сортировка\r\n  useEffect(() => {\r\n    let result = assets;\r\n\r\n    // Поиск\r\n    if (searchTerm) {\r\n      const term = searchTerm.toLowerCase();\r\n      result = result.filter(asset => {\r\n        // Создаем составное \"Наименование\"\r\n        const fullName = `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.toLowerCase().trim();\r\n        \r\n        // Проверяем совпадение по всем указанным полям\r\n        return (\r\n          (asset.inventory_number && asset.inventory_number.toLowerCase().includes(term)) ||\r\n          fullName.includes(term) ||\r\n          (asset.CPU && asset.CPU.toLowerCase().includes(term)) ||\r\n          (asset.RAM && asset.RAM.toLowerCase().includes(term)) ||\r\n          (asset.Drive && asset.Drive.toLowerCase().includes(term)) ||\r\n          (asset['IP-address'] && asset['IP-address'].toLowerCase().includes(term)) || // Используем имя из JSON\r\n          getStatusName(asset.status_id).toLowerCase().includes(term) ||\r\n          (asset.actual_user && asset.actual_user.toLowerCase().includes(term)) ||\r\n          getEmployeeName(asset.responsible_person).toLowerCase().includes(term) ||\r\n          getDepartmentName(asset.department_id).toLowerCase().includes(term) ||\r\n          (asset.room && asset.room.toLowerCase().includes(term)) ||\r\n          (asset.purchase_date && asset.purchase_date.toLowerCase().includes(term))\r\n        );\r\n      });\r\n    }\r\n\r\n    // Сортировка\r\n    result = [...result].sort((a, b) => {\r\n      let aValue = a[sortColumn];\r\n      let bValue = b[sortColumn];\r\n\r\n      // Для специальных полей, которые требуют преобразования\r\n      if (sortColumn === 'type_id') {\r\n        aValue = getTypeName(aValue);\r\n        bValue = getTypeName(bValue);\r\n      } else if (sortColumn === 'status_id') {\r\n        aValue = getStatusName(aValue);\r\n        bValue = getStatusName(bValue);\r\n      } else if (sortColumn === 'department_id') {\r\n        aValue = getDepartmentName(aValue);\r\n        bValue = getDepartmentName(bValue);\r\n      } else if (sortColumn === 'responsible_person') {\r\n        aValue = getEmployeeName(aValue);\r\n        bValue = getEmployeeName(bValue);\r\n      } else if (sortColumn === 'purchase_date') {\r\n        aValue = aValue ? new Date(aValue) : new Date(0);\r\n        bValue = bValue ? new Date(bValue) : new Date(0);\r\n      } else if (typeof aValue === 'string') {\r\n        aValue = aValue.toLowerCase();\r\n        bValue = bValue.toLowerCase();\r\n      }\r\n\r\n      if (aValue < bValue) {\r\n        return sortOrder === 'asc' ? -1 : 1;\r\n      }\r\n      if (aValue > bValue) {\r\n        return sortOrder === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    setFilteredAssets(result);\r\n    setPage(0); // Сбросить на первую страницу после фильтрации/сортировки\r\n  }, [assets, searchTerm, sortColumn, sortOrder, types, statuses, departments, employees]);\r\n\r\n  // Сортировка\r\n  const handleSort = (column) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  // Пагинация\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Выбор активов\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = paginatedAssets.map((asset) => asset.id);\r\n      setSelectedAssets(newSelected);\r\n      return;\r\n    }\r\n    setSelectedAssets([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selectedAssets.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selectedAssets, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selectedAssets.slice(1));\r\n    } else if (selectedIndex === selectedAssets.length - 1) {\r\n      newSelected = newSelected.concat(selectedAssets.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selectedAssets.slice(0, selectedIndex),\r\n        selectedAssets.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelectedAssets(newSelected);\r\n  };\r\n\r\n  const isSelected = (id) => selectedAssets.indexOf(id) !== -1;\r\n\r\n  // Пагинация\r\n  const paginatedAssets = filteredAssets.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n  const isAllSelected = paginatedAssets.length > 0 && selectedAssets.length === paginatedAssets.length;\r\n\r\n  // Печать QR-кодов\r\n  const handlePrintQRCode = async () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите хотя бы один актив', severity: 'warning' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(`${API_BASE_URL}/api/qrcodes`, {\r\n        ids: selectedAssets\r\n      }, { withCredentials: true });\r\n\r\n      const codes = res.data;\r\n\r\n      let htmlContent = `\r\n        <html>\r\n          <head>\r\n            <style>\r\n              @page {\r\n                size: A4;\r\n                margin: 0;\r\n              }\r\n\r\n              body {\r\n                width: 21cm;\r\n                padding: 0;\r\n                background-color: #fff;\r\n                font-family: Arial, sans-serif;\r\n              }\r\n\r\n              .page {\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                gap: 10px;\r\n                padding: 20px;\r\n                box-sizing: border-box;\r\n                page-break-after: always;\r\n                break-after: page;\r\n              }\r\n\r\n              .qr-wrapper {\r\n                width: 3cm;\r\n                height: 3cm;\r\n                position: relative;\r\n                text-align: center;\r\n                font-size: 10px;\r\n                box-sizing: border-box;\r\n                page-break-inside: avoid;\r\n                break-inside: avoid;\r\n              }\r\n\r\n              .qr-container {\r\n                width: 100%;\r\n                height: calc(100% - 20px); /* Оставляем место для текста */\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n              }\r\n\r\n              img {\r\n                max-width: 100%;\r\n                max-height: 100%;\r\n                object-fit: contain;\r\n              }\r\n\r\n              .text-top,\r\n              .text-bottom {\r\n                position: absolute;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                width: 90%;\r\n                font-size: 8px;\r\n              }\r\n\r\n              .text-top {\r\n                top: 0;\r\n              }\r\n\r\n              .text-bottom {\r\n                bottom: 0;\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n      `;\r\n\r\n      const itemsPerPage = 48;\r\n\r\n      for (let i = 0; i < codes.length; i += itemsPerPage) {\r\n        const pageItems = codes.slice(i, i + itemsPerPage);\r\n\r\n        htmlContent += `<div class=\"page\">`;\r\n\r\n        pageItems.forEach((code) => {\r\n          htmlContent += `\r\n            <div class=\"qr-wrapper\">\r\n              <div class=\"qr-container\">\r\n                <img src=\"data:image/png;base64,${code.qr_base64}\" />\r\n              </div>\r\n              <span class=\"text-top\">${code.full_name || ''}</span>\r\n              <span class=\"text-bottom\">${code.inventory_number || ''}</span>\r\n            </div>\r\n          `;\r\n        });\r\n\r\n        htmlContent += `</div>`;\r\n      }\r\n\r\n      htmlContent += '</body></html>';\r\n\r\n      const printWindow = window.open('', '_blank');\r\n      printWindow.document.write(htmlContent);\r\n\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n        printWindow.close();\r\n      }, 500);\r\n    } catch (err) {\r\n      console.error('Ошибка при генерации QR-кодов:', err);\r\n      setSnackbar({ open: true, message: 'Не удалось получить QR-коды с сервера', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Экспорт в Excel\r\n  const handleExportExcel = () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите хотя бы один актив для экспорта', severity: 'warning' });\r\n      return;\r\n    }\r\n\r\n    // Фильтруем активы по выбранным ID\r\n    const selectedAssetObjects = assets.filter(asset => selectedAssets.includes(asset.id));\r\n\r\n    // Подготавливаем данные для экспорта\r\n    const dataToExport = selectedAssetObjects.map(asset => ({\r\n      'Инвентарный номер': asset.inventory_number || '',\r\n      'Наименование': `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim(),\r\n      'Процессор': asset.CPU || '',\r\n      'Оперативная память': asset.RAM || '',\r\n      'Диск': asset.Drive || '',\r\n      'IP-адрес': asset['IP-address'] || '', // Используем имя из JSON\r\n      'Статус': getStatusName(asset.status_id),\r\n      'Пользователь': asset.actual_user || '',\r\n      'Ответственный': getEmployeeName(asset.responsible_person),\r\n      'Отдел': getDepartmentName(asset.department_id),\r\n      'Помещение': asset.room || '',\r\n      'Дата покупки': asset.purchase_date ? new Date(asset.purchase_date).toLocaleDateString() : ''\r\n    }));\r\n\r\n    // Создаем CSV контент\r\n    const headers = Object.keys(dataToExport[0]).join(';') + '\\n';\r\n    const rows = dataToExport.map(obj => Object.values(obj).map(value => `\"${value}\"`).join(';')).join('\\n');\r\n    const csvContent = '\\uFEFF' + headers + rows; // BOM для UTF-8\r\n\r\n    // Создаем и скачиваем файл\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `Оборудование_${new Date().toISOString().slice(0, 10)}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Удаление активов\r\n  const handleDeleteSelected = () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите активы для удаления', severity: 'warning' });\r\n      return;\r\n    }\r\n    setAssetsToDelete(selectedAssets);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      // Удаляем каждый выбранный актив\r\n      await Promise.all(\r\n        assetsToDelete.map(id =>\r\n          axios.delete(`${API_BASE_URL}/api/assets/${id}`, { withCredentials: true })\r\n        )\r\n      );\r\n      // Обновляем состояние\r\n      setAssets(assets.filter(asset => !assetsToDelete.includes(asset.id)));\r\n      setSelectedAssets([]); // Очищаем выбор\r\n      setAssetsToDelete([]); // Очищаем список на удаление\r\n      setSnackbar({ open: true, message: 'Активы успешно удалены', severity: 'success' });\r\n    } catch (err) {\r\n      console.error('Ошибка при удалении активов:', err);\r\n      setSnackbar({ open: true, message: 'Ошибка при удалении активов', severity: 'error' });\r\n    } finally {\r\n      setDeleteDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialogOpen(false);\r\n    setAssetsToDelete([]);\r\n  };\r\n\r\n  // Уведомления\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\" style={{ marginTop: '20px', textAlign: 'center' }}>\r\n        <Typography>Загрузка...</Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container maxWidth=\"lg\" style={{ marginTop: '20px' }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" style={{ marginTop: '20px' }}>\r\n      {/* <<<--- ИЗМЕНЕНО: Стилизованный заголовок */}\r\n      <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center', fontSize: '30px' }}>\r\n        <strong>Оборудование</strong>\r\n      </Typography>\r\n\r\n      {/* Поисковая строка */}\r\n      <TextField\r\n        label=\"Поиск\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        style={{ marginBottom: '16px' }}\r\n      />\r\n\r\n      {/* <<<--- ИЗМЕНЕНО: Кнопки действий под строкой поиска */}\r\n      <Box display=\"flex\" gap={2} mb={2} flexWrap=\"wrap\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleExportExcel}\r\n          disabled={selectedAssets.length === 0}\r\n        >\r\n          Печать Excel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handlePrintQRCode}\r\n          disabled={selectedAssets.length === 0}\r\n        >\r\n          Печать QR\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\" // <<<--- Красная кнопка\r\n          onClick={handleDeleteSelected}\r\n          disabled={selectedAssets.length === 0}\r\n        >\r\n          Удалить\r\n        </Button>\r\n        {currentUser && currentUser.role === 'admin' && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\" // <<<--- Зелёная кнопка\r\n            onClick={() => navigate('/assets/add')}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  indeterminate={selectedAssets.length > 0 && selectedAssets.length < paginatedAssets.length}\r\n                  checked={isAllSelected}\r\n                  onChange={handleSelectAllClick}\r\n                />\r\n              </TableCell>\r\n              {/* <<<--- ИЗМЕНЕНО: Столбцы обновлены в соответствии с требованиями */}\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'inventory_number'}\r\n                  direction={sortColumn === 'inventory_number' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('inventory_number')}\r\n                >\r\n                  Инвентарный номер\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'type_id'} // Сортируем по имени типа\r\n                  direction={sortColumn === 'type_id' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('type_id')}\r\n                >\r\n                  Наименование {/* Тип устройства Фирма Модель */}\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'CPU'}\r\n                  direction={sortColumn === 'CPU' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('CPU')}\r\n                >\r\n                  Процессор\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'RAM'}\r\n                  direction={sortColumn === 'RAM' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('RAM')}\r\n                >\r\n                  Оперативная память\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'Drive'}\r\n                  direction={sortColumn === 'Drive' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('Drive')}\r\n                >\r\n                  Диск\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'IP-address'} // Используем имя из JSON\r\n                  direction={sortColumn === 'IP-address' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('IP-address')}\r\n                >\r\n                  IP-адрес\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'status_id'}\r\n                  direction={sortColumn === 'status_id' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('status_id')}\r\n                >\r\n                  Статус\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'actual_user'}\r\n                  direction={sortColumn === 'actual_user' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('actual_user')}\r\n                >\r\n                  Пользователь\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'responsible_person'}\r\n                  direction={sortColumn === 'responsible_person' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('responsible_person')}\r\n                >\r\n                  Ответственный\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'department_id'}\r\n                  direction={sortColumn === 'department_id' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('department_id')}\r\n                >\r\n                  Отдел\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'room'}\r\n                  direction={sortColumn === 'room' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('room')}\r\n                >\r\n                  Помещение\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'purchase_date'}\r\n                  direction={sortColumn === 'purchase_date' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('purchase_date')}\r\n                >\r\n                  Дата покупки\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedAssets.length > 0 ? (\r\n              paginatedAssets.map((asset) => {\r\n                const isItemSelected = isSelected(asset.id);\r\n                return (\r\n                  <TableRow\r\n                    key={asset.id}\r\n                    hover\r\n                    onClick={(event) => {\r\n                      // Клик по чекбоксу или кнопке не должен открывать карточку\r\n                      if (event.target.type !== 'checkbox') {\r\n                        navigate(`/assets/${asset.id}`);\r\n                      }\r\n                    }}\r\n                    selected={isItemSelected}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        onChange={(event) => handleClick(event, asset.id)}\r\n                        onClick={(event) => event.stopPropagation()} // Останавливаем всплытие, чтобы не открывать карточку\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{asset.inventory_number}</TableCell>\r\n                    {/* <<<--- ИЗМЕНЕНО: Отображение составного наименования */}\r\n                    <TableCell>{`${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || '-'}</TableCell>\r\n                    <TableCell>{asset.CPU || '-'}</TableCell>\r\n                    <TableCell>{asset.RAM || '-'}</TableCell>\r\n                    <TableCell>{asset.Drive || '-'}</TableCell>\r\n                    <TableCell>{asset['IP-address'] || '-'}</TableCell> {/* Используем имя из JSON */}\r\n                    <TableCell>{getStatusName(asset.status_id) || '-'}</TableCell>\r\n                    <TableCell>{asset.actual_user || '-'}</TableCell>\r\n                    <TableCell>{getEmployeeName(asset.responsible_person) || '-'}</TableCell>\r\n                    <TableCell>{getDepartmentName(asset.department_id) || '-'}</TableCell>\r\n                    <TableCell>{asset.room || '-'}</TableCell>\r\n                    <TableCell>\r\n                      {asset.purchase_date ? new Date(asset.purchase_date).toLocaleDateString() : '-'}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={13} align=\"center\"> {/* Обновлено количество столбцов */}\r\n                  Нет данных\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={filteredAssets.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage=\"Строк на странице:\"\r\n        labelDisplayedRows={({ from, to, count }) => `${from}-${to} из ${count}`}\r\n      />\r\n\r\n      {/* Диалог подтверждения удаления */}\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={closeDeleteDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Подтвердите удаление\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Вы уверены, что хотите удалить {assetsToDelete.length} актив(ов)?\r\n            Это действие нельзя отменить.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDeleteDialog} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={confirmDelete} color=\"error\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Уведомления */}\r\n      <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}