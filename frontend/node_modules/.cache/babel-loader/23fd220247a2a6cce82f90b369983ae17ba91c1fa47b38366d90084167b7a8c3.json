{"ast":null,"code":"var _jsxFileName = \"D:\\\\it_inventory.localhost\\\\frontend\\\\src\\\\components\\\\AssetList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AssetList.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom'; // Импортируем useLocation\nimport { Container, Typography, Box, TextField, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Alert, Snackbar, TablePagination, TableSortLabel, Checkbox, MenuItem, Menu, IconButton, CircularProgress } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetList = ({\n  currentUser\n}) => {\n  _s();\n  const [assets, setAssets] = useState([]);\n  const [filteredAssets, setFilteredAssets] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [types, setTypes] = useState([]); // Для отображения имени типа\n  const [statuses, setStatuses] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedAssets, setSelectedAssets] = useState([]);\n  const [sortColumn, setSortColumn] = useState('inventory_number');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [assetsToDelete, setAssetsToDelete] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // <<<--- НОВОЕ: Состояния для управления дополнительными колонками\n  const [extraColumns, setExtraColumns] = useState([]); // Массив ключей дополнительных колонок\n  const [anchorEl, setAnchorEl] = useState(null); // Для управления меню\n  const openMenu = Boolean(anchorEl);\n\n  // <<<--- НОВОЕ: Состояние для диалога подтверждения навигации\n  const [navDialogOpen, setNavDialogOpen] = useState(false);\n  const [nextLocation, setNextLocation] = useState(null);\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation(); // Получаем текущую локацию\n\n  // <<<--- НОВОЕ: Функция для форматирования ФИО\n  const formatEmployeeName = useCallback(fullName => {\n    if (!fullName) return 'Не указано';\n    const parts = fullName.trim().split(/\\s+/);\n    if (parts.length === 0) return 'Не указано';\n    if (parts.length === 1) return parts[0];\n    // Фамилия И.О.\n    return `${parts[0]} ${parts.slice(1).map(part => part.charAt(0).toUpperCase() + '.').join('')}`.trim();\n  }, []); // Не зависит от внешних переменных\n\n  // <<<--- НОВОЕ: Обработчик beforeunload\n  const handleBeforeUnload = useCallback(event => {\n    if (selectedAssets.length > 0) {\n      event.preventDefault();\n      // Chrome требует установку returnValue\n      event.returnValue = '';\n      return '';\n    }\n  }, [selectedAssets]);\n\n  // <<<--- НОВОЕ: Эффект для установки/снятия beforeunload listener\n  useEffect(() => {\n    if (selectedAssets.length > 0) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    } else {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [selectedAssets, handleBeforeUnload]);\n\n  // <<<--- НОВОЕ: Обработчик перехода (для Prompt или ручной навигации)\n  // Это упрощённая версия. Для полноценного Prompt из RRv6 нужно больше настройки.\n  const handleNavigationAttempt = useCallback(to => {\n    if (selectedAssets.length > 0 && !confirmedNavigation) {\n      // Предотвращаем автоматическую навигацию браузера\n      if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите покинуть страницу?\")) {\n        setConfirmedNavigation(true);\n        // Откладываем навигацию на следующий тик, чтобы сначала обновилось состояние\n        setTimeout(() => navigate(to), 0);\n      }\n      return false; // Предотвращаем немедленный переход\n    }\n    return true; // Разрешаем переход\n  }, [selectedAssets, confirmedNavigation, navigate]);\n\n  // Загрузка данных\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const [assetsRes, typesRes, statusesRes, departmentsRes, employeesRes] = await Promise.all([axios.get(`${API_BASE_URL}/api/assets`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/types`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/statuses`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/departments`, {\n          withCredentials: true\n        }), axios.get(`${API_BASE_URL}/api/employees`, {\n          withCredentials: true\n        })]);\n        setAssets(assetsRes.data);\n        setTypes(typesRes.data);\n        setStatuses(statusesRes.data);\n        setDepartments(departmentsRes.data);\n        setEmployees(employeesRes.data);\n        setFilteredAssets(assetsRes.data);\n      } catch (err) {\n        console.error('Ошибка загрузки данных:', err);\n        if (err.response && err.response.status === 401) {\n          setError('Ошибка аутентификации. Пожалуйста, войдите снова.');\n        } else {\n          setError('Ошибка загрузки данных. Пожалуйста, попробуйте позже.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Функции для получения имен по ID\n  const getTypeName = useCallback(typeId => {\n    const type = types.find(t => t.id === typeId);\n    return type ? type.name : 'Не указано';\n  }, [types]); // Зависит только от types\n\n  const getStatusName = useCallback(statusId => {\n    const status = statuses.find(s => s.id === statusId);\n    return status ? status.name : 'Не указано';\n  }, [statuses]); // Зависит только от statuses\n\n  const getDepartmentName = useCallback(deptId => {\n    const dept = departments.find(d => d.id === deptId);\n    return dept ? dept.name : 'Не указано';\n  }, [departments]); // Зависит только от departments\n\n  const getEmployeeName = useCallback(empId => {\n    const emp = employees.find(e => e.id === empId);\n    // Используем форматирование ФИО\n    return emp ? formatEmployeeName(emp.name) : 'Не указано';\n  }, [employees]); // Зависит только от employees\n\n  // Фильтрация и сортировка\n  useEffect(() => {\n    let result = assets;\n\n    // Поиск\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(asset => {\n        // Создаем составное \"Наименование\"\n        const fullName = `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.toLowerCase().trim();\n\n        // Базовые поля для поиска\n        const baseFieldsMatch = asset.inventory_number && asset.inventory_number.toLowerCase().includes(term) || fullName.includes(term) || getEmployeeName(asset.responsible_person).toLowerCase().includes(term) || getDepartmentName(asset.department_id).toLowerCase().includes(term) || asset.room && asset.room.toLowerCase().includes(term);\n\n        // Дополнительные поля для поиска\n        let extraFieldsMatch = false;\n        if (extraColumns.length > 0) {\n          extraFieldsMatch = extraColumns.some(colKey => {\n            if (colKey === 'serial_number' && asset.serial_number) {\n              return asset.serial_number.toLowerCase().includes(term);\n            }\n            if (colKey === 'CPU' && asset.CPU) {\n              return asset.CPU.toLowerCase().includes(term);\n            }\n            if (colKey === 'RAM' && asset.RAM) {\n              return asset.RAM.toLowerCase().includes(term);\n            }\n            if (colKey === 'Drive' && asset.Drive) {\n              return asset.Drive.toLowerCase().includes(term);\n            }\n            if (colKey === 'OS' && asset.OS) {\n              return asset.OS.toLowerCase().includes(term);\n            }\n            if (colKey === 'IP-address' && asset['IP-address']) {\n              return asset['IP-address'].toLowerCase().includes(term);\n            }\n            if (colKey === 'status_id') {\n              return getStatusName(asset.status_id).toLowerCase().includes(term);\n            }\n            if (colKey === 'actual_user' && asset.actual_user) {\n              return asset.actual_user.toLowerCase().includes(term);\n            }\n            if (colKey === 'purchase_date' && asset.purchase_date) {\n              return asset.purchase_date.toLowerCase().includes(term);\n            }\n            if (colKey === 'number' && asset.number) {\n              return asset.number.toLowerCase().includes(term);\n            }\n            return false;\n          });\n        }\n        return baseFieldsMatch || extraFieldsMatch;\n      });\n    }\n\n    // Сортировка\n    result = [...result].sort((a, b) => {\n      let aValue = a[sortColumn];\n      let bValue = b[sortColumn];\n\n      // Для специальных полей, которые требуют преобразования\n      if (sortColumn === 'type_id') {\n        aValue = getTypeName(aValue);\n        bValue = getTypeName(bValue);\n      } else if (sortColumn === 'status_id') {\n        aValue = getStatusName(aValue);\n        bValue = getStatusName(bValue);\n      } else if (sortColumn === 'department_id') {\n        aValue = getDepartmentName(aValue);\n        bValue = getDepartmentName(bValue);\n      } else if (sortColumn === 'responsible_person') {\n        // <<<--- ИЗМЕНЕНО: Используем форматирование ФИО для сортировки\n        aValue = getEmployeeName(aValue);\n        bValue = getEmployeeName(bValue);\n      } else if (sortColumn === 'purchase_date') {\n        aValue = aValue ? new Date(aValue) : new Date(0);\n        bValue = bValue ? new Date(bValue) : new Date(0);\n        // Сравнение дат\n        if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n        return 0;\n      } else if (sortColumn === 'CPU' || sortColumn === 'RAM' || sortColumn === 'Drive') {\n        // <<<--- ИЗМЕНЕНО: Логика сортировки для текстовых полей CPU/RAM/Drive\n        // Простая лексикографическая сортировка для текстовых значений\n        aValue = (aValue || '').toString().toLowerCase();\n        bValue = (bValue || '').toString().toLowerCase();\n      } else if (sortColumn === 'number') {\n        // <<<--- ДОБАВЛЕНО: Логика сортировки для поля \"Номер\"\n        // Предполагаем, что это текстовое поле, сортируем как строку\n        aValue = (aValue || '').toString().toLowerCase();\n        bValue = (bValue || '').toString().toLowerCase();\n      } else if (typeof aValue === 'string') {\n        aValue = aValue.toLowerCase();\n        bValue = bValue.toLowerCase();\n      }\n\n      // Общее сравнение для строк и чисел\n      if (aValue < bValue) {\n        return sortOrder === 'asc' ? -1 : 1;\n      }\n      if (aValue > bValue) {\n        return sortOrder === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    setFilteredAssets(result);\n    setPage(0); // Сбросить на первую страницу после фильтрации/сортировки\n  }, [assets, searchTerm, sortColumn, sortOrder, types, statuses, departments, employees, extraColumns, getEmployeeName, getDepartmentName, getStatusName, getTypeName]);\n\n  // Сортировка\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortOrder('asc');\n    }\n  };\n\n  // Пагинация\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Выбор активов\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = paginatedAssets.map(asset => asset.id);\n      setSelectedAssets(newSelected);\n      return;\n    }\n    setSelectedAssets([]);\n  };\n  const handleClick = (event, id) => {\n    const selectedIndex = selectedAssets.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedAssets, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedAssets.slice(1));\n    } else if (selectedIndex === selectedAssets.length - 1) {\n      newSelected = newSelected.concat(selectedAssets.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selectedAssets.slice(0, selectedIndex), selectedAssets.slice(selectedIndex + 1));\n    }\n    setSelectedAssets(newSelected);\n  };\n  const isSelected = id => selectedAssets.indexOf(id) !== -1;\n\n  // Пагинация\n  const paginatedAssets = filteredAssets.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  const isAllSelected = paginatedAssets.length > 0 && selectedAssets.length === paginatedAssets.length;\n\n  // <<<--- НОВОЕ: Логика для дополнительных колонок\n  const availableExtraColumns = [{\n    key: 'serial_number',\n    label: 'Серийный номер'\n  }, {\n    key: 'CPU',\n    label: 'Процессор'\n  }, {\n    key: 'RAM',\n    label: 'Оперативная память (ГБ)'\n  }, {\n    key: 'Drive',\n    label: 'Диск (HDD/SSD)'\n  }, {\n    key: 'OS',\n    label: 'Операционная система'\n  }, {\n    key: 'IP-address',\n    label: 'IP-адрес'\n  },\n  // Используем имя из JSON\n  {\n    key: 'status_id',\n    label: 'Статус'\n  }, {\n    key: 'actual_user',\n    label: 'Фактический пользователь'\n  }, {\n    key: 'purchase_date',\n    label: 'Дата покупки'\n  }, {\n    key: 'number',\n    label: 'Номер'\n  }];\n  const handleAddColumnClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleAddColumnClose = () => {\n    setAnchorEl(null);\n  };\n  const handleAddColumnSelect = columnKey => {\n    if (!extraColumns.includes(columnKey)) {\n      setExtraColumns([...extraColumns, columnKey]);\n    }\n    handleAddColumnClose();\n  };\n  const handleRemoveExtraColumn = columnKeyToRemove => {\n    setExtraColumns(extraColumns.filter(key => key !== columnKeyToRemove));\n  };\n\n  // Печать QR-кодов\n  const handlePrintQRCode = async () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите хотя бы один актив',\n        severity: 'warning'\n      });\n      return;\n    }\n    try {\n      const res = await axios.post(`${API_BASE_URL}/api/qrcodes`, {\n        ids: selectedAssets\n      }, {\n        withCredentials: true\n      });\n      const codes = res.data;\n      let htmlContent = `\n        <html>\n          <head>\n            <style>\n              @page {\n                size: A4;\n                margin: 0;\n              }\n\n              body {\n                width: 21cm;\n                padding: 0;\n                background-color: #fff;\n                font-family: Arial, sans-serif;\n              }\n\n              .page {\n                display: flex;\n                flex-wrap: wrap;\n                gap: 10px;\n                padding: 20px;\n                box-sizing: border-box;\n                page-break-after: always;\n                break-after: page;\n              }\n\n              .qr-wrapper {\n                width: 3cm;\n                height: 3cm;\n                position: relative;\n                text-align: center;\n                font-size: 10px;\n                box-sizing: border-box;\n                page-break-inside: avoid;\n                break-inside: avoid;\n              }\n\n              .qr-container {\n                width: 100%;\n                height: calc (100%);\n                display: flex;\n                justify-content: center;\n                align-items: center;\n              }\n\n              img {\n                max-width: 100%;\n                max-height: 100%;\n                object-fit: contain;\n              }\n\n              .text-top,\n              .text-bottom {\n                position: absolute;\n                left: 50%;\n                transform: translateX(-50%);\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                width: 90%;\n                font-size: 8px;\n              }\n\n              .text-top {\n                top: 0;\n              }\n\n              .text-bottom {\n                bottom: 0;\n              }\n            </style>\n          </head>\n          <body>\n      `;\n      const itemsPerPage = 48;\n      for (let i = 0; i < codes.length; i += itemsPerPage) {\n        const pageItems = codes.slice(i, i + itemsPerPage);\n        htmlContent += `<div class=\"page\">`;\n        pageItems.forEach(code => {\n          htmlContent += `\n            <div class=\"qr-wrapper\">\n              <div class=\"qr-container\">\n                <img src=\"data:image/png;base64,${code.qr_base64}\" />\n              </div>\n              <span class=\"text-top\">${code.full_name || ''}</span>\n              <span class=\"text-bottom\">${code.inventory_number || ''}</span>\n            </div>\n          `;\n        });\n        htmlContent += `</div>`;\n      }\n      htmlContent += '</body></html>';\n      const printWindow = window.open('', '_blank');\n      printWindow.document.write(htmlContent);\n      setTimeout(() => {\n        printWindow.print();\n        printWindow.close();\n      }, 500);\n    } catch (err) {\n      console.error('Ошибка при генерации QR-кодов:', err);\n      setSnackbar({\n        open: true,\n        message: 'Не удалось получить QR-коды с сервера',\n        severity: 'error'\n      });\n    }\n  };\n\n  // Экспорт в Excel\n  const handleExportExcel = () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите хотя бы один актив для экспорта',\n        severity: 'warning'\n      });\n      return;\n    }\n    const selectedAssetObjects = assets.filter(asset => selectedAssets.includes(asset.id));\n\n    // Подготавливаем данные для экспорта, включая все отображаемые колонки\n    const dataToExport = selectedAssetObjects.map(asset => {\n      const row = {\n        'Инвентарный номер': asset.inventory_number || '',\n        'Наименование': `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim(),\n        'Ответственный': getEmployeeName(asset.responsible_person),\n        'Отдел': getDepartmentName(asset.department_id),\n        'Помещение': asset.room || ''\n      };\n\n      // Добавляем данные для дополнительных колонок\n      extraColumns.forEach(colKey => {\n        const columnDef = availableExtraColumns.find(col => col.key === colKey);\n        if (columnDef) {\n          if (colKey === 'status_id') {\n            row[columnDef.label] = getStatusName(asset.status_id);\n          } else if (colKey === 'purchase_date' && asset.purchase_date) {\n            row[columnDef.label] = new Date(asset.purchase_date).toLocaleDateString();\n          } else {\n            // Для остальных полей используем имя из JSON\n            row[columnDef.label] = asset[colKey] || '';\n          }\n        }\n      });\n      return row;\n    });\n\n    // Создаем CSV контент\n    const allHeaders = Object.keys(dataToExport[0]);\n    const headers = allHeaders.join(';') + '\\n';\n    const rows = dataToExport.map(obj => Object.values(obj).map(value => `\"${value}\"`).join(';')).join('\\n');\n    const csvContent = '\\uFEFF' + headers + rows; // BOM для UTF-8\n\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `Оборудование_${new Date().toISOString().slice(0, 10)}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Удаление активов\n  const handleDeleteSelected = () => {\n    if (selectedAssets.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'Выберите активы для удаления',\n        severity: 'warning'\n      });\n      return;\n    }\n    setAssetsToDelete(selectedAssets);\n    setDeleteDialogOpen(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      await Promise.all(assetsToDelete.map(id => axios.delete(`${API_BASE_URL}/api/assets/${id}`, {\n        withCredentials: true\n      })));\n      setAssets(assets.filter(asset => !assetsToDelete.includes(asset.id)));\n      setSelectedAssets([]); // Очищаем выбор\n      setAssetsToDelete([]); // Очищаем список на удаление\n      setSnackbar({\n        open: true,\n        message: 'Активы успешно удалены',\n        severity: 'success'\n      });\n    } catch (err) {\n      console.error('Ошибка при удалении активов:', err);\n      setSnackbar({\n        open: true,\n        message: 'Ошибка при удалении активов',\n        severity: 'error'\n      });\n    } finally {\n      setDeleteDialogOpen(false);\n    }\n  };\n  const closeDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setAssetsToDelete([]);\n  };\n\n  // <<<--- НОВОЕ: Обработчики для диалога навигации\n  const handleNavDialogClose = (agree = false) => {\n    setNavDialogOpen(false);\n    if (agree && nextLocation) {\n      setConfirmedNavigation(true);\n      // Навигация на отложенную локацию\n      setTimeout(() => navigate(nextLocation), 0);\n    } else {\n      // Сброс состояния, если пользователь отменил\n      setNextLocation(null);\n    }\n  };\n\n  // <<<--- НОВОЕ: Эффект для сброса confirmedNavigation после навигации\n  useEffect(() => {\n    if (confirmedNavigation) {\n      setConfirmedNavigation(false);\n      setSelectedAssets([]); // Опционально: сбросить выбор после навигации\n    }\n  }, [location, confirmedNavigation]);\n\n  // Уведомления\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 626,\n    columnNumber: 5\n  }, this);\n\n  // <<<--- НОВОЕ: Определяем количество базовых колонок + 1 (для кнопки +)\n  const baseColumnCount = 5 + 1; // Инвентарный номер, Наименование, Ответственный, Отдел, Помещение, кнопка +\n  const totalColumnCount = baseColumnCount + extraColumns.length;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      style: {\n        textAlign: 'center',\n        fontSize: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        marginBottom: '16px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), selectedAssets.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      align: \"left\",\n      gutterBottom: true,\n      children: [\"\\u0412\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043E: \", selectedAssets.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      mb: 2,\n      flexWrap: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleExportExcel,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePrintQRCode,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), currentUser && currentUser.role === 'admin' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleDeleteSelected,\n        disabled: selectedAssets.length === 0,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this), currentUser && currentUser.role === 'admin' && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => {\n          if (selectedAssets.length > 0) {\n            if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите покинуть страницу?\")) {\n              setSelectedAssets([]); // Очищаем выбор перед навигацией\n              navigate('/assets/new');\n            }\n          } else {\n            navigate('/assets/new');\n          }\n        },\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                indeterminate: selectedAssets.length > 0 && selectedAssets.length < paginatedAssets.length,\n                checked: isAllSelected,\n                onChange: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'inventory_number',\n                direction: sortColumn === 'inventory_number' ? sortOrder : 'asc',\n                onClick: () => handleSort('inventory_number'),\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u0418\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'type_id',\n                direction: sortColumn === 'type_id' ? sortOrder : 'asc',\n                onClick: () => handleSort('type_id'),\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'responsible_person',\n                direction: sortColumn === 'responsible_person' ? sortOrder : 'asc',\n                onClick: () => handleSort('responsible_person'),\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'department_id',\n                direction: sortColumn === 'department_id' ? sortOrder : 'asc',\n                onClick: () => handleSort('department_id'),\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u041E\\u0442\\u0434\\u0435\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: sortColumn === 'room',\n                direction: sortColumn === 'room' ? sortOrder : 'asc',\n                onClick: () => handleSort('room'),\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold',\n                width: '50px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"success\" // Зелёная кнопка\n                ,\n                onClick: handleAddColumnClick,\n                size: \"small\",\n                \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043B\\u043E\\u043D\\u043A\\u0443\",\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                anchorEl: anchorEl,\n                open: openMenu,\n                onClose: handleAddColumnClose,\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'center'\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'center'\n                },\n                children: [availableExtraColumns.filter(col => !extraColumns.includes(col.key)) // Показываем только НЕдобавленные\n                .map(col => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleAddColumnSelect(col.key),\n                  children: col.label\n                }, col.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 23\n                }, this)), availableExtraColumns.filter(col => !extraColumns.includes(col.key)).length === 0 && /*#__PURE__*/_jsxDEV(MenuItem, {\n                  disabled: true,\n                  children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u043A\\u043E\\u043B\\u043E\\u043D\\u043E\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this), extraColumns.map(colKey => {\n              const columnDef = availableExtraColumns.find(col => col.key === colKey);\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold',\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortColumn === colKey,\n                  direction: sortColumn === colKey ? sortOrder : 'asc',\n                  onClick: () => handleSort(colKey),\n                  sx: {\n                    fontWeight: 'bold',\n                    paddingRight: '24px'\n                  } // Отступ для крестика\n                  ,\n                  children: columnDef ? columnDef.label : colKey\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleRemoveExtraColumn(colKey),\n                  sx: {\n                    position: 'absolute',\n                    top: '50%',\n                    right: 0,\n                    transform: 'translateY(-50%)',\n                    color: 'red',\n                    // Красный крестик\n                    opacity: 0,\n                    // Скрыто по умолчанию\n                    transition: 'opacity 0.2s',\n                    padding: '2px',\n                    '&:hover': {\n                      backgroundColor: 'rgba(255, 0, 0, 0.1)'\n                    }\n                  },\n                  className: \"remove-column-button\" // Для стилей наведения\n                  ,\n                  children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 21\n                }, this)]\n              }, colKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paginatedAssets.length > 0 ? paginatedAssets.map(asset => {\n            const isItemSelected = isSelected(asset.id);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: event => {\n                if (event.target.type !== 'checkbox') {\n                  // <<<--- ИЗМЕНЕНО: Проверка перед навигацией\n                  if (selectedAssets.length > 0) {\n                    if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите открыть карточку?\")) {\n                      navigate(`/assets/${asset.id}`);\n                    }\n                  } else {\n                    navigate(`/assets/${asset.id}`);\n                  }\n                }\n              },\n              selected: isItemSelected,\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isItemSelected,\n                  onChange: event => handleClick(event, asset.id),\n                  onClick: event => event.stopPropagation() // Останавливаем всплытие, чтобы не открывать карточку\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.inventory_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getEmployeeName(asset.responsible_person) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getDepartmentName(asset.department_id) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: asset.room || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 21\n              }, this), extraColumns.map(colKey => {\n                if (colKey === 'status_id') {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: getStatusName(asset.status_id) || '-'\n                  }, colKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 32\n                  }, this);\n                }\n                if (colKey === 'purchase_date' && asset.purchase_date) {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: new Date(asset.purchase_date).toLocaleDateString()\n                  }, colKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 32\n                  }, this);\n                }\n                // Для остальных полей используем имя из JSON\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: asset[colKey] || '-'\n                }, colKey, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 30\n                }, this);\n              })]\n            }, asset.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: totalColumnCount,\n              align: \"center\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 50, 100],\n      component: \"div\",\n      count: filteredAssets.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage,\n      labelRowsPerPage: \"\\u0421\\u0442\\u0440\\u043E\\u043A \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435:\",\n      labelDisplayedRows: ({\n        from,\n        to,\n        count\n      }) => `${from}-${to} из ${count}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: closeDeleteDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Подтвердите удаление\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: [\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", assetsToDelete.length, \" \\u0430\\u043A\\u0442\\u0438\\u0432(\\u043E\\u0432)? \\u042D\\u0442\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDeleteDialog,\n          color: \"primary\",\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDelete,\n          color: \"error\",\n          autoFocus: true,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: navDialogOpen,\n      onClose: () => handleNavDialogClose(false),\n      \"aria-labelledby\": \"nav-dialog-title\",\n      \"aria-describedby\": \"nav-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"nav-dialog-title\",\n        children: \"Подтвердите переход\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"nav-dialog-description\",\n          children: \"\\u0423 \\u0432\\u0430\\u0441 \\u0435\\u0441\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u044B. \\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043A\\u0438\\u043D\\u0443\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNavDialogClose(false),\n          color: \"primary\",\n          children: \"\\u041E\\u0441\\u0442\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNavDialogClose(true),\n          color: \"error\",\n          autoFocus: true,\n          children: \"\\u041F\\u043E\\u043A\\u0438\\u043D\\u0443\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .MuiTableCell-root:hover .remove-column-button {\n          opacity: 1;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 636,\n    columnNumber: 5\n  }, this);\n};\n_s(AssetList, \"kduukQuS2GPWEQsmcEABshiSzQU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AssetList;\nexport default AssetList;\nvar _c;\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","Container","Typography","Box","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Alert","Snackbar","TablePagination","TableSortLabel","Checkbox","MenuItem","Menu","IconButton","CircularProgress","AddIcon","CloseIcon","axios","API_BASE_URL","jsxDEV","_jsxDEV","AssetList","currentUser","_s","assets","setAssets","filteredAssets","setFilteredAssets","searchTerm","setSearchTerm","types","setTypes","statuses","setStatuses","departments","setDepartments","employees","setEmployees","selectedAssets","setSelectedAssets","sortColumn","setSortColumn","sortOrder","setSortOrder","page","setPage","rowsPerPage","setRowsPerPage","snackbar","setSnackbar","open","message","severity","deleteDialogOpen","setDeleteDialogOpen","assetsToDelete","setAssetsToDelete","loading","setLoading","error","setError","extraColumns","setExtraColumns","anchorEl","setAnchorEl","openMenu","Boolean","navDialogOpen","setNavDialogOpen","nextLocation","setNextLocation","confirmedNavigation","setConfirmedNavigation","navigate","location","formatEmployeeName","fullName","parts","trim","split","length","slice","map","part","charAt","toUpperCase","join","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","handleNavigationAttempt","to","confirm","setTimeout","fetchData","assetsRes","typesRes","statusesRes","departmentsRes","employeesRes","Promise","all","get","withCredentials","data","err","console","response","status","getTypeName","typeId","type","find","t","id","name","getStatusName","statusId","s","getDepartmentName","deptId","dept","d","getEmployeeName","empId","emp","e","result","term","toLowerCase","filter","asset","type_id","brand","model","baseFieldsMatch","inventory_number","includes","responsible_person","department_id","room","extraFieldsMatch","some","colKey","serial_number","CPU","RAM","Drive","OS","status_id","actual_user","purchase_date","number","sort","a","b","aValue","bValue","Date","toString","handleSort","column","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelected","paginatedAssets","handleClick","selectedIndex","indexOf","concat","isSelected","isAllSelected","availableExtraColumns","key","label","handleAddColumnClick","currentTarget","handleAddColumnClose","handleAddColumnSelect","columnKey","handleRemoveExtraColumn","columnKeyToRemove","handlePrintQRCode","res","post","ids","codes","htmlContent","itemsPerPage","i","pageItems","forEach","code","qr_base64","full_name","printWindow","document","write","print","close","handleExportExcel","selectedAssetObjects","dataToExport","row","columnDef","col","toLocaleDateString","allHeaders","Object","keys","headers","rows","obj","values","csvContent","blob","Blob","url","URL","createObjectURL","link","createElement","setAttribute","toISOString","style","visibility","body","appendChild","click","removeChild","handleDeleteSelected","confirmDelete","delete","closeDeleteDialog","handleNavDialogClose","agree","handleCloseSnackbar","maxWidth","marginTop","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","baseColumnCount","totalColumnCount","variant","gutterBottom","fontSize","fullWidth","onChange","marginBottom","color","align","display","gap","mb","flexWrap","onClick","disabled","role","component","padding","indeterminate","sx","fontWeight","active","direction","width","size","onClose","anchorOrigin","vertical","horizontal","transformOrigin","position","paddingRight","top","right","transform","opacity","transition","backgroundColor","className","isItemSelected","hover","selected","cursor","stopPropagation","colSpan","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","from","autoFocus","autoHideDuration","_c","$RefreshReg$"],"sources":["D:/it_inventory.localhost/frontend/src/components/AssetList.js"],"sourcesContent":["// frontend/src/components/AssetList.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom'; // Импортируем useLocation\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Alert,\r\n  Snackbar,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  Menu,\r\n  IconButton,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config'; // Импорт базового URL\r\n\r\nconst AssetList = ({ currentUser }) => {\r\n  const [assets, setAssets] = useState([]);\r\n  const [filteredAssets, setFilteredAssets] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [types, setTypes] = useState([]); // Для отображения имени типа\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedAssets, setSelectedAssets] = useState([]);\r\n  const [sortColumn, setSortColumn] = useState('inventory_number');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(50);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [assetsToDelete, setAssetsToDelete] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // <<<--- НОВОЕ: Состояния для управления дополнительными колонками\r\n  const [extraColumns, setExtraColumns] = useState([]); // Массив ключей дополнительных колонок\r\n  const [anchorEl, setAnchorEl] = useState(null); // Для управления меню\r\n  const openMenu = Boolean(anchorEl);\r\n\r\n  // <<<--- НОВОЕ: Состояние для диалога подтверждения навигации\r\n  const [navDialogOpen, setNavDialogOpen] = useState(false);\r\n  const [nextLocation, setNextLocation] = useState(null);\r\n  const [confirmedNavigation, setConfirmedNavigation] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation(); // Получаем текущую локацию\r\n\r\n  // <<<--- НОВОЕ: Функция для форматирования ФИО\r\n  const formatEmployeeName = useCallback((fullName) => {\r\n    if (!fullName) return 'Не указано';\r\n    const parts = fullName.trim().split(/\\s+/);\r\n    if (parts.length === 0) return 'Не указано';\r\n    if (parts.length === 1) return parts[0];\r\n    // Фамилия И.О.\r\n    return `${parts[0]} ${parts.slice(1).map(part => part.charAt(0).toUpperCase() + '.').join('')}`.trim();\r\n  }, []); // Не зависит от внешних переменных\r\n\r\n  // <<<--- НОВОЕ: Обработчик beforeunload\r\n  const handleBeforeUnload = useCallback((event) => {\r\n    if (selectedAssets.length > 0) {\r\n      event.preventDefault();\r\n      // Chrome требует установку returnValue\r\n      event.returnValue = '';\r\n      return '';\r\n    }\r\n  }, [selectedAssets]);\r\n\r\n  // <<<--- НОВОЕ: Эффект для установки/снятия beforeunload listener\r\n  useEffect(() => {\r\n    if (selectedAssets.length > 0) {\r\n      window.addEventListener('beforeunload', handleBeforeUnload);\r\n    } else {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [selectedAssets, handleBeforeUnload]);\r\n\r\n  // <<<--- НОВОЕ: Обработчик перехода (для Prompt или ручной навигации)\r\n  // Это упрощённая версия. Для полноценного Prompt из RRv6 нужно больше настройки.\r\n  const handleNavigationAttempt = useCallback((to) => {\r\n    if (selectedAssets.length > 0 && !confirmedNavigation) {\r\n      // Предотвращаем автоматическую навигацию браузера\r\n      if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите покинуть страницу?\")) {\r\n        setConfirmedNavigation(true);\r\n        // Откладываем навигацию на следующий тик, чтобы сначала обновилось состояние\r\n        setTimeout(() => navigate(to), 0);\r\n      }\r\n      return false; // Предотвращаем немедленный переход\r\n    }\r\n    return true; // Разрешаем переход\r\n  }, [selectedAssets, confirmedNavigation, navigate]);\r\n\r\n  // Загрузка данных\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        const [assetsRes, typesRes, statusesRes, departmentsRes, employeesRes] = await Promise.all([\r\n          axios.get(`${API_BASE_URL}/api/assets`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/types`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/statuses`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/departments`, { withCredentials: true }),\r\n          axios.get(`${API_BASE_URL}/api/employees`, { withCredentials: true }),\r\n        ]);\r\n\r\n        setAssets(assetsRes.data);\r\n        setTypes(typesRes.data);\r\n        setStatuses(statusesRes.data);\r\n        setDepartments(departmentsRes.data);\r\n        setEmployees(employeesRes.data);\r\n        setFilteredAssets(assetsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки данных:', err);\r\n        if (err.response && err.response.status === 401) {\r\n          setError('Ошибка аутентификации. Пожалуйста, войдите снова.');\r\n        } else {\r\n          setError('Ошибка загрузки данных. Пожалуйста, попробуйте позже.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Функции для получения имен по ID\r\n  const getTypeName = useCallback((typeId) => {\r\n    const type = types.find(t => t.id === typeId);\r\n    return type ? type.name : 'Не указано';\r\n  }, [types]); // Зависит только от types\r\n\r\n  const getStatusName = useCallback((statusId) => {\r\n    const status = statuses.find(s => s.id === statusId);\r\n    return status ? status.name : 'Не указано';\r\n  }, [statuses]); // Зависит только от statuses\r\n\r\n  const getDepartmentName = useCallback((deptId) => {\r\n    const dept = departments.find(d => d.id === deptId);\r\n    return dept ? dept.name : 'Не указано';\r\n  }, [departments]); // Зависит только от departments\r\n\r\n  const getEmployeeName = useCallback((empId) => {\r\n    const emp = employees.find(e => e.id === empId);\r\n    // Используем форматирование ФИО\r\n    return emp ? formatEmployeeName(emp.name) : 'Не указано';\r\n  }, [employees]); // Зависит только от employees\r\n\r\n  // Фильтрация и сортировка\r\n  useEffect(() => {\r\n    let result = assets;\r\n\r\n    // Поиск\r\n    if (searchTerm) {\r\n      const term = searchTerm.toLowerCase();\r\n      result = result.filter(asset => {\r\n        // Создаем составное \"Наименование\"\r\n        const fullName = `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.toLowerCase().trim();\r\n\r\n        // Базовые поля для поиска\r\n        const baseFieldsMatch =\r\n          (asset.inventory_number && asset.inventory_number.toLowerCase().includes(term)) ||\r\n          fullName.includes(term) ||\r\n          getEmployeeName(asset.responsible_person).toLowerCase().includes(term) ||\r\n          getDepartmentName(asset.department_id).toLowerCase().includes(term) ||\r\n          (asset.room && asset.room.toLowerCase().includes(term));\r\n\r\n        // Дополнительные поля для поиска\r\n        let extraFieldsMatch = false;\r\n        if (extraColumns.length > 0) {\r\n          extraFieldsMatch = extraColumns.some(colKey => {\r\n            if (colKey === 'serial_number' && asset.serial_number) {\r\n              return asset.serial_number.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'CPU' && asset.CPU) {\r\n              return asset.CPU.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'RAM' && asset.RAM) {\r\n              return asset.RAM.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'Drive' && asset.Drive) {\r\n              return asset.Drive.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'OS' && asset.OS) {\r\n              return asset.OS.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'IP-address' && asset['IP-address']) {\r\n              return asset['IP-address'].toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'status_id') {\r\n              return getStatusName(asset.status_id).toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'actual_user' && asset.actual_user) {\r\n              return asset.actual_user.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'purchase_date' && asset.purchase_date) {\r\n              return asset.purchase_date.toLowerCase().includes(term);\r\n            }\r\n            if (colKey === 'number' && asset.number) {\r\n              return asset.number.toLowerCase().includes(term);\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        return baseFieldsMatch || extraFieldsMatch;\r\n      });\r\n    }\r\n\r\n    // Сортировка\r\n    result = [...result].sort((a, b) => {\r\n      let aValue = a[sortColumn];\r\n      let bValue = b[sortColumn];\r\n\r\n      // Для специальных полей, которые требуют преобразования\r\n      if (sortColumn === 'type_id') {\r\n        aValue = getTypeName(aValue);\r\n        bValue = getTypeName(bValue);\r\n      } else if (sortColumn === 'status_id') {\r\n        aValue = getStatusName(aValue);\r\n        bValue = getStatusName(bValue);\r\n      } else if (sortColumn === 'department_id') {\r\n        aValue = getDepartmentName(aValue);\r\n        bValue = getDepartmentName(bValue);\r\n      } else if (sortColumn === 'responsible_person') {\r\n        // <<<--- ИЗМЕНЕНО: Используем форматирование ФИО для сортировки\r\n        aValue = getEmployeeName(aValue);\r\n        bValue = getEmployeeName(bValue);\r\n      } else if (sortColumn === 'purchase_date') {\r\n        aValue = aValue ? new Date(aValue) : new Date(0);\r\n        bValue = bValue ? new Date(bValue) : new Date(0);\r\n        // Сравнение дат\r\n        if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\r\n        if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\r\n        return 0;\r\n      } else if (sortColumn === 'CPU' || sortColumn === 'RAM' || sortColumn === 'Drive') {\r\n        // <<<--- ИЗМЕНЕНО: Логика сортировки для текстовых полей CPU/RAM/Drive\r\n        // Простая лексикографическая сортировка для текстовых значений\r\n        aValue = (aValue || '').toString().toLowerCase();\r\n        bValue = (bValue || '').toString().toLowerCase();\r\n      } else if (sortColumn === 'number') {\r\n        // <<<--- ДОБАВЛЕНО: Логика сортировки для поля \"Номер\"\r\n        // Предполагаем, что это текстовое поле, сортируем как строку\r\n        aValue = (aValue || '').toString().toLowerCase();\r\n        bValue = (bValue || '').toString().toLowerCase();\r\n      } else if (typeof aValue === 'string') {\r\n        aValue = aValue.toLowerCase();\r\n        bValue = bValue.toLowerCase();\r\n      }\r\n\r\n      // Общее сравнение для строк и чисел\r\n      if (aValue < bValue) {\r\n        return sortOrder === 'asc' ? -1 : 1;\r\n      }\r\n      if (aValue > bValue) {\r\n        return sortOrder === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    setFilteredAssets(result);\r\n    setPage(0); // Сбросить на первую страницу после фильтрации/сортировки\r\n  }, [assets, searchTerm, sortColumn, sortOrder, types, statuses, departments, employees, extraColumns, getEmployeeName, getDepartmentName, getStatusName, getTypeName]);\r\n\r\n  // Сортировка\r\n  const handleSort = (column) => {\r\n    if (sortColumn === column) {\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortColumn(column);\r\n      setSortOrder('asc');\r\n    }\r\n  };\r\n\r\n  // Пагинация\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Выбор активов\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = paginatedAssets.map((asset) => asset.id);\r\n      setSelectedAssets(newSelected);\r\n      return;\r\n    }\r\n    setSelectedAssets([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selectedAssets.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selectedAssets, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selectedAssets.slice(1));\r\n    } else if (selectedIndex === selectedAssets.length - 1) {\r\n      newSelected = newSelected.concat(selectedAssets.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selectedAssets.slice(0, selectedIndex),\r\n        selectedAssets.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelectedAssets(newSelected);\r\n  };\r\n\r\n  const isSelected = (id) => selectedAssets.indexOf(id) !== -1;\r\n\r\n  // Пагинация\r\n  const paginatedAssets = filteredAssets.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n  const isAllSelected = paginatedAssets.length > 0 && selectedAssets.length === paginatedAssets.length;\r\n\r\n  // <<<--- НОВОЕ: Логика для дополнительных колонок\r\n  const availableExtraColumns = [\r\n    { key: 'serial_number', label: 'Серийный номер' },\r\n    { key: 'CPU', label: 'Процессор' },\r\n    { key: 'RAM', label: 'Оперативная память (ГБ)' },\r\n    { key: 'Drive', label: 'Диск (HDD/SSD)' },\r\n    { key: 'OS', label: 'Операционная система' },\r\n    { key: 'IP-address', label: 'IP-адрес' }, // Используем имя из JSON\r\n    { key: 'status_id', label: 'Статус' },\r\n    { key: 'actual_user', label: 'Фактический пользователь' },\r\n    { key: 'purchase_date', label: 'Дата покупки' },\r\n    { key: 'number', label: 'Номер' },\r\n  ];\r\n\r\n  const handleAddColumnClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleAddColumnClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleAddColumnSelect = (columnKey) => {\r\n    if (!extraColumns.includes(columnKey)) {\r\n      setExtraColumns([...extraColumns, columnKey]);\r\n    }\r\n    handleAddColumnClose();\r\n  };\r\n\r\n  const handleRemoveExtraColumn = (columnKeyToRemove) => {\r\n    setExtraColumns(extraColumns.filter(key => key !== columnKeyToRemove));\r\n  };\r\n\r\n  // Печать QR-кодов\r\n  const handlePrintQRCode = async () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите хотя бы один актив', severity: 'warning' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(`${API_BASE_URL}/api/qrcodes`, {\r\n        ids: selectedAssets\r\n      }, { withCredentials: true });\r\n\r\n      const codes = res.data;\r\n\r\n      let htmlContent = `\r\n        <html>\r\n          <head>\r\n            <style>\r\n              @page {\r\n                size: A4;\r\n                margin: 0;\r\n              }\r\n\r\n              body {\r\n                width: 21cm;\r\n                padding: 0;\r\n                background-color: #fff;\r\n                font-family: Arial, sans-serif;\r\n              }\r\n\r\n              .page {\r\n                display: flex;\r\n                flex-wrap: wrap;\r\n                gap: 10px;\r\n                padding: 20px;\r\n                box-sizing: border-box;\r\n                page-break-after: always;\r\n                break-after: page;\r\n              }\r\n\r\n              .qr-wrapper {\r\n                width: 3cm;\r\n                height: 3cm;\r\n                position: relative;\r\n                text-align: center;\r\n                font-size: 10px;\r\n                box-sizing: border-box;\r\n                page-break-inside: avoid;\r\n                break-inside: avoid;\r\n              }\r\n\r\n              .qr-container {\r\n                width: 100%;\r\n                height: calc (100%);\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n              }\r\n\r\n              img {\r\n                max-width: 100%;\r\n                max-height: 100%;\r\n                object-fit: contain;\r\n              }\r\n\r\n              .text-top,\r\n              .text-bottom {\r\n                position: absolute;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                width: 90%;\r\n                font-size: 8px;\r\n              }\r\n\r\n              .text-top {\r\n                top: 0;\r\n              }\r\n\r\n              .text-bottom {\r\n                bottom: 0;\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n      `;\r\n\r\n      const itemsPerPage = 48;\r\n\r\n      for (let i = 0; i < codes.length; i += itemsPerPage) {\r\n        const pageItems = codes.slice(i, i + itemsPerPage);\r\n\r\n        htmlContent += `<div class=\"page\">`;\r\n\r\n        pageItems.forEach((code) => {\r\n          htmlContent += `\r\n            <div class=\"qr-wrapper\">\r\n              <div class=\"qr-container\">\r\n                <img src=\"data:image/png;base64,${code.qr_base64}\" />\r\n              </div>\r\n              <span class=\"text-top\">${code.full_name || ''}</span>\r\n              <span class=\"text-bottom\">${code.inventory_number || ''}</span>\r\n            </div>\r\n          `;\r\n        });\r\n\r\n        htmlContent += `</div>`;\r\n      }\r\n\r\n      htmlContent += '</body></html>';\r\n\r\n      const printWindow = window.open('', '_blank');\r\n      printWindow.document.write(htmlContent);\r\n\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n        printWindow.close();\r\n      }, 500);\r\n    } catch (err) {\r\n      console.error('Ошибка при генерации QR-кодов:', err);\r\n      setSnackbar({ open: true, message: 'Не удалось получить QR-коды с сервера', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Экспорт в Excel\r\n  const handleExportExcel = () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите хотя бы один актив для экспорта', severity: 'warning' });\r\n      return;\r\n    }\r\n\r\n    const selectedAssetObjects = assets.filter(asset => selectedAssets.includes(asset.id));\r\n\r\n    // Подготавливаем данные для экспорта, включая все отображаемые колонки\r\n    const dataToExport = selectedAssetObjects.map(asset => {\r\n      const row = {\r\n        'Инвентарный номер': asset.inventory_number || '',\r\n        'Наименование': `${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim(),\r\n        'Ответственный': getEmployeeName(asset.responsible_person),\r\n        'Отдел': getDepartmentName(asset.department_id),\r\n        'Помещение': asset.room || ''\r\n      };\r\n\r\n      // Добавляем данные для дополнительных колонок\r\n      extraColumns.forEach(colKey => {\r\n        const columnDef = availableExtraColumns.find(col => col.key === colKey);\r\n        if (columnDef) {\r\n          if (colKey === 'status_id') {\r\n            row[columnDef.label] = getStatusName(asset.status_id);\r\n          } else if (colKey === 'purchase_date' && asset.purchase_date) {\r\n            row[columnDef.label] = new Date(asset.purchase_date).toLocaleDateString();\r\n          } else {\r\n            // Для остальных полей используем имя из JSON\r\n            row[columnDef.label] = asset[colKey] || '';\r\n          }\r\n        }\r\n      });\r\n\r\n      return row;\r\n    });\r\n\r\n    // Создаем CSV контент\r\n    const allHeaders = Object.keys(dataToExport[0]);\r\n    const headers = allHeaders.join(';') + '\\n';\r\n    const rows = dataToExport.map(obj => Object.values(obj).map(value => `\"${value}\"`).join(';')).join('\\n');\r\n    const csvContent = '\\uFEFF' + headers + rows; // BOM для UTF-8\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `Оборудование_${new Date().toISOString().slice(0, 10)}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Удаление активов\r\n  const handleDeleteSelected = () => {\r\n    if (selectedAssets.length === 0) {\r\n      setSnackbar({ open: true, message: 'Выберите активы для удаления', severity: 'warning' });\r\n      return;\r\n    }\r\n    setAssetsToDelete(selectedAssets);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await Promise.all(\r\n        assetsToDelete.map(id =>\r\n          axios.delete(`${API_BASE_URL}/api/assets/${id}`, { withCredentials: true })\r\n        )\r\n      );\r\n      setAssets(assets.filter(asset => !assetsToDelete.includes(asset.id)));\r\n      setSelectedAssets([]); // Очищаем выбор\r\n      setAssetsToDelete([]); // Очищаем список на удаление\r\n      setSnackbar({ open: true, message: 'Активы успешно удалены', severity: 'success' });\r\n    } catch (err) {\r\n      console.error('Ошибка при удалении активов:', err);\r\n      setSnackbar({ open: true, message: 'Ошибка при удалении активов', severity: 'error' });\r\n    } finally {\r\n      setDeleteDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDeleteDialogOpen(false);\r\n    setAssetsToDelete([]);\r\n  };\r\n\r\n  // <<<--- НОВОЕ: Обработчики для диалога навигации\r\n  const handleNavDialogClose = (agree = false) => {\r\n    setNavDialogOpen(false);\r\n    if (agree && nextLocation) {\r\n      setConfirmedNavigation(true);\r\n      // Навигация на отложенную локацию\r\n      setTimeout(() => navigate(nextLocation), 0);\r\n    } else {\r\n      // Сброс состояния, если пользователь отменил\r\n      setNextLocation(null);\r\n    }\r\n  };\r\n\r\n  // <<<--- НОВОЕ: Эффект для сброса confirmedNavigation после навигации\r\n  useEffect(() => {\r\n    if (confirmedNavigation) {\r\n      setConfirmedNavigation(false);\r\n      setSelectedAssets([]); // Опционально: сбросить выбор после навигации\r\n    }\r\n  }, [location, confirmedNavigation]);\r\n\r\n  // Уведомления\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  if (loading) return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: '20px', textAlign: 'center' }}>\r\n      <CircularProgress />\r\n      <Typography>Загрузка...</Typography>\r\n    </Container>\r\n  );\r\n  if (error) return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: '20px' }}>\r\n      <Alert severity=\"error\">{error}</Alert>\r\n    </Container>\r\n  );\r\n\r\n  // <<<--- НОВОЕ: Определяем количество базовых колонок + 1 (для кнопки +)\r\n  const baseColumnCount = 5 + 1; // Инвентарный номер, Наименование, Ответственный, Отдел, Помещение, кнопка +\r\n  const totalColumnCount = baseColumnCount + extraColumns.length;\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" style={{ marginTop: '20px' }}>\r\n      {/* Стилизованный заголовок */}\r\n      <Typography variant=\"h5\" gutterBottom style={{ textAlign: 'center', fontSize: '30px' }}>\r\n        <strong>Оборудование</strong>\r\n      </Typography>\r\n\r\n      {/* Поисковая строка */}\r\n      <TextField\r\n        label=\"Поиск\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        style={{ marginBottom: '16px' }}\r\n      />\r\n      {selectedAssets.length > 0 && (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"left\" gutterBottom>\r\n          Выделено: {selectedAssets.length}\r\n        </Typography>\r\n      )}      \r\n\r\n      {/* Кнопки действий под строкой поиска */}\r\n      <Box display=\"flex\" gap={2} mb={2} flexWrap=\"wrap\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleExportExcel}\r\n          disabled={selectedAssets.length === 0}\r\n        >\r\n          Печать Excel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handlePrintQRCode}\r\n          disabled={selectedAssets.length === 0}\r\n        >\r\n          Печать QR\r\n        </Button>\r\n        {currentUser && currentUser.role === 'admin' && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={handleDeleteSelected}\r\n            disabled={selectedAssets.length === 0}\r\n          >\r\n            Удалить\r\n          </Button>\r\n        )}\r\n        {currentUser && currentUser.role === 'admin' && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => {\r\n               if (selectedAssets.length > 0) {\r\n                 if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите покинуть страницу?\")) {\r\n                   setSelectedAssets([]); // Очищаем выбор перед навигацией\r\n                   navigate('/assets/new');\r\n                 }\r\n               } else {\r\n                 navigate('/assets/new');\r\n               }\r\n            }}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          {/* <<<--- ИЗМЕНЕНО: Заголовки таблицы с динамическими колонками */}\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  indeterminate={selectedAssets.length > 0 && selectedAssets.length < paginatedAssets.length}\r\n                  checked={isAllSelected}\r\n                  onChange={handleSelectAllClick}\r\n                />\r\n              </TableCell>\r\n              {/* Базовые колонки */}\r\n              <TableCell sx={{ fontWeight: 'bold' }}>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'inventory_number'}\r\n                  direction={sortColumn === 'inventory_number' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('inventory_number')}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  Инвентарный номер\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold' }}>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'type_id'}\r\n                  direction={sortColumn === 'type_id' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('type_id')}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  Наименование\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold' }}>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'responsible_person'}\r\n                  direction={sortColumn === 'responsible_person' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('responsible_person')}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  Ответственный\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold' }}>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'department_id'}\r\n                  direction={sortColumn === 'department_id' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('department_id')}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  Отдел\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold' }}>\r\n                <TableSortLabel\r\n                  active={sortColumn === 'room'}\r\n                  direction={sortColumn === 'room' ? sortOrder : 'asc'}\r\n                  onClick={() => handleSort('room')}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  Помещение\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              {/* Кнопка \"+\" для добавления колонок */}\r\n              <TableCell sx={{ fontWeight: 'bold', width: '50px' }}>\r\n                <IconButton\r\n                  color=\"success\" // Зелёная кнопка\r\n                  onClick={handleAddColumnClick}\r\n                  size=\"small\"\r\n                  aria-label=\"Добавить колонку\"\r\n                >\r\n                  <AddIcon />\r\n                </IconButton>\r\n                {/* Меню для выбора колонок */}\r\n                <Menu\r\n                  anchorEl={anchorEl}\r\n                  open={openMenu}\r\n                  onClose={handleAddColumnClose}\r\n                  anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}\r\n                >\r\n                  {availableExtraColumns\r\n                    .filter(col => !extraColumns.includes(col.key)) // Показываем только НЕдобавленные\r\n                    .map(col => (\r\n                      <MenuItem key={col.key} onClick={() => handleAddColumnSelect(col.key)}>\r\n                        {col.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  {availableExtraColumns.filter(col => !extraColumns.includes(col.key)).length === 0 && (\r\n                    <MenuItem disabled>Нет доступных колонок</MenuItem>\r\n                  )}\r\n                </Menu>\r\n              </TableCell>\r\n              {/* Динамические дополнительные колонки */}\r\n              {extraColumns.map(colKey => {\r\n                const columnDef = availableExtraColumns.find(col => col.key === colKey);\r\n                return (\r\n                  <TableCell key={colKey} sx={{ fontWeight: 'bold', position: 'relative' }}>\r\n                    <TableSortLabel\r\n                      active={sortColumn === colKey}\r\n                      direction={sortColumn === colKey ? sortOrder : 'asc'}\r\n                      onClick={() => handleSort(colKey)}\r\n                      sx={{ fontWeight: 'bold', paddingRight: '24px' }} // Отступ для крестика\r\n                    >\r\n                      {columnDef ? columnDef.label : colKey}\r\n                    </TableSortLabel>\r\n                    {/* Кнопка \"крестик\" для удаления колонки */}\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => handleRemoveExtraColumn(colKey)}\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        right: 0,\r\n                        transform: 'translateY(-50%)',\r\n                        color: 'red', // Красный крестик\r\n                        opacity: 0, // Скрыто по умолчанию\r\n                        transition: 'opacity 0.2s',\r\n                        padding: '2px',\r\n                        '&:hover': {\r\n                          backgroundColor: 'rgba(255, 0, 0, 0.1)'\r\n                        }\r\n                      }}\r\n                      className=\"remove-column-button\" // Для стилей наведения\r\n                    >\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedAssets.length > 0 ? (\r\n              paginatedAssets.map((asset) => {\r\n                const isItemSelected = isSelected(asset.id);\r\n                return (\r\n                  <TableRow\r\n                    key={asset.id}\r\n                    hover\r\n                    onClick={(event) => {\r\n                      if (event.target.type !== 'checkbox') {\r\n                        // <<<--- ИЗМЕНЕНО: Проверка перед навигацией\r\n                        if (selectedAssets.length > 0) {\r\n                          if (window.confirm(\"У вас есть выделенные активы. Вы уверены, что хотите открыть карточку?\")) {\r\n                            navigate(`/assets/${asset.id}`);\r\n                          }\r\n                        } else {\r\n                          navigate(`/assets/${asset.id}`);\r\n                        }\r\n                      }\r\n                    }}\r\n                    selected={isItemSelected}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        onChange={(event) => handleClick(event, asset.id)}\r\n                        onClick={(event) => event.stopPropagation()} // Останавливаем всплытие, чтобы не открывать карточку\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{asset.inventory_number}</TableCell>\r\n                    <TableCell>{`${getTypeName(asset.type_id) || ''} ${asset.brand || ''} ${asset.model || ''}`.trim() || '-'}</TableCell>\r\n                    {/* <<<--- ИЗМЕНЕНО: Отображение ответственного в формате ФИО */}\r\n                    <TableCell>{getEmployeeName(asset.responsible_person) || '-'}</TableCell>\r\n                    <TableCell>{getDepartmentName(asset.department_id) || '-'}</TableCell>\r\n                    <TableCell>{asset.room || '-'}</TableCell>\r\n                    {/* Пустая ячейка для кнопки \"+\" */}\r\n                    <TableCell></TableCell>\r\n                    {/* Данные для дополнительных колонок */}\r\n                    {extraColumns.map(colKey => {\r\n                      if (colKey === 'status_id') {\r\n                        return <TableCell key={colKey}>{getStatusName(asset.status_id) || '-'}</TableCell>;\r\n                      }\r\n                      if (colKey === 'purchase_date' && asset.purchase_date) {\r\n                        return <TableCell key={colKey}>{new Date(asset.purchase_date).toLocaleDateString()}</TableCell>;\r\n                      }\r\n                      // Для остальных полей используем имя из JSON\r\n                      return <TableCell key={colKey}>{asset[colKey] || '-'}</TableCell>;\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={totalColumnCount} align=\"center\">\r\n                  Нет данных\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={filteredAssets.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage=\"Строк на странице:\"\r\n        labelDisplayedRows={({ from, to, count }) => `${from}-${to} из ${count}`}\r\n      />\r\n\r\n      {/* Диалог подтверждения удаления */}\r\n      <Dialog\r\n        open={deleteDialogOpen}\r\n        onClose={closeDeleteDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Подтвердите удаление\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Вы уверены, что хотите удалить {assetsToDelete.length} актив(ов)?\r\n            Это действие нельзя отменить.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDeleteDialog} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={confirmDelete} color=\"error\" autoFocus>\r\n            Удалить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* <<<--- НОВОЕ: Диалог подтверждения навигации */}\r\n      <Dialog\r\n        open={navDialogOpen}\r\n        onClose={() => handleNavDialogClose(false)}\r\n        aria-labelledby=\"nav-dialog-title\"\r\n        aria-describedby=\"nav-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"nav-dialog-title\">\r\n          {\"Подтвердите переход\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"nav-dialog-description\">\r\n            У вас есть выделенные активы. Вы уверены, что хотите покинуть страницу?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleNavDialogClose(false)} color=\"primary\">\r\n            Остаться\r\n          </Button>\r\n          <Button onClick={() => handleNavDialogClose(true)} color=\"error\" autoFocus>\r\n            Покинуть\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Уведомления */}\r\n      <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <style>{`\r\n        .MuiTableCell-root:hover .remove-column-button {\r\n          opacity: 1;\r\n        }\r\n      `}</style>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssetList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}