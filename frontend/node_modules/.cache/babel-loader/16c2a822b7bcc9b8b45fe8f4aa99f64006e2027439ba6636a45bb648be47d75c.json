{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-inventory\\\\frontend\\\\src\\\\components\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\n        setEmployees(empsRes.data);\n        setDepartments(depsRes.data);\n      } catch (err) {\n        console.error('Ошибка при загрузке данных:', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Группируем сотрудников по отделам\n  const employeesByDepartment = {};\n  employees.forEach(emp => {\n    if (!employeesByDepartment[emp.department_id]) {\n      employeesByDepartment[emp.department_id] = [];\n    }\n    employeesByDepartment[emp.department_id].push(emp);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: departments.map(dept => {\n        const deptEmployees = employeesByDepartment[dept.id] || [];\n\n        // Проверяем, есть ли сотрудники в отделе\n        if (deptEmployees.length === 0) {\n          return null; // Не отображаем пустые отделы\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            style: {\n              fontWeight: 'bold',\n              textAlign: 'center',\n              fontSize: '18px' // Устанавливаем одинаковый размер текста\n            },\n            children: dept.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: deptEmployees.map(emp => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, dept.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"lRuwdz2lnxTPjKEZWGTJiUKWzKE=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Paper","Typography","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","departments","setDepartments","fetchData","empsRes","get","depsRes","data","err","console","error","employeesByDepartment","forEach","emp","department_id","push","maxWidth","children","elevation","style","padding","marginTop","map","dept","deptEmployees","id","length","variant","gutterBottom","fontWeight","textAlign","fontSize","name","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/it-inventory/frontend/src/components/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from '@mui/material';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const empsRes = await axios.get('http://localhost:5000/api/employees');\r\n        const depsRes = await axios.get('http://localhost:5000/api/departments');\r\n\r\n        setEmployees(empsRes.data);\r\n        setDepartments(depsRes.data);\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке данных:', err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Группируем сотрудников по отделам\r\n  const employeesByDepartment = {};\r\n  employees.forEach(emp => {\r\n    if (!employeesByDepartment[emp.department_id]) {\r\n      employeesByDepartment[emp.department_id] = [];\r\n    }\r\n    employeesByDepartment[emp.department_id].push(emp);\r\n  });\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n\r\n        {/* Отображаем отделы и их сотрудников */}\r\n        {departments.map(dept => {\r\n          const deptEmployees = employeesByDepartment[dept.id] || [];\r\n\r\n          // Проверяем, есть ли сотрудники в отделе\r\n          if (deptEmployees.length === 0) {\r\n            return null; // Не отображаем пустые отделы\r\n          }\r\n\r\n          return (\r\n            <div key={dept.id}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                gutterBottom\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'center',\r\n                  fontSize: '18px', // Устанавливаем одинаковый размер текста\r\n                }}\r\n              >\r\n                {dept.name}\r\n              </Typography>\r\n              <Table size=\"small\">\r\n                <TableBody>\r\n                  {deptEmployees.map(emp => (\r\n                    <TableRow key={emp.id}>\r\n                      <TableCell>{emp.name}</TableCell> {/* Отображаем ФИО целиком */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}